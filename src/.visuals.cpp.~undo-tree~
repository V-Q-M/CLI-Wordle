(undo-tree-save-format-version . 1)
"4439af2e28decf82aa426b10db27fd75d44e1bea"
[nil nil nil nil (26692 25427 522645 40000) 0 nil]
([nil nil ((5097 . 5098) (#("\\" 0 1 (fontified t)) . -5097) (undo-tree-id0 . -1) 5098 (5094 . 5098) (#("\\" 0 1 (fontified t)) . -5094) (undo-tree-id1 . -1) 5095 (5093 . 5095) (5056 . 5062) (#("                 " 0 17 (fontified nil)) . 5056) (5102 . 5104) (5101 . 5102) (t 26692 25291 504925 836000)) nil (26692 25427 522642 847000) 0 nil])
([nil nil ((5025 . 5026) (t 26692 25427 557991 538000)) nil (26692 25483 591631 188000) 0 nil])
([nil nil ((5027 . 5031) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 5027) (undo-tree-id11 . 1) (5026 . 5027)) nil (26692 25483 591630 721000) 0 nil])
([nil nil ((#("    Typ 2 for 6 letter Wordle\\n \"
" 0 4 (fontified t) 4 10 (fontified t) 10 13 (face font-lock-keyword-face fontified t) 13 32 (fontified t) 32 33 (face font-lock-warning-face c-fl-syn-tab (15) fontified t) 33 34 (face font-lock-warning-face c-fl-syn-tab (15) fontified t)) . 5027) (undo-tree-id9 . -3) (undo-tree-id10 . 30) 5030) nil (26692 25483 591629 884000) 0 nil])
([nil nil ((#("      \"Type 3 for 7 letter Wordle\" << '\\n';
" 0 6 (fontified t) 6 34 (face font-lock-string-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (face font-lock-string-face fontified t) 39 40 (face font-lock-string-face fontified t) 40 41 (face font-lock-string-face fontified t) 41 42 (face font-lock-string-face fontified t) 42 43 (fontified t) 43 44 (fontified t)) . 5027) (undo-tree-id7 . -3) (undo-tree-id8 . 44) 5030) nil (26692 25483 591629 24000) 0 nil])
([nil nil ((1 . 5334) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

// void print_board(std::string entered_words[6][5], int game_state_code) {
void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    std::cout << left_margin
              << \"Type 1 for 5 letter Wordle\\n;
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }

  for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
    std::cout << left_margin;
    // top part
    top_part(i);
    // middle part
    middle_part(entered_words, i);
    // bottom part
    bottom_part(i);
  }

  print_keyboard();
}
" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 33 (c-in-sws t face font-lock-string-face fontified t) 33 34 (c-in-sws t fontified t) 34 35 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 35 42 (c-in-sws t face font-lock-preprocessor-face fontified t) 42 43 (c-in-sws t fontified t) 43 64 (c-in-sws t face font-lock-string-face fontified t) 64 65 (c-in-sws t fontified t) 65 66 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 66 73 (c-in-sws t face font-lock-preprocessor-face fontified t) 73 74 (c-in-sws t fontified t) 74 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 135 (c-in-sws t face font-lock-string-face fontified t) 135 136 (c-in-sws t fontified t) 136 137 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 137 144 (c-in-sws t face font-lock-preprocessor-face fontified t) 144 145 (c-in-sws t fontified t) 145 146 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 146 149 (c-in-sws t face font-lock-string-face fontified t) 149 150 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 150 151 (c-in-sws t fontified t) 151 152 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 152 159 (c-in-sws t face font-lock-preprocessor-face fontified t) 159 160 (c-in-sws t fontified t) 160 161 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 161 169 (c-in-sws t face font-lock-string-face fontified t) 169 170 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 170 171 (c-in-sws t fontified t) 171 172 (c-is-sws t c-in-sws t fontified t) 172 173 (c-is-sws t face font-lock-keyword-face fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 181 (face font-lock-constant-face fontified t) 181 183 (fontified t) 183 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 190 (fontified t) 190 198 (face font-lock-variable-name-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-string-face fontified t) 204 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 215 (face font-lock-constant-face fontified t) 215 217 (fontified t) 217 222 (face font-lock-type-face fontified t) 222 223 (face font-lock-type-face c-type c-decl-id-start fontified t) 223 224 (fontified t) 224 234 (face font-lock-variable-name-face fontified t) 234 237 (fontified t) 237 240 (face font-lock-string-face fontified t) 240 243 (fontified t) 243 244 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 244 245 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 245 386 (c-in-sws t face font-lock-comment-face fontified t) 386 420 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 420 421 (c-in-sws t fontified t) 421 422 (c-is-sws t face font-lock-keyword-face fontified t) 422 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 430 (face font-lock-constant-face fontified t) 430 432 (fontified t) 432 437 (face font-lock-type-face fontified t) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified t) 438 439 (fontified t) 439 448 (face font-lock-variable-name-face fontified t) 448 451 (fontified t) 451 454 (face font-lock-string-face fontified t) 454 455 (fontified t) 455 456 (c-is-sws t c-in-sws t fontified t) 456 457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 457 459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 459 468 (c-in-sws t face font-lock-comment-face fontified t) 468 469 (c-is-sws t face font-lock-keyword-face fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (fontified t) 474 477 (face font-lock-constant-face fontified t) 477 479 (fontified t) 479 484 (face font-lock-type-face fontified t) 484 485 (face font-lock-type-face c-type c-decl-id-start fontified t) 485 486 (fontified t) 486 495 (face font-lock-variable-name-face fontified t) 495 498 (fontified t) 498 501 (face font-lock-string-face fontified t) 501 503 (fontified t) 503 508 (face font-lock-keyword-face fontified t) 508 509 (fontified t) 509 512 (face font-lock-constant-face fontified t) 512 514 (fontified t) 514 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face c-type c-decl-id-start fontified t) 520 521 (fontified t) 521 530 (face font-lock-variable-name-face fontified t) 530 533 (fontified t) 533 536 (face font-lock-string-face fontified t) 536 538 (fontified t) 538 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 554 (face font-lock-type-face fontified t) 554 555 (face font-lock-type-face c-type c-decl-id-start fontified t) 555 556 (fontified t) 556 565 (face font-lock-variable-name-face fontified t) 565 568 (fontified t) 568 571 (face font-lock-string-face fontified t) 571 573 (fontified t) 573 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-constant-face fontified t) 582 584 (fontified t) 584 589 (face font-lock-type-face fontified t) 589 590 (face font-lock-type-face c-type c-decl-id-start fontified t) 590 591 (fontified t) 591 600 (face font-lock-variable-name-face fontified t) 600 603 (fontified t) 603 606 (face font-lock-string-face fontified t) 606 608 (fontified t) 608 613 (face font-lock-keyword-face fontified t) 613 614 (fontified t) 614 617 (face font-lock-constant-face fontified t) 617 619 (fontified t) 619 624 (face font-lock-type-face fontified t) 624 625 (face font-lock-type-face c-type c-decl-id-start fontified t) 625 626 (fontified t) 626 635 (face font-lock-variable-name-face fontified t) 635 638 (fontified t) 638 641 (face font-lock-string-face fontified t) 641 643 (fontified t) 643 648 (face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (face font-lock-constant-face fontified t) 652 654 (fontified t) 654 659 (face font-lock-type-face fontified t) 659 660 (face font-lock-type-face c-type c-decl-id-start fontified t) 660 661 (fontified t) 661 670 (face font-lock-variable-name-face fontified t) 670 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 678 (fontified t) 678 683 (face font-lock-keyword-face fontified t) 683 684 (fontified t) 684 687 (face font-lock-constant-face fontified t) 687 689 (fontified t) 689 694 (face font-lock-type-face fontified t) 694 695 (face font-lock-type-face c-type c-decl-id-start fontified t) 695 696 (fontified t) 696 708 (face font-lock-variable-name-face fontified t) 708 711 (fontified t) 711 714 (face font-lock-string-face fontified t) 714 716 (fontified t) 716 721 (face font-lock-keyword-face fontified t) 721 722 (fontified t) 722 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 732 (face font-lock-type-face fontified t) 732 733 (face font-lock-type-face c-type c-decl-id-start fontified t) 733 734 (fontified t) 734 748 (face font-lock-variable-name-face fontified t) 748 751 (fontified t) 751 754 (face font-lock-string-face fontified t) 754 756 (fontified t) 756 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 765 (face font-lock-constant-face fontified t) 765 767 (fontified t) 767 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 788 (face font-lock-variable-name-face fontified t) 788 791 (fontified t) 791 794 (face font-lock-string-face fontified t) 794 797 (fontified t) 797 800 (face font-lock-constant-face fontified t) 800 802 (fontified t) 802 808 (face font-lock-type-face fontified t) 808 809 (fontified t category c-<-as-paren-syntax) 809 812 (face font-lock-constant-face fontified t) 812 814 (fontified t) 814 820 (face font-lock-type-face fontified t) 820 821 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 821 822 (fontified t) 822 826 (face font-lock-variable-name-face fontified t) 826 830 (fontified t) 830 833 (face font-lock-string-face fontified t) 833 835 (fontified t) 835 838 (face font-lock-string-face fontified t) 838 840 (fontified t) 840 843 (face font-lock-string-face fontified t) 843 845 (fontified t) 845 848 (face font-lock-string-face fontified t) 848 850 (fontified t) 850 853 (face font-lock-string-face fontified t) 853 855 (fontified t) 855 858 (face font-lock-string-face fontified t) 858 860 (fontified t) 860 863 (face font-lock-string-face fontified t) 863 865 (fontified t) 865 868 (face font-lock-string-face fontified t) 868 870 (fontified t) 870 873 (face font-lock-string-face fontified t) 873 908 (fontified t) 908 911 (face font-lock-string-face fontified t) 911 913 (fontified t) 913 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 921 (face font-lock-string-face fontified t) 921 923 (fontified t) 923 926 (face font-lock-string-face fontified t) 926 928 (fontified t) 928 931 (face font-lock-string-face fontified t) 931 933 (fontified t) 933 936 (face font-lock-string-face fontified t) 936 938 (fontified t) 938 941 (face font-lock-string-face fontified t) 941 943 (fontified t) 943 946 (face font-lock-string-face fontified t) 946 948 (fontified t) 948 951 (face font-lock-string-face fontified t) 951 986 (fontified t) 986 989 (face font-lock-string-face fontified t) 989 991 (fontified t) 991 994 (face font-lock-string-face fontified t) 994 996 (fontified t) 996 999 (face font-lock-string-face fontified t) 999 1001 (fontified t) 1001 1004 (face font-lock-string-face fontified t) 1004 1006 (fontified t) 1006 1009 (face font-lock-string-face fontified t) 1009 1011 (fontified t) 1011 1014 (face font-lock-string-face fontified t) 1014 1016 (fontified t) 1016 1019 (face font-lock-string-face fontified t) 1019 1021 (fontified t) 1021 1024 (face font-lock-string-face fontified t) 1024 1027 (fontified t) 1027 1030 (face font-lock-constant-face fontified t) 1030 1032 (fontified t) 1032 1037 (face font-lock-type-face fontified t) 1037 1038 (face font-lock-type-face c-type c-decl-id-start fontified t) 1038 1039 (fontified t) 1039 1049 (face font-lock-variable-name-face fontified t) 1049 1052 (fontified t) 1052 1080 (face font-lock-string-face fontified t) 1080 1083 (fontified t) 1083 1086 (face font-lock-type-face fontified t) 1086 1087 (face font-lock-type-face c-type c-decl-id-start fontified t) 1087 1088 (fontified t) 1088 1098 (face font-lock-function-name-face fontified t) 1098 1099 (c-type c-decl-arg-start fontified t) 1099 1102 (face font-lock-constant-face fontified t) 1102 1104 (fontified t) 1104 1110 (face font-lock-type-face fontified t) 1110 1111 (fontified t) 1111 1117 (face font-lock-variable-name-face fontified t) 1117 1118 (c-type c-decl-arg-start fontified t) 1118 1119 (fontified t) 1119 1122 (face font-lock-constant-face fontified t) 1122 1124 (fontified t) 1124 1130 (face font-lock-type-face fontified t) 1130 1131 (fontified t) 1131 1136 (face font-lock-variable-name-face fontified t) 1136 1142 (fontified t) 1142 1145 (face font-lock-keyword-face fontified t) 1145 1147 (fontified t) 1147 1149 (face font-lock-type-face fontified t) 1149 1150 (face font-lock-type-face c-type c-decl-id-start fontified t) 1150 1151 (fontified t) 1151 1152 (face font-lock-variable-name-face fontified t) 1152 1177 (fontified t) 1177 1179 (face font-lock-keyword-face fontified t) 1179 1181 (fontified t) 1181 1184 (face font-lock-constant-face fontified t) 1184 1246 (fontified t) 1246 1249 (face font-lock-constant-face fontified t) 1249 1298 (fontified t) 1298 1301 (face font-lock-type-face fontified t) 1301 1302 (face font-lock-type-face c-type c-decl-id-start fontified t) 1302 1303 (fontified t) 1303 1317 (face font-lock-function-name-face fontified t) 1317 1324 (fontified t) 1324 1327 (face font-lock-constant-face fontified t) 1327 1371 (fontified t) 1371 1374 (face font-lock-string-face fontified t) 1374 1402 (fontified t) 1402 1425 (face font-lock-string-face fontified t) 1425 1441 (fontified t) 1441 1444 (face font-lock-constant-face fontified t) 1444 1454 (fontified t) 1454 1458 (face font-lock-string-face fontified t) 1458 1496 (fontified t) 1496 1499 (face font-lock-string-face fontified t) 1499 1500 (fontified t) 1500 1514 (fontified t) 1514 1517 (face font-lock-string-face fontified t) 1517 1519 (fontified t) 1519 1521 (fontified t) 1521 1524 (face font-lock-keyword-face fontified t) 1524 1526 (fontified t) 1526 1528 (face font-lock-type-face fontified t) 1528 1529 (face font-lock-type-face c-type c-decl-id-start fontified t) 1529 1530 (fontified t) 1530 1531 (face font-lock-variable-name-face fontified t) 1531 1556 (fontified t) 1556 1558 (face font-lock-keyword-face fontified t) 1558 1577 (fontified t) 1577 1580 (face font-lock-constant-face fontified t) 1580 1602 (fontified t) 1602 1606 (face font-lock-string-face fontified t) 1606 1614 (fontified t) 1614 1617 (face font-lock-constant-face fontified t) 1617 1661 (fontified t) 1661 1664 (face font-lock-string-face fontified t) 1664 1679 (fontified t) 1679 1683 (face font-lock-string-face fontified t) 1683 1692 (fontified t) 1692 1696 (face font-lock-keyword-face fontified t) 1696 1697 (fontified t) 1697 1699 (face font-lock-keyword-face fontified t) 1699 1718 (fontified t) 1718 1721 (face font-lock-constant-face fontified t) 1721 1731 (fontified t) 1731 1734 (face font-lock-string-face fontified t) 1734 1749 (fontified t) 1749 1753 (face font-lock-string-face fontified t) 1753 1761 (fontified t) 1761 1764 (face font-lock-constant-face fontified t) 1764 1808 (fontified t) 1808 1811 (face font-lock-string-face fontified t) 1811 1826 (fontified t) 1826 1832 (face font-lock-string-face fontified t) 1832 1844 (fontified t) 1844 1847 (face font-lock-constant-face fontified t) 1847 1868 (fontified t) 1868 1871 (face font-lock-string-face fontified t) 1871 1879 (fontified t) 1879 1882 (face font-lock-constant-face fontified t) 1882 1892 (fontified t) 1892 1897 (face font-lock-string-face fontified t) 1897 1912 (fontified t) 1912 1916 (face font-lock-string-face fontified t) 1916 1920 (fontified t) 1920 1923 (face font-lock-constant-face fontified t) 1923 1967 (fontified t) 1967 1970 (face font-lock-string-face fontified t) 1970 1998 (fontified t) 1998 2021 (face font-lock-string-face fontified t) 2021 2037 (fontified t) 2037 2041 (face font-lock-string-face fontified t) 2041 2046 (fontified t) 2046 2049 (face font-lock-type-face fontified t) 2049 2050 (face font-lock-type-face c-type c-decl-id-start fontified t) 2050 2051 (fontified t) 2051 2059 (face font-lock-function-name-face fontified t) 2059 2060 (c-type c-decl-arg-start fontified t) 2060 2063 (face font-lock-type-face fontified t) 2063 2064 (fontified t) 2064 2065 (face font-lock-variable-name-face fontified t) 2065 2071 (fontified t) 2071 2074 (face font-lock-keyword-face fontified t) 2074 2076 (fontified t) 2076 2078 (face font-lock-type-face fontified t) 2078 2079 (face font-lock-type-face c-type c-decl-id-start fontified t) 2079 2080 (fontified t) 2080 2081 (face font-lock-variable-name-face fontified t) 2081 2115 (fontified t) 2115 2121 (face font-lock-keyword-face fontified t) 2121 2149 (fontified t) 2149 2153 (face font-lock-keyword-face fontified t) 2153 2155 (fontified t) 2155 2156 (c-type c-decl-end fontified t) 2156 2163 (fontified t) 2163 2166 (face font-lock-constant-face fontified t) 2166 2194 (fontified t) 2194 2199 (face font-lock-string-face fontified t) 2199 2227 (fontified t) 2227 2232 (face font-lock-keyword-face fontified t) 2232 2238 (fontified t) 2238 2242 (face font-lock-keyword-face fontified t) 2242 2244 (fontified t) 2244 2245 (c-type c-decl-end fontified t) 2245 2252 (fontified t) 2252 2255 (face font-lock-constant-face fontified t) 2255 2283 (fontified t) 2283 2288 (face font-lock-string-face fontified t) 2288 2317 (fontified t) 2317 2322 (face font-lock-keyword-face fontified t) 2322 2328 (fontified t) 2328 2332 (face font-lock-keyword-face fontified t) 2332 2334 (fontified t) 2334 2335 (c-type c-decl-end fontified t) 2335 2342 (fontified t) 2342 2345 (face font-lock-constant-face fontified t) 2345 2373 (fontified t) 2373 2378 (face font-lock-string-face fontified t) 2378 2405 (fontified t) 2405 2410 (face font-lock-keyword-face fontified t) 2410 2416 (fontified t) 2416 2423 (face font-lock-keyword-face fontified t) 2423 2424 (c-type c-decl-end fontified t) 2424 2431 (fontified t) 2431 2434 (face font-lock-constant-face fontified t) 2434 2456 (fontified t) 2456 2461 (face font-lock-string-face fontified t) 2461 2487 (fontified t) 2487 2490 (face font-lock-constant-face fontified t) 2490 2500 (fontified t) 2500 2504 (face font-lock-string-face fontified t) 2504 2508 (fontified t) 2508 2511 (face font-lock-constant-face fontified t) 2511 2537 (fontified t) 2537 2540 (face font-lock-type-face fontified t) 2540 2541 (face font-lock-type-face c-type c-decl-id-start fontified t) 2541 2542 (fontified t) 2542 2553 (face font-lock-function-name-face fontified t) 2553 2554 (c-type c-decl-arg-start fontified t) 2554 2557 (face font-lock-constant-face fontified t) 2557 2559 (fontified t) 2559 2565 (face font-lock-type-face fontified t) 2565 2566 (fontified t category c-<-as-paren-syntax) 2566 2569 (face font-lock-constant-face fontified t) 2569 2571 (fontified t) 2571 2577 (face font-lock-type-face fontified t) 2577 2578 (fontified t category c-<-as-paren-syntax) 2578 2581 (face font-lock-constant-face fontified t) 2581 2583 (fontified t) 2583 2589 (face font-lock-type-face fontified t) 2589 2590 (fontified t category c->-as-paren-syntax) 2590 2591 (fontified t category c->-as-paren-syntax) 2591 2592 (fontified t) 2592 2605 (face font-lock-variable-name-face fontified t) 2605 2606 (c-type c-decl-arg-start fontified t) 2606 2607 (fontified t) 2607 2610 (face font-lock-type-face fontified t) 2610 2611 (fontified t) 2611 2612 (face font-lock-variable-name-face fontified t) 2612 2619 (fontified t) 2619 2622 (face font-lock-keyword-face fontified t) 2622 2624 (fontified t) 2624 2626 (face font-lock-type-face fontified t) 2626 2627 (face font-lock-type-face c-type c-decl-id-start fontified t) 2627 2628 (fontified t) 2628 2629 (face font-lock-variable-name-face fontified t) 2629 2663 (fontified t) 2663 2666 (face font-lock-constant-face fontified t) 2666 2668 (fontified t) 2668 2673 (face font-lock-type-face fontified t) 2673 2674 (face font-lock-type-face c-type c-decl-id-start fontified t) 2674 2675 (fontified t) 2675 2679 (face font-lock-variable-name-face fontified t) 2679 2707 (fontified t) 2707 2713 (face font-lock-keyword-face fontified t) 2713 2741 (fontified t) 2741 2745 (face font-lock-keyword-face fontified t) 2745 2747 (fontified t) 2747 2748 (c-type c-decl-end fontified t) 2748 2755 (fontified t) 2755 2758 (face font-lock-constant-face fontified t) 2758 2774 (fontified t) 2774 2778 (face font-lock-string-face fontified t) 2778 2797 (fontified t) 2797 2800 (face font-lock-string-face fontified t) 2800 2811 (fontified t) 2811 2815 (face font-lock-string-face fontified t) 2815 2862 (fontified t) 2862 2867 (face font-lock-keyword-face fontified t) 2867 2873 (fontified t) 2873 2877 (face font-lock-keyword-face fontified t) 2877 2879 (fontified t) 2879 2880 (c-type c-decl-end fontified t) 2880 2887 (fontified t) 2887 2890 (face font-lock-constant-face fontified t) 2890 2906 (fontified t) 2906 2910 (face font-lock-string-face fontified t) 2910 2929 (fontified t) 2929 2932 (face font-lock-string-face fontified t) 2932 2943 (fontified t) 2943 2947 (face font-lock-string-face fontified t) 2947 2996 (fontified t) 2996 3001 (face font-lock-keyword-face fontified t) 3001 3007 (fontified t) 3007 3011 (face font-lock-keyword-face fontified t) 3011 3013 (fontified t) 3013 3014 (c-type c-decl-end fontified t) 3014 3019 (fontified t) 3019 3021 (fontified t) 3021 3024 (face font-lock-constant-face fontified t) 3024 3040 (fontified t) 3040 3044 (face font-lock-string-face fontified t) 3044 3063 (fontified t) 3063 3066 (face font-lock-string-face fontified t) 3066 3077 (fontified t) 3077 3081 (face font-lock-string-face fontified t) 3081 3090 (fontified t) 3090 3126 (fontified t) 3126 3131 (face font-lock-keyword-face fontified t) 3131 3137 (fontified t) 3137 3144 (face font-lock-keyword-face fontified t) 3144 3145 (c-type c-decl-end fontified t) 3145 3152 (fontified t) 3152 3155 (face font-lock-constant-face fontified t) 3155 3165 (fontified t) 3165 3169 (face font-lock-string-face fontified t) 3169 3188 (fontified t) 3188 3191 (face font-lock-string-face fontified t) 3191 3202 (fontified t) 3202 3206 (face font-lock-string-face fontified t) 3206 3220 (fontified t) 3220 3223 (face font-lock-constant-face fontified t) 3223 3233 (fontified t) 3233 3237 (face font-lock-string-face fontified t) 3237 3241 (fontified t) 3241 3244 (face font-lock-constant-face fontified t) 3244 3270 (fontified t) 3270 3273 (face font-lock-type-face fontified t) 3273 3274 (face font-lock-type-face c-type c-decl-id-start fontified t) 3274 3275 (fontified t) 3275 3286 (face font-lock-function-name-face fontified t) 3286 3287 (c-type c-decl-arg-start fontified t) 3287 3290 (face font-lock-type-face fontified t) 3290 3291 (fontified t) 3291 3292 (face font-lock-variable-name-face fontified t) 3292 3299 (fontified t) 3299 3302 (face font-lock-keyword-face fontified t) 3302 3304 (fontified t) 3304 3306 (face font-lock-type-face fontified t) 3306 3307 (face font-lock-type-face c-type c-decl-id-start fontified t) 3307 3308 (fontified t) 3308 3309 (face font-lock-variable-name-face fontified t) 3309 3343 (fontified t) 3343 3349 (face font-lock-keyword-face fontified t) 3349 3377 (fontified t) 3377 3381 (face font-lock-keyword-face fontified t) 3381 3383 (fontified t) 3383 3384 (c-type c-decl-end fontified t) 3384 3391 (fontified t) 3391 3394 (face font-lock-constant-face fontified t) 3394 3422 (fontified t) 3422 3427 (face font-lock-string-face fontified t) 3427 3455 (fontified t) 3455 3460 (face font-lock-keyword-face fontified t) 3460 3466 (fontified t) 3466 3470 (face font-lock-keyword-face fontified t) 3470 3472 (fontified t) 3472 3473 (c-type c-decl-end fontified t) 3473 3480 (fontified t) 3480 3483 (face font-lock-constant-face fontified t) 3483 3511 (fontified t) 3511 3516 (face font-lock-string-face fontified t) 3516 3545 (fontified t) 3545 3550 (face font-lock-keyword-face fontified t) 3550 3556 (fontified t) 3556 3560 (face font-lock-keyword-face fontified t) 3560 3562 (fontified t) 3562 3563 (c-type c-decl-end fontified t) 3563 3570 (fontified t) 3570 3573 (face font-lock-constant-face fontified t) 3573 3601 (fontified t) 3601 3606 (face font-lock-string-face fontified t) 3606 3633 (fontified t) 3633 3638 (face font-lock-keyword-face fontified t) 3638 3644 (fontified t) 3644 3651 (face font-lock-keyword-face fontified t) 3651 3652 (c-type c-decl-end fontified t) 3652 3659 (fontified t) 3659 3662 (face font-lock-constant-face fontified t) 3662 3684 (fontified t) 3684 3689 (face font-lock-string-face fontified t) 3689 3715 (fontified t) 3715 3718 (face font-lock-constant-face fontified t) 3718 3728 (fontified t) 3728 3732 (face font-lock-string-face fontified t) 3732 3737 (fontified t) 3737 3739 (face font-lock-type-face fontified t) 3739 3740 (face font-lock-type-face c-type c-decl-id-start fontified t) 3740 3741 (fontified t) 3741 3766 (face font-lock-variable-name-face fontified t) 3766 3772 (fontified t) 3772 3774 (face font-lock-type-face fontified t) 3774 3775 (face font-lock-type-face c-type c-decl-id-start fontified t) 3775 3776 (fontified t) 3776 3803 (face font-lock-variable-name-face fontified t) 3803 3810 (fontified t) 3810 3811 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 3811 3813 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3813 3886 (face font-lock-comment-face fontified t c-in-sws t) 3886 3887 (face font-lock-type-face fontified t c-is-sws t) 3887 3889 (face font-lock-type-face fontified t) 3889 3890 (face font-lock-type-face c-type c-decl-id-start fontified t) 3890 3891 (fontified t) 3891 3902 (face font-lock-function-name-face fontified t) 3902 3903 (c-type c-decl-arg-start fontified t) 3903 3906 (face font-lock-constant-face fontified t) 3906 3908 (fontified t) 3908 3914 (face font-lock-type-face fontified t) 3914 3915 (fontified t category c-<-as-paren-syntax) 3915 3918 (face font-lock-constant-face fontified t) 3918 3920 (fontified t) 3920 3926 (face font-lock-type-face fontified t) 3926 3927 (fontified t category c-<-as-paren-syntax) 3927 3930 (face font-lock-constant-face fontified t) 3930 3932 (fontified t) 3932 3938 (face font-lock-type-face fontified t) 3938 3939 (fontified t category c->-as-paren-syntax) 3939 3940 (fontified t category c->-as-paren-syntax) 3940 3941 (fontified t) 3941 3954 (face font-lock-variable-name-face fontified t) 3954 3955 (c-type c-decl-arg-start fontified t) 3955 3973 (fontified t) 3973 3976 (face font-lock-type-face fontified t) 3976 3977 (fontified t) 3977 3992 (face font-lock-variable-name-face fontified t) 3992 4015 (fontified t) 4015 4017 (c-is-sws t c-in-sws t fontified t) 4017 4018 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 4018 4020 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 4020 4031 (c-in-sws t face font-lock-comment-face fontified t) 4031 4033 (c-in-sws t c-is-sws t fontified t) 4033 4034 (c-is-sws t face font-lock-constant-face fontified t) 4034 4036 (face font-lock-constant-face fontified t) 4036 4061 (fontified t) 4061 4063 (face font-lock-keyword-face fontified t) 4063 4093 (fontified t) 4093 4096 (face font-lock-constant-face fontified t) 4096 4141 (fontified t) 4141 4160 (face font-lock-string-face fontified t) 4160 4164 (fontified t) 4164 4168 (face font-lock-string-face fontified t) 4168 4174 (fontified t) 4174 4178 (face font-lock-keyword-face fontified t) 4178 4179 (fontified t) 4179 4181 (face font-lock-keyword-face fontified t) 4181 4211 (fontified t) 4211 4214 (face font-lock-constant-face fontified t) 4214 4273 (fontified t) 4273 4292 (face font-lock-string-face fontified t) 4292 4314 (fontified t) 4314 4318 (face font-lock-string-face fontified t) 4318 4324 (fontified t) 4324 4328 (face font-lock-keyword-face fontified t) 4328 4329 (fontified t) 4329 4331 (face font-lock-keyword-face fontified t) 4331 4357 (fontified t) 4357 4360 (face font-lock-constant-face fontified t) 4360 4419 (fontified t) 4419 4448 (face font-lock-string-face fontified t) 4448 4454 (fontified t) 4454 4456 (face font-lock-keyword-face fontified t) 4456 4517 (fontified t) 4517 4522 (face font-lock-constant-face fontified t) 4522 4567 (fontified t) 4567 4571 (face font-lock-keyword-face fontified t) 4571 4574 (fontified t) 4574 4590 (fontified t) 4590 4608 (fontified t) 4608 4619 (fontified t) 4619 4623 (face font-lock-keyword-face fontified t) 4623 4624 (fontified t) 4624 4626 (face font-lock-keyword-face fontified t) 4626 4654 (fontified t) 4654 4657 (face font-lock-constant-face fontified t) 4657 4702 (fontified t) 4702 4726 (face font-lock-string-face fontified t) 4726 4744 (fontified t) 4744 4748 (face font-lock-string-face fontified t) 4748 4754 (fontified t) 4754 4756 (face font-lock-keyword-face fontified t) 4756 4821 (fontified t) 4821 4826 (face font-lock-constant-face fontified t) 4826 4873 (fontified t) 4873 4877 (face font-lock-keyword-face fontified t) 4877 4927 (fontified t) 4927 4931 (face font-lock-keyword-face fontified t) 4931 4932 (fontified t) 4932 4934 (face font-lock-keyword-face fontified t) 4934 4949 (fontified t) 4949 4953 (fontified t) 4953 4956 (face font-lock-constant-face fontified t) 4956 4978 (fontified t) 4978 4995 (fontified t) 4995 4996 (syntax-table (1) face font-lock-warning-face fontified t c-fl-syn-tab (15)) 4996 5024 (face font-lock-string-face fontified t) 5024 5025 (face font-lock-string-face fontified t) 5025 5026 (face font-lock-warning-face fontified t c-fl-syn-tab (15)) 5026 5030 (fontified t) 5030 5034 (face font-lock-keyword-face fontified t) 5034 5036 (fontified t) 5036 5037 (fontified t) 5037 5041 (fontified t) 5041 5044 (face font-lock-constant-face fontified t) 5044 5054 (fontified t) 5054 5058 (face font-lock-string-face fontified t) 5058 5060 (fontified t) 5060 5063 (face font-lock-comment-delimiter-face fontified t) 5063 5113 (face font-lock-comment-face fontified t) 5113 5120 (fontified t) 5120 5123 (face font-lock-keyword-face fontified t) 5123 5125 (fontified t) 5125 5127 (face font-lock-type-face fontified t) 5127 5128 (face font-lock-type-face c-type c-decl-id-start fontified t) 5128 5129 (fontified t) 5129 5130 (face font-lock-variable-name-face fontified t) 5130 5168 (fontified t) 5168 5171 (face font-lock-constant-face fontified t) 5171 5194 (fontified t) 5194 5198 (fontified t c-is-sws t c-in-sws t) 5198 5199 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5199 5201 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5201 5210 (face font-lock-comment-face fontified t c-in-sws t) 5210 5214 (fontified t c-in-sws t c-is-sws t) 5214 5215 (fontified t c-is-sws t) 5215 5227 (fontified t) 5227 5231 (fontified t c-is-sws t c-in-sws t) 5231 5232 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5232 5234 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5234 5246 (face font-lock-comment-face fontified t c-in-sws t) 5246 5250 (fontified t c-in-sws t c-is-sws t) 5250 5251 (fontified t c-is-sws t) 5251 5281 (fontified t) 5281 5285 (fontified t c-is-sws t c-in-sws t) 5285 5286 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5286 5288 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5288 5300 (face font-lock-comment-face fontified t c-in-sws t) 5300 5304 (fontified t c-in-sws t c-is-sws t) 5304 5305 (fontified t c-is-sws t) 5305 5347 (fontified t)) . 1) (undo-tree-id2 . -33) (undo-tree-id3 . 321) (undo-tree-id4 . -4402) (undo-tree-id5 . -4992) (undo-tree-id6 . -4992)) nil (26692 25483 591628 121000) 0 nil])
([nil nil ((5013 . 5014) (5011 . 5013) (5009 . 5011)) nil (26692 25483 591620 363000) 0 nil])
([nil nil ((5014 . 5015)) nil (26692 25483 591620 68000) 0 nil])
([nil nil ((5017 . 5018)) nil (26692 25483 591619 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5023 . 5024) (#("
" 0 1 (fontified nil)) . -5089) (5019 . 5090) 5017) nil (26692 25483 591619 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5093 . 5094) (#("
" 0 1 (fontified nil)) . -5159) (5089 . 5160) 5024) nil (26692 25483 591619 13000) 0 nil])
([nil nil ((5064 . 5065) (#("5" 0 1 (face font-lock-string-face fontified t)) . 5064)) nil (26692 25483 591618 545000) 0 nil])
([nil nil ((5134 . 5135) (#("5" 0 1 (face font-lock-string-face fontified t)) . 5134)) nil (26692 25483 591618 216000) 0 nil])
([nil nil ((5128 . 5129) (#("1" 0 1 (face font-lock-string-face fontified t)) . 5128)) nil (26692 25483 591617 807000) 0 nil])
([nil nil ((5058 . 5059) (#("1" 0 1 (face font-lock-string-face fontified t)) . 5058)) nil (26692 25483 591614 655000) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-string-face fontified t)) . 4983) (t 26692 25483 592991 325000)) nil (26692 25550 666866 578000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-string-face fontified t)) . 4983)) nil (26692 25550 666866 321000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-string-face fontified t)) . 4983)) nil (26692 25550 666866 101000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . 4983)) nil (26692 25550 666865 904000) 0 nil])
([nil nil ((4983 . 4988)) nil (26692 25550 666865 654000) 0 nil])
([nil nil ((4990 . 4991)) nil (26692 25550 666865 418000) 0 nil])
([nil nil ((5061 . 5062)) nil (26692 25550 666865 217000) 0 nil])
([nil nil ((5132 . 5133)) nil (26692 25550 666864 983000) 0 nil])
([nil nil ((5126 . 5131) (#("Type" 0 4 (face font-lock-string-face fontified t)) . 5126)) nil (26692 25550 666864 392000) 0 nil])
([nil nil ((5056 . 5059) (#("e" 0 1 (face font-lock-string-face fontified t)) . -5056) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 5057 (5055 . 5057) (#("Type" 0 4 (face font-lock-string-face fontified t)) . 5055) (undo-tree-id22 . -4) (undo-tree-id23 . -3) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) 5059) nil (26692 25550 666863 299000) 0 nil])
([nil nil ((5059 . 5060)) nil (26692 27955 33644 626000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -5276) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 5277 (5276 . 5277) (5275 . 5276) (5274 . 5275) (5273 . 5274) (5264 . 5273) (#("sho" 0 3 (fontified nil)) . 5264) (5264 . 5267) (#("show_menu" 0 9 (fontified nil)) . -5264) (5264 . 5273) (#("show" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -5264) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) 5268 (5264 . 5268) (#("h" 0 1 (fontified t)) . -5264) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("o" 0 1 (fontified t)) . -5265) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("s" 0 1 (fontified t)) . -5266) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 5267 (5263 . 5267) (5262 . 5263) (5259 . 5262) (#("f" 0 1 (fontified t)) . -5259) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#(" " 0 1 (fontified t)) . -5260) (undo-tree-id111 . -1) (#("(" 0 1 (fontified t)) . -5261) (undo-tree-id112 . -1) 5262 (5257 . 5259) (5259 . 5260) (5257 . 5259) (t 26692 25550 667991 69000)) nil (26692 27982 473444 594000) 0 nil] [nil nil ((5265 . 5292) (#("sho" 0 3 (fontified nil)) . 5265) (5265 . 5268) (#("show_invalid_length_msg_for" 0 27 (fontified nil)) . -5265) (5265 . 5292) (#("show" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -5265) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) 5269 (5264 . 5269) (#(" " 0 1 (fontified t)) . -5264) (undo-tree-id39 . -1) 5265 (5264 . 5265) (5263 . 5264) (5260 . 5263) (5257 . 5260) (t 26692 25550 667991 69000)) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 5257) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -1) (undo-tree-id46 . -3) (#("if " 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (fontified nil)) . 5260) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (#("(" 0 1 (fontified nil)) . 5263) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#(" " 0 1 (fontified nil)) . 5264) (undo-tree-id59 . -1) (5264 . 5265) (#("!show" 0 1 (face font-lock-negation-char-face fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 5264) (undo-tree-id60 . -1) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -1) (5265 . 5269) (#("show_invalid_length_msg_for" 0 27 (fontified nil)) . 5265) (5265 . 5292) (#("sho" 0 3 (fontified nil)) . 5265) (5265 . 5268) (#("show_invalid_length_msg_for" 0 27 (fontified t)) . 5265) (undo-tree-id66 . -26) (undo-tree-id67 . -26)) (26692 27955 20648 392000) 0 nil])
([nil nil ((5503 . 5504) (#("{" 0 1 (fontified t)) . -5503) (undo-tree-id85 . -1) 5504 (5503 . 5504) (#("{" 0 1 (fontified t)) . -5503) (undo-tree-id86 . -1) 5504 (5503 . 5504)) nil (26692 27982 473438 379000) 0 nil])
nil
([nil nil ((1 . 5530) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

// void print_board(std::string entered_words[6][5], int game_state_code) {
void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
    std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
    std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
  for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
    std::cout << left_margin;
    // top part
    top_part(i);
    // middle part
    middle_part(entered_words, i);
    // bottom part
    bottom_part(i);
  }

  print_keyboard();}
}
" 808 809 (category c-<-as-paren-syntax) 820 821 (category c->-as-paren-syntax) 2565 2566 (category c-<-as-paren-syntax) 2577 2578 (category c-<-as-paren-syntax) 2589 2590 (category c->-as-paren-syntax) 2590 2591 (category c->-as-paren-syntax) 3810 3811 (c-is-sws t c-in-sws t) 3811 3886 (c-in-sws t) 3886 3887 (c-is-sws t) 3889 3890 (c-type c-decl-id-start) 3891 3902 (face font-lock-function-name-face) 3908 3914 (face font-lock-type-face) 3914 3915 (category c-<-as-paren-syntax) 3926 3927 (category c-<-as-paren-syntax) 3938 3939 (category c->-as-paren-syntax) 3939 3940 (category c->-as-paren-syntax) 4015 4018 (c-is-sws t c-in-sws t) 4018 4031 (c-in-sws t) 4031 4033 (c-in-sws t c-is-sws t) 4033 4034 (c-is-sws t) 4059 4061 (fontified t) 4061 4063 (face font-lock-keyword-face fontified t) 4063 4093 (fontified t) 4093 4096 (face font-lock-constant-face fontified t) 4096 4141 (fontified t) 4141 4160 (face font-lock-string-face fontified t) 4160 4164 (fontified t) 4164 4168 (face font-lock-string-face fontified t) 4168 4174 (fontified t) 4174 4178 (face font-lock-keyword-face fontified t) 4178 4179 (fontified t) 4179 4181 (face font-lock-keyword-face fontified t) 4181 4211 (fontified t) 4211 4214 (face font-lock-constant-face fontified t) 4214 4273 (fontified t) 4273 4292 (face font-lock-string-face fontified t) 4292 4314 (fontified t) 4314 4318 (face font-lock-string-face fontified t) 4318 4324 (fontified t) 4324 4328 (face font-lock-keyword-face fontified t) 4328 4329 (fontified t) 4329 4331 (face font-lock-keyword-face fontified t) 4331 4357 (fontified t) 4357 4360 (face font-lock-constant-face fontified t) 4360 4402 (fontified t) 4402 4419 (fontified t) 4419 4448 (face font-lock-string-face fontified t) 4448 4454 (fontified t) 4454 4456 (face font-lock-keyword-face fontified t) 4456 4517 (fontified t) 4517 4522 (face font-lock-constant-face fontified t) 4522 4567 (fontified t) 4567 4571 (face font-lock-keyword-face fontified t) 4571 4619 (fontified t) 4619 4623 (face font-lock-keyword-face fontified t) 4623 4624 (fontified t) 4624 4626 (face font-lock-keyword-face fontified t) 4626 4654 (fontified t) 4654 4657 (face font-lock-constant-face fontified t) 4657 4702 (fontified t) 4702 4726 (face font-lock-string-face fontified t) 4726 4744 (fontified t) 4744 4748 (face font-lock-string-face fontified t) 4748 4754 (fontified t) 4754 4756 (face font-lock-keyword-face fontified t) 4756 4821 (fontified t) 4821 4826 (face font-lock-constant-face fontified t) 4826 4873 (fontified t) 4873 4877 (face font-lock-keyword-face fontified t) 4877 4927 (fontified t) 4927 4931 (face font-lock-keyword-face fontified t) 4931 4932 (fontified t) 4932 4934 (face font-lock-keyword-face fontified t) 4934 4949 (fontified t) 4949 4953 (fontified t) 4953 4956 (face font-lock-constant-face fontified t) 4956 4981 (fontified t) 4981 4982 (face font-lock-string-face fontified t) 4982 4983 (face font-lock-string-face fontified t) 4983 4984 (face font-lock-string-face fontified t) 4984 4985 (face font-lock-string-face fontified t) 4985 4986 (face font-lock-string-face fontified t) 4986 4987 (face font-lock-string-face fontified t) 4987 4989 (face font-lock-string-face fontified t) 4989 4990 (face font-lock-string-face fontified t) 4990 5010 (face font-lock-string-face fontified t) 5010 5011 (face font-lock-string-face fontified t) 5011 5012 (fontified t) 5012 5013 (fontified t) 5013 5014 (fontified t) 5014 5015 (fontified t) 5015 5016 (face font-lock-string-face fontified t) 5016 5018 (face font-lock-string-face fontified t) 5018 5019 (face font-lock-string-face fontified t) 5019 5020 (fontified t) 5020 5021 (fontified t) 5021 5024 (fontified t) 5024 5025 (fontified t rear-nonsticky t) 5025 5028 (face font-lock-constant-face fontified t) 5028 5053 (fontified t) 5053 5054 (face font-lock-string-face fontified t) 5054 5055 (face font-lock-string-face fontified t) 5055 5056 (face font-lock-string-face fontified t) 5056 5057 (face font-lock-string-face fontified t) 5057 5058 (face font-lock-string-face fontified t) 5058 5059 (face font-lock-string-face fontified t) 5059 5060 (face font-lock-string-face fontified t) 5060 5061 (face font-lock-string-face fontified t) 5061 5062 (face font-lock-string-face fontified t) 5062 5067 (face font-lock-string-face fontified t) 5067 5068 (face font-lock-string-face fontified t) 5068 5082 (face font-lock-string-face fontified t) 5082 5083 (face font-lock-string-face fontified t) 5083 5084 (fontified t) 5084 5085 (fontified t) 5085 5086 (fontified t) 5086 5087 (fontified t) 5087 5088 (face font-lock-string-face fontified t) 5088 5090 (face font-lock-string-face fontified t) 5090 5091 (face font-lock-string-face fontified t) 5091 5092 (fontified t) 5092 5093 (fontified t) 5093 5096 (fontified t) 5096 5097 (fontified t rear-nonsticky t) 5097 5100 (face font-lock-constant-face fontified t) 5100 5125 (fontified t) 5125 5126 (face font-lock-string-face fontified t) 5126 5127 (face font-lock-string-face fontified t) 5127 5128 (face font-lock-string-face fontified t) 5128 5129 (face font-lock-string-face fontified t) 5129 5130 (face font-lock-string-face fontified t) 5130 5131 (face font-lock-string-face fontified t) 5131 5132 (face font-lock-string-face fontified t) 5132 5133 (face font-lock-string-face fontified t) 5133 5134 (face font-lock-string-face fontified t) 5134 5139 (face font-lock-string-face fontified t) 5139 5140 (face font-lock-string-face fontified t) 5140 5154 (face font-lock-string-face fontified t) 5154 5155 (face font-lock-string-face fontified t) 5155 5156 (fontified t) 5156 5157 (fontified t) 5157 5158 (fontified t) 5158 5159 (fontified t) 5159 5160 (face font-lock-string-face fontified t) 5160 5162 (face font-lock-string-face fontified t) 5162 5163 (face font-lock-string-face fontified t) 5163 5164 (fontified t) 5164 5165 (fontified t) 5165 5169 (fontified t) 5169 5173 (face font-lock-keyword-face fontified t) 5173 5176 (fontified t) 5176 5180 (fontified t) 5180 5183 (face font-lock-constant-face fontified t) 5183 5193 (fontified t) 5193 5197 (face font-lock-string-face fontified t) 5197 5199 (fontified t) 5199 5202 (face font-lock-comment-delimiter-face fontified t) 5202 5252 (face font-lock-comment-face fontified t) 5252 5256 (fontified t) 5256 5258 (fontified t) 5258 5259 (face font-lock-keyword-face fontified t) 5259 5260 (face font-lock-keyword-face fontified t) 5260 5261 (fontified t) 5261 5262 (fontified t) 5262 5263 (face font-lock-negation-char-face fontified t) 5263 5272 (fontified t) 5272 5273 (fontified t) 5273 5274 (fontified t) 5274 5275 (fontified t) 5275 5276 (fontified t) 5276 5278 (fontified t) 5278 5281 (face font-lock-keyword-face fontified t) 5281 5283 (fontified t) 5283 5285 (face font-lock-type-face fontified t) 5285 5286 (face font-lock-type-face c-type c-decl-id-start fontified t) 5286 5287 (fontified t) 5287 5288 (face font-lock-variable-name-face fontified t) 5288 5320 (fontified t) 5320 5321 (fontified t) 5321 5322 (fontified t) 5322 5326 (fontified t) 5326 5329 (face font-lock-constant-face fontified t) 5329 5352 (fontified t) 5352 5356 (fontified t c-is-sws t c-in-sws t) 5356 5357 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5357 5359 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5359 5368 (face font-lock-comment-face fontified t c-in-sws t) 5368 5372 (fontified t c-in-sws t c-is-sws t) 5372 5373 (fontified t c-is-sws t) 5373 5385 (fontified t) 5385 5389 (fontified t c-is-sws t c-in-sws t) 5389 5390 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5390 5392 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5392 5404 (face font-lock-comment-face fontified t c-in-sws t) 5404 5408 (fontified t c-in-sws t c-is-sws t) 5408 5409 (fontified t c-is-sws t) 5409 5439 (fontified t) 5439 5443 (fontified t c-is-sws t c-in-sws t) 5443 5444 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5444 5446 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5446 5458 (face font-lock-comment-face fontified t c-in-sws t) 5458 5462 (fontified t c-in-sws t c-is-sws t) 5462 5463 (fontified t c-is-sws t) 5463 5482 (fontified t) 5482 5483 (fontified t) 5483 5502 (fontified t) 5502 5503 (fontified t) 5503 5504 (fontified t) 5504 5505 (fontified t) 5505 5506 (fontified t)) . 1) (undo-tree-id68 . -33) (undo-tree-id69 . -5058) (undo-tree-id70 . 3) (undo-tree-id71 . -5058) (undo-tree-id72 . 341) (undo-tree-id73 . -5058) (undo-tree-id74 . -5164) (undo-tree-id75 . -5093) (undo-tree-id76 . -5164) (undo-tree-id77 . -5275) (undo-tree-id78 . -5275) (undo-tree-id79 . -4353) (undo-tree-id80 . -5275) (undo-tree-id81 . 231) (undo-tree-id82 . -4524) (undo-tree-id83 . -5275) (undo-tree-id84 . -5502) 5503) nil (26692 27982 473435 427000) 0 nil])
([nil nil ((#("// void print_board(std::string entered_words[6][5], int game_state_code) {
" 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3 76 (face font-lock-comment-face fontified t c-in-sws t)) . 3811) (t 26692 27982 474981 792000)) nil (26692 28044 3611 284000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3811) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 3812 (3811 . 3812) (3810 . 3811) 3810) nil (26692 28044 3610 939000) 0 nil])
([nil nil ((#("int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;
" 0 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t) 3 4 (fontified t) 4 29 (face font-lock-variable-name-face fontified t) 29 35 (fontified t) 35 37 (face font-lock-type-face fontified t) 37 38 (face font-lock-type-face c-type c-decl-id-start fontified t) 38 39 (fontified t) 39 66 (face font-lock-variable-name-face fontified t) 66 72 (fontified t)) . 3738) (undo-tree-id143 . -35) (undo-tree-id144 . -35) (undo-tree-id145 . -35) 3773) nil (26692 28044 3609 747000) 0 nil])
([nil nil ((nil rear-nonsticky nil 797 . 798) (#("
" 0 1 (fontified nil)) . -869) (797 . 870)) nil (26692 28044 3608 675000) 0 nil])
([nil nil ((869 . 870) 833) nil (26692 28044 3608 287000) 0 nil])
([nil nil ((1 . 5454) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}



void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
    std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
    std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 33 (c-in-sws t face font-lock-string-face fontified t) 33 34 (c-in-sws t fontified t) 34 35 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 35 42 (c-in-sws t face font-lock-preprocessor-face fontified t) 42 43 (c-in-sws t fontified t) 43 64 (c-in-sws t face font-lock-string-face fontified t) 64 65 (c-in-sws t fontified t) 65 66 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 66 73 (c-in-sws t face font-lock-preprocessor-face fontified t) 73 74 (c-in-sws t fontified t) 74 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 135 (c-in-sws t face font-lock-string-face fontified t) 135 136 (c-in-sws t fontified t) 136 137 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 137 144 (c-in-sws t face font-lock-preprocessor-face fontified t) 144 145 (c-in-sws t fontified t) 145 146 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 146 149 (c-in-sws t face font-lock-string-face fontified t) 149 150 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 150 151 (c-in-sws t fontified t) 151 152 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 152 159 (c-in-sws t face font-lock-preprocessor-face fontified t) 159 160 (c-in-sws t fontified t) 160 161 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 161 169 (c-in-sws t face font-lock-string-face fontified t) 169 170 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 170 171 (c-in-sws t fontified t) 171 172 (c-is-sws t c-in-sws t fontified t) 172 173 (c-is-sws t face font-lock-keyword-face fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 181 (face font-lock-constant-face fontified t) 181 183 (fontified t) 183 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 190 (fontified t) 190 198 (face font-lock-variable-name-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-string-face fontified t) 204 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 215 (face font-lock-constant-face fontified t) 215 217 (fontified t) 217 222 (face font-lock-type-face fontified t) 222 223 (face font-lock-type-face c-type c-decl-id-start fontified t) 223 224 (fontified t) 224 234 (face font-lock-variable-name-face fontified t) 234 237 (fontified t) 237 240 (face font-lock-string-face fontified t) 240 243 (fontified t) 243 244 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 244 245 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 245 386 (c-in-sws t face font-lock-comment-face fontified t) 386 420 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 420 421 (c-in-sws t fontified t) 421 422 (c-is-sws t face font-lock-keyword-face fontified t) 422 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 430 (face font-lock-constant-face fontified t) 430 432 (fontified t) 432 437 (face font-lock-type-face fontified t) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified t) 438 439 (fontified t) 439 448 (face font-lock-variable-name-face fontified t) 448 451 (fontified t) 451 454 (face font-lock-string-face fontified t) 454 455 (fontified t) 455 456 (c-is-sws t c-in-sws t fontified t) 456 457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 457 459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 459 468 (c-in-sws t face font-lock-comment-face fontified t) 468 469 (c-is-sws t face font-lock-keyword-face fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (fontified t) 474 477 (face font-lock-constant-face fontified t) 477 479 (fontified t) 479 484 (face font-lock-type-face fontified t) 484 485 (face font-lock-type-face c-type c-decl-id-start fontified t) 485 486 (fontified t) 486 495 (face font-lock-variable-name-face fontified t) 495 498 (fontified t) 498 501 (face font-lock-string-face fontified t) 501 503 (fontified t) 503 508 (face font-lock-keyword-face fontified t) 508 509 (fontified t) 509 512 (face font-lock-constant-face fontified t) 512 514 (fontified t) 514 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face c-type c-decl-id-start fontified t) 520 521 (fontified t) 521 530 (face font-lock-variable-name-face fontified t) 530 533 (fontified t) 533 536 (face font-lock-string-face fontified t) 536 538 (fontified t) 538 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 554 (face font-lock-type-face fontified t) 554 555 (face font-lock-type-face c-type c-decl-id-start fontified t) 555 556 (fontified t) 556 565 (face font-lock-variable-name-face fontified t) 565 568 (fontified t) 568 571 (face font-lock-string-face fontified t) 571 573 (fontified t) 573 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-constant-face fontified t) 582 584 (fontified t) 584 589 (face font-lock-type-face fontified t) 589 590 (face font-lock-type-face c-type c-decl-id-start fontified t) 590 591 (fontified t) 591 600 (face font-lock-variable-name-face fontified t) 600 603 (fontified t) 603 606 (face font-lock-string-face fontified t) 606 608 (fontified t) 608 613 (face font-lock-keyword-face fontified t) 613 614 (fontified t) 614 617 (face font-lock-constant-face fontified t) 617 619 (fontified t) 619 624 (face font-lock-type-face fontified t) 624 625 (face font-lock-type-face c-type c-decl-id-start fontified t) 625 626 (fontified t) 626 635 (face font-lock-variable-name-face fontified t) 635 638 (fontified t) 638 641 (face font-lock-string-face fontified t) 641 643 (fontified t) 643 648 (face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (face font-lock-constant-face fontified t) 652 654 (fontified t) 654 659 (face font-lock-type-face fontified t) 659 660 (face font-lock-type-face c-type c-decl-id-start fontified t) 660 661 (fontified t) 661 670 (face font-lock-variable-name-face fontified t) 670 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 678 (fontified t) 678 683 (face font-lock-keyword-face fontified t) 683 684 (fontified t) 684 687 (face font-lock-constant-face fontified t) 687 689 (fontified t) 689 694 (face font-lock-type-face fontified t) 694 695 (face font-lock-type-face c-type c-decl-id-start fontified t) 695 696 (fontified t) 696 708 (face font-lock-variable-name-face fontified t) 708 711 (fontified t) 711 714 (face font-lock-string-face fontified t) 714 716 (fontified t) 716 721 (face font-lock-keyword-face fontified t) 721 722 (fontified t) 722 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 732 (face font-lock-type-face fontified t) 732 733 (face font-lock-type-face c-type c-decl-id-start fontified t) 733 734 (fontified t) 734 748 (face font-lock-variable-name-face fontified t) 748 751 (fontified t) 751 754 (face font-lock-string-face fontified t) 754 756 (fontified t) 756 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 765 (face font-lock-constant-face fontified t) 765 767 (fontified t) 767 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 788 (face font-lock-variable-name-face fontified t) 788 791 (fontified t) 791 794 (face font-lock-string-face fontified t) 794 796 (fontified t) 796 797 (rear-nonsticky t fontified t) 797 799 (face font-lock-type-face fontified t) 799 800 (face font-lock-type-face c-type c-decl-id-start fontified t) 800 801 (fontified t) 801 826 (face font-lock-variable-name-face fontified t) 826 832 (fontified t) 832 834 (face font-lock-type-face fontified t) 834 835 (face font-lock-type-face c-type c-decl-id-start fontified t) 835 836 (fontified t) 836 863 (face font-lock-variable-name-face fontified t) 863 868 (fontified t) 868 869 (fontified t) 869 870 (fontified t) 870 873 (face font-lock-constant-face fontified t) 873 875 (fontified t) 875 881 (face font-lock-type-face fontified t) 881 882 (fontified t category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face fontified t) 885 887 (fontified t) 887 893 (face font-lock-type-face fontified t) 893 894 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 894 895 (fontified t) 895 899 (face font-lock-variable-name-face fontified t) 899 903 (fontified t) 903 906 (face font-lock-string-face fontified t) 906 908 (fontified t) 908 911 (face font-lock-string-face fontified t) 911 913 (fontified t) 913 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 921 (face font-lock-string-face fontified t) 921 923 (fontified t) 923 926 (face font-lock-string-face fontified t) 926 928 (fontified t) 928 931 (face font-lock-string-face fontified t) 931 933 (fontified t) 933 936 (face font-lock-string-face fontified t) 936 938 (fontified t) 938 941 (face font-lock-string-face fontified t) 941 943 (fontified t) 943 946 (face font-lock-string-face fontified t) 946 948 (fontified t) 948 981 (fontified t) 981 984 (face font-lock-string-face fontified t) 984 986 (fontified t) 986 989 (face font-lock-string-face fontified t) 989 991 (fontified t) 991 994 (face font-lock-string-face fontified t) 994 996 (fontified t) 996 999 (face font-lock-string-face fontified t) 999 1001 (fontified t) 1001 1004 (face font-lock-string-face fontified t) 1004 1006 (fontified t) 1006 1009 (face font-lock-string-face fontified t) 1009 1011 (fontified t) 1011 1014 (face font-lock-string-face fontified t) 1014 1016 (fontified t) 1016 1019 (face font-lock-string-face fontified t) 1019 1021 (fontified t) 1021 1024 (face font-lock-string-face fontified t) 1024 1059 (fontified t) 1059 1062 (face font-lock-string-face fontified t) 1062 1064 (fontified t) 1064 1067 (face font-lock-string-face fontified t) 1067 1069 (fontified t) 1069 1072 (face font-lock-string-face fontified t) 1072 1074 (fontified t) 1074 1077 (face font-lock-string-face fontified t) 1077 1079 (fontified t) 1079 1082 (face font-lock-string-face fontified t) 1082 1084 (fontified t) 1084 1087 (face font-lock-string-face fontified t) 1087 1089 (fontified t) 1089 1092 (face font-lock-string-face fontified t) 1092 1094 (fontified t) 1094 1097 (face font-lock-string-face fontified t) 1097 1100 (fontified t) 1100 1103 (face font-lock-constant-face fontified t) 1103 1105 (fontified t) 1105 1110 (face font-lock-type-face fontified t) 1110 1111 (face font-lock-type-face c-type c-decl-id-start fontified t) 1111 1112 (fontified t) 1112 1122 (face font-lock-variable-name-face fontified t) 1122 1125 (fontified t) 1125 1153 (face font-lock-string-face fontified t) 1153 1156 (fontified t) 1156 1159 (face font-lock-type-face fontified t) 1159 1160 (face font-lock-type-face c-type c-decl-id-start fontified t) 1160 1161 (fontified t) 1161 1171 (face font-lock-function-name-face fontified t) 1171 1172 (c-type c-decl-arg-start fontified t) 1172 1175 (face font-lock-constant-face fontified t) 1175 1177 (fontified t) 1177 1183 (face font-lock-type-face fontified t) 1183 1184 (fontified t) 1184 1190 (face font-lock-variable-name-face fontified t) 1190 1191 (c-type c-decl-arg-start fontified t) 1191 1192 (fontified t) 1192 1195 (face font-lock-constant-face fontified t) 1195 1197 (fontified t) 1197 1203 (face font-lock-type-face fontified t) 1203 1204 (fontified t) 1204 1209 (face font-lock-variable-name-face fontified t) 1209 1215 (fontified t) 1215 1218 (face font-lock-keyword-face fontified t) 1218 1220 (fontified t) 1220 1222 (face font-lock-type-face fontified t) 1222 1223 (face font-lock-type-face c-type c-decl-id-start fontified t) 1223 1224 (fontified t) 1224 1225 (face font-lock-variable-name-face fontified t) 1225 1250 (fontified t) 1250 1252 (face font-lock-keyword-face fontified t) 1252 1254 (fontified t) 1254 1257 (face font-lock-constant-face fontified t) 1257 1319 (fontified t) 1319 1322 (face font-lock-constant-face fontified t) 1322 1371 (fontified t) 1371 1374 (face font-lock-type-face fontified t) 1374 1375 (face font-lock-type-face c-type c-decl-id-start fontified t) 1375 1376 (fontified t) 1376 1390 (face font-lock-function-name-face fontified t) 1390 1397 (fontified t) 1397 1400 (face font-lock-constant-face fontified t) 1400 1444 (fontified t) 1444 1447 (face font-lock-string-face fontified t) 1447 1475 (fontified t) 1475 1498 (face font-lock-string-face fontified t) 1498 1514 (fontified t) 1514 1517 (face font-lock-constant-face fontified t) 1517 1527 (fontified t) 1527 1531 (face font-lock-string-face fontified t) 1531 1569 (fontified t) 1569 1572 (face font-lock-string-face fontified t) 1572 1573 (fontified t) 1573 1587 (fontified t) 1587 1590 (face font-lock-string-face fontified t) 1590 1592 (fontified t) 1592 1594 (fontified t) 1594 1597 (face font-lock-keyword-face fontified t) 1597 1599 (fontified t) 1599 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face c-type c-decl-id-start fontified t) 1602 1603 (fontified t) 1603 1604 (face font-lock-variable-name-face fontified t) 1604 1629 (fontified t) 1629 1631 (face font-lock-keyword-face fontified t) 1631 1650 (fontified t) 1650 1653 (face font-lock-constant-face fontified t) 1653 1675 (fontified t) 1675 1679 (face font-lock-string-face fontified t) 1679 1687 (fontified t) 1687 1690 (face font-lock-constant-face fontified t) 1690 1734 (fontified t) 1734 1737 (face font-lock-string-face fontified t) 1737 1752 (fontified t) 1752 1756 (face font-lock-string-face fontified t) 1756 1765 (fontified t) 1765 1769 (face font-lock-keyword-face fontified t) 1769 1770 (fontified t) 1770 1772 (face font-lock-keyword-face fontified t) 1772 1791 (fontified t) 1791 1794 (face font-lock-constant-face fontified t) 1794 1804 (fontified t) 1804 1807 (face font-lock-string-face fontified t) 1807 1822 (fontified t) 1822 1826 (face font-lock-string-face fontified t) 1826 1834 (fontified t) 1834 1837 (face font-lock-constant-face fontified t) 1837 1881 (fontified t) 1881 1884 (face font-lock-string-face fontified t) 1884 1899 (fontified t) 1899 1905 (face font-lock-string-face fontified t) 1905 1917 (fontified t) 1917 1920 (face font-lock-constant-face fontified t) 1920 1941 (fontified t) 1941 1944 (face font-lock-string-face fontified t) 1944 1952 (fontified t) 1952 1955 (face font-lock-constant-face fontified t) 1955 1965 (fontified t) 1965 1970 (face font-lock-string-face fontified t) 1970 1985 (fontified t) 1985 1989 (face font-lock-string-face fontified t) 1989 1993 (fontified t) 1993 1996 (face font-lock-constant-face fontified t) 1996 2040 (fontified t) 2040 2043 (face font-lock-string-face fontified t) 2043 2071 (fontified t) 2071 2094 (face font-lock-string-face fontified t) 2094 2110 (fontified t) 2110 2114 (face font-lock-string-face fontified t) 2114 2119 (fontified t) 2119 2122 (face font-lock-type-face fontified t) 2122 2123 (face font-lock-type-face c-type c-decl-id-start fontified t) 2123 2124 (fontified t) 2124 2132 (face font-lock-function-name-face fontified t) 2132 2133 (c-type c-decl-arg-start fontified t) 2133 2136 (face font-lock-type-face fontified t) 2136 2137 (fontified t) 2137 2138 (face font-lock-variable-name-face fontified t) 2138 2144 (fontified t) 2144 2147 (face font-lock-keyword-face fontified t) 2147 2149 (fontified t) 2149 2151 (face font-lock-type-face fontified t) 2151 2152 (face font-lock-type-face c-type c-decl-id-start fontified t) 2152 2153 (fontified t) 2153 2154 (face font-lock-variable-name-face fontified t) 2154 2188 (fontified t) 2188 2194 (face font-lock-keyword-face fontified t) 2194 2222 (fontified t) 2222 2226 (face font-lock-keyword-face fontified t) 2226 2228 (fontified t) 2228 2229 (c-type c-decl-end fontified t) 2229 2236 (fontified t) 2236 2239 (face font-lock-constant-face fontified t) 2239 2267 (fontified t) 2267 2272 (face font-lock-string-face fontified t) 2272 2300 (fontified t) 2300 2305 (face font-lock-keyword-face fontified t) 2305 2311 (fontified t) 2311 2315 (face font-lock-keyword-face fontified t) 2315 2317 (fontified t) 2317 2318 (c-type c-decl-end fontified t) 2318 2325 (fontified t) 2325 2328 (face font-lock-constant-face fontified t) 2328 2356 (fontified t) 2356 2361 (face font-lock-string-face fontified t) 2361 2390 (fontified t) 2390 2395 (face font-lock-keyword-face fontified t) 2395 2401 (fontified t) 2401 2405 (face font-lock-keyword-face fontified t) 2405 2407 (fontified t) 2407 2408 (c-type c-decl-end fontified t) 2408 2415 (fontified t) 2415 2418 (face font-lock-constant-face fontified t) 2418 2446 (fontified t) 2446 2448 (face font-lock-string-face fontified t) 2448 2451 (fontified t face font-lock-string-face) 2451 2472 (fontified t) 2478 2483 (face font-lock-keyword-face) 2489 2496 (face font-lock-keyword-face) 2496 2497 (c-type c-decl-end) 2504 2507 (face font-lock-constant-face) 2529 2534 (face font-lock-string-face) 2560 2563 (face font-lock-constant-face) 2573 2577 (face font-lock-string-face) 2581 2584 (face font-lock-constant-face) 2610 2613 (face font-lock-type-face) 2613 2614 (face font-lock-type-face c-type c-decl-id-start) 2615 2626 (face font-lock-function-name-face) 2626 2627 (c-type c-decl-arg-start) 2627 2630 (face font-lock-constant-face) 2632 2638 (face font-lock-type-face) 2638 2639 (category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face) 2644 2650 (face font-lock-type-face) 2650 2651 (category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face) 2662 2663 (category c->-as-paren-syntax) 2663 2664 (category c->-as-paren-syntax) 2665 2678 (face font-lock-variable-name-face) 2678 2679 (c-type c-decl-arg-start) 2680 2683 (face font-lock-type-face) 2684 2685 (face font-lock-variable-name-face) 2692 2695 (face font-lock-keyword-face) 2697 2699 (face font-lock-type-face) 2699 2700 (face font-lock-type-face c-type c-decl-id-start) 2701 2702 (face font-lock-variable-name-face) 2736 2739 (face font-lock-constant-face) 2741 2746 (face font-lock-type-face) 2746 2747 (face font-lock-type-face c-type c-decl-id-start) 2748 2752 (face font-lock-variable-name-face) 2780 2786 (face font-lock-keyword-face) 2814 2818 (face font-lock-keyword-face) 2820 2821 (c-type c-decl-end) 2828 2831 (face font-lock-constant-face) 2847 2851 (face font-lock-string-face) 2870 2873 (face font-lock-string-face) 2884 2888 (face font-lock-string-face) 2935 2940 (face font-lock-keyword-face) 2946 2950 (face font-lock-keyword-face) 2952 2953 (c-type c-decl-end) 2960 2963 (face font-lock-constant-face) 2979 2983 (face font-lock-string-face) 3002 3005 (face font-lock-string-face) 3016 3020 (face font-lock-string-face) 3069 3074 (face font-lock-keyword-face) 3080 3084 (face font-lock-keyword-face) 3086 3087 (c-type c-decl-end) 3094 3097 (face font-lock-constant-face) 3113 3117 (face font-lock-string-face) 3136 3139 (face font-lock-string-face) 3150 3154 (face font-lock-string-face) 3199 3204 (face font-lock-keyword-face) 3210 3217 (face font-lock-keyword-face) 3217 3218 (c-type c-decl-end) 3225 3228 (face font-lock-constant-face) 3238 3242 (face font-lock-string-face) 3261 3264 (face font-lock-string-face) 3275 3279 (face font-lock-string-face) 3293 3296 (face font-lock-constant-face) 3306 3310 (face font-lock-string-face) 3314 3317 (face font-lock-constant-face) 3343 3346 (face font-lock-type-face) 3346 3347 (face font-lock-type-face c-type c-decl-id-start) 3348 3359 (face font-lock-function-name-face) 3359 3360 (c-type c-decl-arg-start) 3360 3363 (face font-lock-type-face) 3364 3365 (face font-lock-variable-name-face) 3372 3375 (face font-lock-keyword-face) 3377 3379 (face font-lock-type-face) 3379 3380 (face font-lock-type-face c-type c-decl-id-start) 3381 3382 (face font-lock-variable-name-face) 3416 3422 (face font-lock-keyword-face) 3450 3454 (face font-lock-keyword-face) 3456 3457 (c-type c-decl-end) 3464 3467 (face font-lock-constant-face) 3495 3500 (face font-lock-string-face) 3528 3533 (face font-lock-keyword-face) 3539 3543 (face font-lock-keyword-face) 3545 3546 (c-type c-decl-end) 3553 3556 (face font-lock-constant-face) 3584 3589 (face font-lock-string-face) 3618 3623 (face font-lock-keyword-face) 3629 3633 (face font-lock-keyword-face) 3635 3636 (c-type c-decl-end) 3643 3646 (face font-lock-constant-face) 3674 3679 (face font-lock-string-face) 3706 3711 (face font-lock-keyword-face) 3717 3724 (face font-lock-keyword-face) 3724 3725 (c-type c-decl-end) 3732 3735 (face font-lock-constant-face) 3757 3762 (face font-lock-string-face) 3788 3791 (face font-lock-constant-face) 3801 3805 (face font-lock-string-face) 3812 3813 (face font-lock-type-face c-is-sws t) 3813 3815 (face font-lock-type-face) 3815 3816 (face font-lock-type-face c-type c-decl-id-start) 3817 3828 (face font-lock-function-name-face) 3828 3829 (c-type c-decl-arg-start) 3829 3832 (face font-lock-constant-face) 3834 3840 (face font-lock-type-face) 3840 3841 (category c-<-as-paren-syntax) 3841 3844 (face font-lock-constant-face) 3846 3852 (face font-lock-type-face) 3852 3853 (category c-<-as-paren-syntax) 3853 3856 (face font-lock-constant-face) 3858 3864 (face font-lock-type-face) 3864 3865 (category c->-as-paren-syntax) 3865 3866 (category c->-as-paren-syntax) 3867 3880 (face font-lock-variable-name-face) 3880 3881 (c-type c-decl-arg-start) 3899 3902 (face font-lock-type-face) 3903 3918 (face font-lock-variable-name-face) 3941 3943 (c-is-sws t c-in-sws t) 3943 3944 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 3944 3946 (face font-lock-comment-delimiter-face c-in-sws t) 3946 3957 (face font-lock-comment-face c-in-sws t) 3957 3959 (c-in-sws t c-is-sws t) 3959 3960 (face font-lock-constant-face c-is-sws t) 3960 3962 (face font-lock-constant-face) 3987 3989 (face font-lock-keyword-face) 4019 4022 (face font-lock-constant-face) 4067 4086 (face font-lock-string-face) 4090 4094 (face font-lock-string-face) 4100 4104 (face font-lock-keyword-face) 4105 4107 (face font-lock-keyword-face) 4137 4140 (face font-lock-constant-face) 4199 4218 (face font-lock-string-face) 4240 4244 (face font-lock-string-face) 4250 4254 (face font-lock-keyword-face) 4255 4257 (face font-lock-keyword-face) 4283 4286 (face font-lock-constant-face) 4345 4374 (face font-lock-string-face) 4380 4382 (face font-lock-keyword-face) 4443 4448 (face font-lock-constant-face) 4493 4497 (face font-lock-keyword-face) 4545 4549 (face font-lock-keyword-face) 4550 4552 (face font-lock-keyword-face) 4580 4583 (face font-lock-constant-face) 4628 4652 (face font-lock-string-face) 4670 4674 (face font-lock-string-face) 4680 4682 (face font-lock-keyword-face) 4747 4752 (face font-lock-constant-face) 4799 4803 (face font-lock-keyword-face) 4853 4857 (face font-lock-keyword-face) 4858 4860 (face font-lock-keyword-face) 4879 4882 (face font-lock-constant-face) 4907 4937 (face font-lock-string-face) 4941 4945 (face font-lock-string-face) 4951 4954 (face font-lock-constant-face) 4979 5009 (face font-lock-string-face) 5013 5017 (face font-lock-string-face) 5023 5026 (face font-lock-constant-face) 5051 5081 (face font-lock-string-face) 5085 5089 (face font-lock-string-face) 5095 5099 (face font-lock-keyword-face) 5106 5109 (face font-lock-constant-face) 5119 5123 (face font-lock-string-face) 5125 5128 (face font-lock-comment-delimiter-face) 5128 5178 (face font-lock-comment-face) 5184 5186 (face font-lock-keyword-face) 5188 5189 (face font-lock-negation-char-face) 5206 5209 (face font-lock-keyword-face) 5211 5213 (face font-lock-type-face) 5213 5214 (face font-lock-type-face c-type c-decl-id-start) 5215 5216 (face font-lock-variable-name-face) 5256 5259 (face font-lock-constant-face) 5282 5288 (c-is-sws t c-in-sws t) 5288 5289 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5289 5291 (face font-lock-comment-delimiter-face c-in-sws t) 5291 5300 (face font-lock-comment-face c-in-sws t) 5300 5306 (c-in-sws t c-is-sws t) 5306 5307 (c-is-sws t) 5319 5325 (c-is-sws t c-in-sws t) 5325 5326 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5326 5328 (face font-lock-comment-delimiter-face c-in-sws t) 5328 5340 (face font-lock-comment-face c-in-sws t) 5340 5346 (c-in-sws t c-is-sws t) 5346 5347 (c-is-sws t) 5377 5382 (c-is-sws t c-in-sws t) 5382 5383 (c-is-sws t c-in-sws t) 5383 5384 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5384 5386 (face font-lock-comment-delimiter-face c-in-sws t) 5386 5398 (face font-lock-comment-face c-in-sws t) 5398 5404 (c-in-sws t c-is-sws t) 5404 5405 (c-is-sws t)) . 1) (undo-tree-id113 . -33) (undo-tree-id114 . -868) (undo-tree-id115 . 4586) (undo-tree-id116 . -3810) (undo-tree-id117 . 1645) (undo-tree-id118 . -3810) (undo-tree-id119 . -3810) (undo-tree-id120 . -797) (undo-tree-id121 . -868) (undo-tree-id122 . -3811) (undo-tree-id123 . -3811) (undo-tree-id124 . -3458) (undo-tree-id125 . -3811) (undo-tree-id126 . 1644) (undo-tree-id127 . -3810) (undo-tree-id128 . -3810) (undo-tree-id129 . -869) (undo-tree-id130 . -870) (undo-tree-id131 . -948) (undo-tree-id132 . -869) (undo-tree-id133 . -869) (undo-tree-id134 . -869) (undo-tree-id135 . -869) (undo-tree-id136 . -869) (undo-tree-id137 . -869) (undo-tree-id138 . -869) (undo-tree-id139 . -869) (undo-tree-id140 . -869) (undo-tree-id141 . -869) (undo-tree-id142 . -869)) nil (26692 28044 3605 41000) 0 nil])
([nil nil ((3812 . 3812) (3812 . 3813) (3811 . 3811) (3811 . 3812) (3810 . 3811) (t 26692 28044 4981 557000) 3810) nil (26692 28188 832022 850000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . 3826) (undo-tree-id233 . -2) (3828 . 3829) (3826 . 3828) (#("  " 0 2 (fontified nil)) . 3825) (undo-tree-id234 . -2) (3824 . 3828) (3823 . 3824) (3822 . 3823) (3820 . 3822) (3811 . 3820)) nil (26692 28188 832022 346000) 0 nil])
([nil nil ((#("    std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
    std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
    std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';
" 0 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 32 (fontified t) 32 62 (face font-lock-string-face fontified t) 62 66 (fontified t) 66 70 (face font-lock-string-face fontified t) 70 76 (fontified t) 76 79 (face font-lock-constant-face fontified t) 79 104 (fontified t) 104 134 (face font-lock-string-face fontified t) 134 138 (fontified t) 138 142 (face font-lock-string-face fontified t) 142 148 (fontified t) 148 151 (face font-lock-constant-face fontified t) 151 176 (fontified t) 176 206 (face font-lock-string-face fontified t) 206 210 (fontified t) 210 214 (face font-lock-string-face fontified t) 214 216 (fontified t)) . 4893) (undo-tree-id230 . -144) (undo-tree-id231 . -144) (undo-tree-id232 . -144) 5037) nil (26692 28188 831983 79000) 0 nil])
([nil nil ((4903 . 4904) (4901 . 4903) (4897 . 4901) (#("s" 0 1 (fontified t)) . -4897) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("h" 0 1 (fontified t)) . -4898) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("o" 0 1 (fontified t)) . -4899) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) 4900 (4897 . 4900) (4892 . 4897) 4867) nil (26692 28188 831981 930000) 0 nil])
([nil nil ((1 . 5266) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void menu() {

}


void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 33 (c-in-sws t face font-lock-string-face fontified t) 33 34 (c-in-sws t fontified t) 34 35 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 35 42 (c-in-sws t face font-lock-preprocessor-face fontified t) 42 43 (c-in-sws t fontified t) 43 64 (c-in-sws t face font-lock-string-face fontified t) 64 65 (c-in-sws t fontified t) 65 66 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 66 73 (c-in-sws t face font-lock-preprocessor-face fontified t) 73 74 (c-in-sws t fontified t) 74 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 135 (c-in-sws t face font-lock-string-face fontified t) 135 136 (c-in-sws t fontified t) 136 137 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 137 144 (c-in-sws t face font-lock-preprocessor-face fontified t) 144 145 (c-in-sws t fontified t) 145 146 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 146 149 (c-in-sws t face font-lock-string-face fontified t) 149 150 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 150 151 (c-in-sws t fontified t) 151 152 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 152 159 (c-in-sws t face font-lock-preprocessor-face fontified t) 159 160 (c-in-sws t fontified t) 160 161 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 161 169 (c-in-sws t face font-lock-string-face fontified t) 169 170 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 170 171 (c-in-sws t fontified t) 171 172 (c-is-sws t c-in-sws t fontified t) 172 173 (c-is-sws t face font-lock-keyword-face fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 181 (face font-lock-constant-face fontified t) 181 183 (fontified t) 183 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 190 (fontified t) 190 198 (face font-lock-variable-name-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-string-face fontified t) 204 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 215 (face font-lock-constant-face fontified t) 215 217 (fontified t) 217 222 (face font-lock-type-face fontified t) 222 223 (face font-lock-type-face c-type c-decl-id-start fontified t) 223 224 (fontified t) 224 234 (face font-lock-variable-name-face fontified t) 234 237 (fontified t) 237 240 (face font-lock-string-face fontified t) 240 243 (fontified t) 243 244 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 244 245 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 245 386 (c-in-sws t face font-lock-comment-face fontified t) 386 420 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 420 421 (c-in-sws t fontified t) 421 422 (c-is-sws t face font-lock-keyword-face fontified t) 422 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 430 (face font-lock-constant-face fontified t) 430 432 (fontified t) 432 437 (face font-lock-type-face fontified t) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified t) 438 439 (fontified t) 439 448 (face font-lock-variable-name-face fontified t) 448 451 (fontified t) 451 454 (face font-lock-string-face fontified t) 454 455 (fontified t) 455 456 (c-is-sws t c-in-sws t fontified t) 456 457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 457 459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 459 468 (c-in-sws t face font-lock-comment-face fontified t) 468 469 (c-is-sws t face font-lock-keyword-face fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (fontified t) 474 477 (face font-lock-constant-face fontified t) 477 479 (fontified t) 479 484 (face font-lock-type-face fontified t) 484 485 (face font-lock-type-face c-type c-decl-id-start fontified t) 485 486 (fontified t) 486 495 (face font-lock-variable-name-face fontified t) 495 498 (fontified t) 498 501 (face font-lock-string-face fontified t) 501 503 (fontified t) 503 508 (face font-lock-keyword-face fontified t) 508 509 (fontified t) 509 512 (face font-lock-constant-face fontified t) 512 514 (fontified t) 514 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face c-type c-decl-id-start fontified t) 520 521 (fontified t) 521 530 (face font-lock-variable-name-face fontified t) 530 533 (fontified t) 533 536 (face font-lock-string-face fontified t) 536 538 (fontified t) 538 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 554 (face font-lock-type-face fontified t) 554 555 (face font-lock-type-face c-type c-decl-id-start fontified t) 555 556 (fontified t) 556 565 (face font-lock-variable-name-face fontified t) 565 568 (fontified t) 568 571 (face font-lock-string-face fontified t) 571 573 (fontified t) 573 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-constant-face fontified t) 582 584 (fontified t) 584 589 (face font-lock-type-face fontified t) 589 590 (face font-lock-type-face c-type c-decl-id-start fontified t) 590 591 (fontified t) 591 600 (face font-lock-variable-name-face fontified t) 600 603 (fontified t) 603 606 (face font-lock-string-face fontified t) 606 608 (fontified t) 608 613 (face font-lock-keyword-face fontified t) 613 614 (fontified t) 614 617 (face font-lock-constant-face fontified t) 617 619 (fontified t) 619 624 (face font-lock-type-face fontified t) 624 625 (face font-lock-type-face c-type c-decl-id-start fontified t) 625 626 (fontified t) 626 635 (face font-lock-variable-name-face fontified t) 635 638 (fontified t) 638 641 (face font-lock-string-face fontified t) 641 643 (fontified t) 643 648 (face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (face font-lock-constant-face fontified t) 652 654 (fontified t) 654 659 (face font-lock-type-face fontified t) 659 660 (face font-lock-type-face c-type c-decl-id-start fontified t) 660 661 (fontified t) 661 670 (face font-lock-variable-name-face fontified t) 670 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 678 (fontified t) 678 683 (face font-lock-keyword-face fontified t) 683 684 (fontified t) 684 687 (face font-lock-constant-face fontified t) 687 689 (fontified t) 689 694 (face font-lock-type-face fontified t) 694 695 (face font-lock-type-face c-type c-decl-id-start fontified t) 695 696 (fontified t) 696 708 (face font-lock-variable-name-face fontified t) 708 711 (fontified t) 711 714 (face font-lock-string-face fontified t) 714 716 (fontified t) 716 721 (face font-lock-keyword-face fontified t) 721 722 (fontified t) 722 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 732 (face font-lock-type-face fontified t) 732 733 (face font-lock-type-face c-type c-decl-id-start fontified t) 733 734 (fontified t) 734 748 (face font-lock-variable-name-face fontified t) 748 751 (fontified t) 751 754 (face font-lock-string-face fontified t) 754 756 (fontified t) 756 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 765 (face font-lock-constant-face fontified t) 765 767 (fontified t) 767 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 788 (face font-lock-variable-name-face fontified t) 788 791 (fontified t) 791 794 (face font-lock-string-face fontified t) 794 797 (fontified t) 797 799 (face font-lock-type-face fontified t) 799 800 (face font-lock-type-face c-type c-decl-id-start fontified t) 800 801 (fontified t) 801 826 (face font-lock-variable-name-face fontified t) 826 832 (fontified t) 832 834 (face font-lock-type-face fontified t) 834 835 (face font-lock-type-face c-type c-decl-id-start fontified t) 835 836 (fontified t) 836 863 (face font-lock-variable-name-face fontified t) 863 870 (fontified t) 870 873 (face font-lock-constant-face fontified t) 873 875 (fontified t) 875 881 (face font-lock-type-face fontified t) 881 882 (fontified t category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face fontified t) 885 887 (fontified t) 887 893 (face font-lock-type-face fontified t) 893 894 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 894 895 (fontified t) 895 899 (face font-lock-variable-name-face fontified t) 899 903 (fontified t) 903 906 (face font-lock-string-face fontified t) 906 908 (fontified t) 908 911 (face font-lock-string-face fontified t) 911 913 (fontified t) 913 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 921 (face font-lock-string-face fontified t) 921 923 (fontified t) 923 926 (face font-lock-string-face fontified t) 926 928 (fontified t) 928 931 (face font-lock-string-face fontified t) 931 933 (fontified t) 933 936 (face font-lock-string-face fontified t) 936 938 (fontified t) 938 941 (face font-lock-string-face fontified t) 941 943 (fontified t) 943 946 (face font-lock-string-face fontified t) 946 981 (fontified t) 981 984 (face font-lock-string-face fontified t) 984 986 (fontified t) 986 989 (face font-lock-string-face fontified t) 989 991 (fontified t) 991 994 (face font-lock-string-face fontified t) 994 996 (fontified t) 996 999 (face font-lock-string-face fontified t) 999 1001 (fontified t) 1001 1004 (face font-lock-string-face fontified t) 1004 1006 (fontified t) 1006 1009 (face font-lock-string-face fontified t) 1009 1011 (fontified t) 1011 1014 (face font-lock-string-face fontified t) 1014 1016 (fontified t) 1016 1019 (face font-lock-string-face fontified t) 1019 1021 (fontified t) 1021 1024 (face font-lock-string-face fontified t) 1024 1059 (fontified t) 1059 1062 (face font-lock-string-face fontified t) 1062 1064 (fontified t) 1064 1067 (face font-lock-string-face fontified t) 1067 1069 (fontified t) 1069 1072 (face font-lock-string-face fontified t) 1072 1074 (fontified t) 1074 1077 (face font-lock-string-face fontified t) 1077 1079 (fontified t) 1079 1082 (face font-lock-string-face fontified t) 1082 1084 (fontified t) 1084 1087 (face font-lock-string-face fontified t) 1087 1089 (fontified t) 1089 1092 (face font-lock-string-face fontified t) 1092 1094 (fontified t) 1094 1097 (face font-lock-string-face fontified t) 1097 1100 (fontified t) 1100 1103 (face font-lock-constant-face fontified t) 1103 1105 (fontified t) 1105 1110 (face font-lock-type-face fontified t) 1110 1111 (face font-lock-type-face c-type c-decl-id-start fontified t) 1111 1112 (fontified t) 1112 1122 (face font-lock-variable-name-face fontified t) 1122 1125 (fontified t) 1125 1153 (face font-lock-string-face fontified t) 1153 1156 (fontified t) 1156 1159 (face font-lock-type-face fontified t) 1159 1160 (face font-lock-type-face c-type c-decl-id-start fontified t) 1160 1161 (fontified t) 1161 1171 (face font-lock-function-name-face fontified t) 1171 1172 (c-type c-decl-arg-start fontified t) 1172 1175 (face font-lock-constant-face fontified t) 1175 1177 (fontified t) 1177 1183 (face font-lock-type-face fontified t) 1183 1184 (fontified t) 1184 1190 (face font-lock-variable-name-face fontified t) 1190 1191 (c-type c-decl-arg-start fontified t) 1191 1192 (fontified t) 1192 1195 (face font-lock-constant-face fontified t) 1195 1197 (fontified t) 1197 1203 (face font-lock-type-face fontified t) 1203 1204 (fontified t) 1204 1209 (face font-lock-variable-name-face fontified t) 1209 1215 (fontified t) 1215 1218 (face font-lock-keyword-face fontified t) 1218 1220 (fontified t) 1220 1222 (face font-lock-type-face fontified t) 1222 1223 (face font-lock-type-face c-type c-decl-id-start fontified t) 1223 1224 (fontified t) 1224 1225 (face font-lock-variable-name-face fontified t) 1225 1250 (fontified t) 1250 1252 (face font-lock-keyword-face fontified t) 1252 1254 (fontified t) 1254 1257 (face font-lock-constant-face fontified t) 1257 1319 (fontified t) 1319 1322 (face font-lock-constant-face fontified t) 1322 1371 (fontified t) 1371 1374 (face font-lock-type-face fontified t) 1374 1375 (face font-lock-type-face c-type c-decl-id-start fontified t) 1375 1376 (fontified t) 1376 1390 (face font-lock-function-name-face fontified t) 1390 1397 (fontified t) 1397 1400 (face font-lock-constant-face fontified t) 1400 1444 (fontified t) 1444 1447 (face font-lock-string-face fontified t) 1447 1475 (fontified t) 1475 1498 (face font-lock-string-face fontified t) 1498 1500 (fontified t) 1500 1512 (fontified t) 1512 1514 (fontified t) 1514 1517 (face font-lock-constant-face fontified t) 1517 1527 (fontified t) 1527 1531 (face font-lock-string-face fontified t) 1531 1569 (fontified t) 1569 1572 (face font-lock-string-face fontified t) 1572 1587 (fontified t) 1587 1590 (face font-lock-string-face fontified t) 1590 1594 (fontified t) 1594 1597 (face font-lock-keyword-face fontified t) 1597 1599 (fontified t) 1599 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face c-type c-decl-id-start fontified t) 1602 1603 (fontified t) 1603 1604 (face font-lock-variable-name-face fontified t) 1604 1629 (fontified t) 1629 1631 (face font-lock-keyword-face fontified t) 1631 1650 (fontified t) 1650 1653 (face font-lock-constant-face fontified t) 1653 1675 (fontified t) 1675 1679 (face font-lock-string-face fontified t) 1679 1687 (fontified t) 1687 1690 (face font-lock-constant-face fontified t) 1690 1734 (fontified t) 1734 1737 (face font-lock-string-face fontified t) 1737 1752 (fontified t) 1752 1756 (face font-lock-string-face fontified t) 1756 1765 (fontified t) 1765 1769 (face font-lock-keyword-face fontified t) 1769 1770 (fontified t) 1770 1772 (face font-lock-keyword-face fontified t) 1772 1791 (fontified t) 1791 1794 (face font-lock-constant-face fontified t) 1794 1804 (fontified t) 1804 1807 (face font-lock-string-face fontified t) 1807 1822 (fontified t) 1822 1826 (face font-lock-string-face fontified t) 1826 1834 (fontified t) 1834 1837 (face font-lock-constant-face fontified t) 1837 1881 (fontified t) 1881 1884 (face font-lock-string-face fontified t) 1884 1899 (fontified t) 1899 1905 (face font-lock-string-face fontified t) 1905 1917 (fontified t) 1917 1920 (face font-lock-constant-face fontified t) 1920 1941 (fontified t) 1941 1944 (face font-lock-string-face fontified t) 1944 1952 (fontified t) 1952 1955 (face font-lock-constant-face fontified t) 1955 1965 (fontified t) 1965 1970 (face font-lock-string-face fontified t) 1970 1985 (fontified t) 1985 1989 (face font-lock-string-face fontified t) 1989 1993 (fontified t) 1993 1996 (face font-lock-constant-face fontified t) 1996 2040 (fontified t) 2040 2043 (face font-lock-string-face fontified t) 2043 2071 (fontified t) 2071 2094 (face font-lock-string-face fontified t) 2094 2110 (fontified t) 2110 2114 (face font-lock-string-face fontified t) 2114 2119 (fontified t) 2119 2122 (face font-lock-type-face fontified t) 2122 2123 (face font-lock-type-face c-type c-decl-id-start fontified t) 2123 2124 (fontified t) 2124 2132 (face font-lock-function-name-face fontified t) 2132 2133 (c-type c-decl-arg-start fontified t) 2133 2136 (face font-lock-type-face fontified t) 2136 2137 (fontified t) 2137 2138 (face font-lock-variable-name-face fontified t) 2138 2144 (fontified t) 2144 2147 (face font-lock-keyword-face fontified t) 2147 2149 (fontified t) 2149 2151 (face font-lock-type-face fontified t) 2151 2152 (face font-lock-type-face c-type c-decl-id-start fontified t) 2152 2153 (fontified t) 2153 2154 (face font-lock-variable-name-face fontified t) 2154 2188 (fontified t) 2188 2194 (face font-lock-keyword-face fontified t) 2194 2222 (fontified t) 2222 2226 (face font-lock-keyword-face fontified t) 2226 2228 (fontified t) 2228 2229 (c-type c-decl-end fontified t) 2229 2236 (fontified t) 2236 2239 (face font-lock-constant-face fontified t) 2239 2267 (fontified t) 2267 2272 (face font-lock-string-face fontified t) 2272 2300 (fontified t) 2300 2305 (face font-lock-keyword-face fontified t) 2305 2311 (fontified t) 2311 2315 (face font-lock-keyword-face fontified t) 2315 2317 (fontified t) 2317 2318 (c-type c-decl-end fontified t) 2318 2325 (fontified t) 2325 2328 (face font-lock-constant-face fontified t) 2328 2356 (fontified t) 2356 2361 (face font-lock-string-face fontified t) 2361 2390 (fontified t) 2390 2395 (face font-lock-keyword-face fontified t) 2395 2401 (fontified t) 2401 2405 (face font-lock-keyword-face fontified t) 2405 2407 (fontified t) 2407 2408 (c-type c-decl-end fontified t) 2408 2415 (fontified t) 2415 2418 (face font-lock-constant-face fontified t) 2418 2446 (fontified t) 2446 2451 (face font-lock-string-face fontified t) 2451 2478 (fontified t) 2478 2483 (face font-lock-keyword-face fontified t) 2483 2489 (fontified t) 2489 2496 (face font-lock-keyword-face fontified t) 2496 2497 (c-type c-decl-end fontified t) 2497 2504 (fontified t) 2504 2507 (face font-lock-constant-face fontified t) 2507 2529 (fontified t) 2529 2534 (face font-lock-string-face fontified t) 2534 2560 (fontified t) 2560 2563 (face font-lock-constant-face fontified t) 2563 2573 (fontified t) 2573 2577 (face font-lock-string-face fontified t) 2577 2581 (fontified t) 2581 2584 (face font-lock-constant-face fontified t) 2584 2610 (fontified t) 2610 2613 (face font-lock-type-face fontified t) 2613 2614 (face font-lock-type-face c-type c-decl-id-start fontified t) 2614 2615 (fontified t) 2615 2626 (face font-lock-function-name-face fontified t) 2626 2627 (c-type c-decl-arg-start fontified t) 2627 2630 (face font-lock-constant-face fontified t) 2630 2632 (fontified t) 2632 2638 (face font-lock-type-face fontified t) 2638 2639 (fontified t category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face fontified t) 2642 2644 (fontified t) 2644 2650 (face font-lock-type-face fontified t) 2650 2651 (fontified t category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face fontified t) 2654 2656 (fontified t) 2656 2662 (face font-lock-type-face fontified t) 2662 2663 (fontified t category c->-as-paren-syntax) 2663 2664 (fontified t category c->-as-paren-syntax) 2664 2665 (fontified t) 2665 2678 (face font-lock-variable-name-face fontified t) 2678 2679 (c-type c-decl-arg-start fontified t) 2679 2680 (fontified t) 2680 2683 (face font-lock-type-face fontified t) 2683 2684 (fontified t) 2684 2685 (face font-lock-variable-name-face fontified t) 2685 2692 (fontified t) 2692 2695 (face font-lock-keyword-face fontified t) 2695 2697 (fontified t) 2697 2699 (face font-lock-type-face fontified t) 2699 2700 (face font-lock-type-face c-type c-decl-id-start fontified t) 2700 2701 (fontified t) 2701 2702 (face font-lock-variable-name-face fontified t) 2702 2736 (fontified t) 2736 2739 (face font-lock-constant-face fontified t) 2739 2741 (fontified t) 2741 2746 (face font-lock-type-face fontified t) 2746 2747 (face font-lock-type-face c-type c-decl-id-start fontified t) 2747 2748 (fontified t) 2748 2752 (face font-lock-variable-name-face fontified t) 2752 2780 (fontified t) 2780 2786 (face font-lock-keyword-face fontified t) 2786 2814 (fontified t) 2814 2818 (face font-lock-keyword-face fontified t) 2818 2820 (fontified t) 2820 2821 (c-type c-decl-end fontified t) 2821 2828 (fontified t) 2828 2831 (face font-lock-constant-face fontified t) 2831 2847 (fontified t) 2847 2851 (face font-lock-string-face fontified t) 2851 2870 (fontified t) 2870 2873 (face font-lock-string-face fontified t) 2873 2884 (fontified t) 2884 2888 (face font-lock-string-face fontified t) 2888 2935 (fontified t) 2935 2940 (face font-lock-keyword-face fontified t) 2940 2946 (fontified t) 2946 2950 (face font-lock-keyword-face fontified t) 2950 2952 (fontified t) 2952 2953 (c-type c-decl-end fontified t) 2953 2960 (fontified t) 2960 2963 (face font-lock-constant-face fontified t) 2963 2979 (fontified t) 2979 2983 (face font-lock-string-face fontified t) 2983 3002 (fontified t) 3002 3005 (face font-lock-string-face fontified t) 3005 3012 (fontified t) 3012 3016 (fontified t) 3016 3020 (fontified t face font-lock-string-face) 3020 3031 (fontified t) 3031 3069 (fontified t) 3069 3074 (face font-lock-keyword-face fontified t) 3074 3080 (fontified t) 3080 3084 (face font-lock-keyword-face fontified t) 3084 3086 (fontified t) 3086 3087 (c-type c-decl-end fontified t) 3087 3094 (fontified t) 3094 3097 (face font-lock-constant-face fontified t) 3097 3113 (fontified t) 3113 3117 (face font-lock-string-face fontified t) 3117 3136 (fontified t) 3136 3139 (face font-lock-string-face fontified t) 3139 3150 (fontified t) 3150 3154 (face font-lock-string-face fontified t) 3154 3199 (fontified t) 3199 3204 (face font-lock-keyword-face fontified t) 3204 3210 (fontified t) 3210 3217 (face font-lock-keyword-face fontified t) 3217 3218 (c-type c-decl-end fontified t) 3218 3225 (fontified t) 3225 3228 (face font-lock-constant-face fontified t) 3228 3238 (fontified t) 3238 3242 (face font-lock-string-face fontified t) 3242 3261 (fontified t) 3261 3264 (face font-lock-string-face fontified t) 3264 3275 (fontified t) 3275 3279 (face font-lock-string-face fontified t) 3279 3293 (fontified t) 3293 3296 (face font-lock-constant-face fontified t) 3296 3306 (fontified t) 3306 3310 (face font-lock-string-face fontified t) 3310 3314 (fontified t) 3314 3317 (face font-lock-constant-face fontified t) 3317 3343 (fontified t) 3343 3346 (face font-lock-type-face fontified t) 3346 3347 (face font-lock-type-face c-type c-decl-id-start fontified t) 3347 3348 (fontified t) 3348 3359 (face font-lock-function-name-face fontified t) 3359 3360 (c-type c-decl-arg-start fontified t) 3360 3363 (face font-lock-type-face fontified t) 3363 3364 (fontified t) 3364 3365 (face font-lock-variable-name-face fontified t) 3365 3372 (fontified t) 3372 3375 (face font-lock-keyword-face fontified t) 3375 3377 (fontified t) 3377 3379 (face font-lock-type-face fontified t) 3379 3380 (face font-lock-type-face c-type c-decl-id-start fontified t) 3380 3381 (fontified t) 3381 3382 (face font-lock-variable-name-face fontified t) 3382 3416 (fontified t) 3416 3422 (face font-lock-keyword-face fontified t) 3422 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3809 (fontified t) 3809 3810 (fontified t) 3810 3811 (face font-lock-type-face fontified t) 3811 3812 (face font-lock-type-face fontified t) 3812 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3816 (face font-lock-function-name-face fontified t) 3816 3817 (face font-lock-function-name-face fontified t) 3817 3818 (face font-lock-function-name-face fontified t) 3818 3819 (face font-lock-function-name-face fontified t) 3819 3820 (fontified t) 3820 3821 (fontified t) 3821 3822 (fontified t) 3822 3823 (fontified t) 3823 3824 (fontified t) 3824 3825 (fontified t) 3825 3826 (fontified t) 3826 3827 (fontified t) 3827 3828 (fontified t) 3828 3829 (fontified t) 3829 3832 (face font-lock-type-face fontified t) 3832 3833 (face font-lock-type-face c-type c-decl-id-start fontified t) 3833 3834 (fontified t) 3834 3845 (face font-lock-function-name-face fontified t) 3845 3846 (c-type c-decl-arg-start fontified t) 3846 3849 (face font-lock-constant-face fontified t) 3849 3851 (fontified t) 3851 3857 (face font-lock-type-face fontified t) 3857 3858 (fontified t category c-<-as-paren-syntax) 3858 3861 (face font-lock-constant-face fontified t) 3861 3863 (fontified t) 3863 3869 (face font-lock-type-face fontified t) 3869 3870 (fontified t category c-<-as-paren-syntax) 3870 3873 (face font-lock-constant-face fontified t) 3873 3875 (fontified t) 3875 3881 (face font-lock-type-face fontified t) 3881 3882 (fontified t category c->-as-paren-syntax) 3882 3883 (fontified t category c->-as-paren-syntax) 3883 3884 (fontified t) 3884 3897 (face font-lock-variable-name-face fontified t) 3897 3898 (c-type c-decl-arg-start fontified t) 3898 3899 (fontified t) 3899 3916 (fontified t) 3916 3919 (face font-lock-type-face fontified t) 3919 3920 (fontified t) 3920 3935 (face font-lock-variable-name-face fontified t) 3935 3958 (fontified t) 3958 3960 (fontified t c-is-sws t c-in-sws t) 3960 3961 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 3961 3963 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3963 3974 (face font-lock-comment-face fontified t c-in-sws t) 3974 3976 (fontified t c-in-sws t c-is-sws t) 3976 3977 (face font-lock-constant-face fontified t c-is-sws t) 3977 3979 (face font-lock-constant-face fontified t) 3979 4004 (fontified t) 4004 4006 (face font-lock-keyword-face fontified t) 4006 4036 (fontified t) 4036 4039 (face font-lock-constant-face fontified t) 4039 4084 (fontified t) 4084 4103 (face font-lock-string-face fontified t) 4103 4107 (fontified t) 4107 4111 (face font-lock-string-face fontified t) 4111 4113 (fontified t) 4113 4117 (fontified t) 4117 4121 (face font-lock-keyword-face fontified t) 4121 4122 (fontified t) 4122 4124 (face font-lock-keyword-face fontified t) 4124 4154 (fontified t) 4154 4157 (face font-lock-constant-face fontified t) 4157 4216 (fontified t) 4216 4235 (face font-lock-string-face fontified t) 4235 4257 (fontified t) 4257 4261 (face font-lock-string-face fontified t) 4261 4267 (fontified t) 4267 4271 (face font-lock-keyword-face fontified t) 4271 4272 (fontified t) 4272 4274 (face font-lock-keyword-face fontified t) 4274 4300 (fontified t) 4300 4303 (face font-lock-constant-face fontified t) 4303 4362 (fontified t) 4362 4391 (face font-lock-string-face fontified t) 4391 4397 (fontified t) 4397 4399 (face font-lock-keyword-face fontified t) 4399 4460 (fontified t) 4460 4465 (face font-lock-constant-face fontified t) 4465 4510 (fontified t) 4510 4514 (face font-lock-keyword-face fontified t) 4514 4550 (fontified t) 4550 4552 (fontified t) 4552 4562 (fontified t) 4562 4566 (face font-lock-keyword-face fontified t) 4566 4567 (fontified t) 4567 4569 (face font-lock-keyword-face fontified t) 4569 4597 (fontified t) 4597 4600 (face font-lock-constant-face fontified t) 4600 4645 (fontified t) 4645 4669 (face font-lock-string-face fontified t) 4669 4687 (fontified t) 4687 4691 (face font-lock-string-face fontified t) 4691 4697 (fontified t) 4697 4699 (face font-lock-keyword-face fontified t) 4699 4764 (fontified t) 4764 4769 (face font-lock-constant-face fontified t) 4769 4816 (fontified t) 4816 4820 (face font-lock-keyword-face fontified t) 4820 4866 (fontified t) 4866 4870 (fontified t) 4870 4874 (face font-lock-keyword-face fontified t) 4874 4875 (fontified t) 4875 4877 (face font-lock-keyword-face fontified t) 4877 4891 (fontified t) 4891 4892 (fontified t) 4892 4896 (fontified t) 4896 4897 (fontified t) 4897 4898 (fontified t) 4898 4899 (fontified t) 4899 4900 (fontified t) 4900 4901 (fontified t) 4901 4902 (fontified t) 4902 4903 (fontified t) 4903 4904 (fontified t) 4904 4907 (fontified t) 4907 4908 (fontified t) 4908 4912 (face font-lock-keyword-face fontified t) 4912 4914 (fontified t) 4914 4915 (fontified t) 4915 4919 (fontified t) 4919 4922 (face font-lock-constant-face fontified t) 4922 4932 (fontified t) 4932 4936 (face font-lock-string-face fontified t) 4936 4938 (fontified t) 4938 4941 (face font-lock-comment-delimiter-face fontified t) 4941 4991 (face font-lock-comment-face fontified t) 4991 4997 (fontified t) 4997 4999 (face font-lock-keyword-face fontified t) 4999 5001 (fontified t) 5001 5002 (face font-lock-negation-char-face fontified t) 5002 5019 (fontified t) 5019 5022 (face font-lock-keyword-face fontified t) 5022 5024 (fontified t) 5024 5026 (face font-lock-type-face fontified t) 5026 5027 (face font-lock-type-face c-type c-decl-id-start fontified t) 5027 5028 (fontified t) 5028 5029 (face font-lock-variable-name-face fontified t) 5029 5069 (fontified t) 5069 5072 (face font-lock-constant-face fontified t) 5072 5095 (fontified t) 5095 5101 (fontified t c-is-sws t c-in-sws t) 5101 5102 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5102 5104 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5104 5112 (face font-lock-comment-face fontified t c-in-sws t) 5112 5113 (face font-lock-comment-face fontified t c-in-sws t) 5113 5119 (fontified t c-in-sws t c-is-sws t) 5119 5120 (fontified t c-is-sws t) 5120 5123 (fontified t) 5123 5131 (fontified t) 5131 5132 (fontified t) 5132 5138 (fontified t c-is-sws t c-in-sws t) 5138 5139 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5139 5141 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5141 5153 (face font-lock-comment-face fontified t c-in-sws t) 5153 5159 (fontified t c-in-sws t c-is-sws t) 5159 5160 (fontified t c-is-sws t) 5160 5190 (fontified t) 5190 5195 (fontified t c-is-sws t c-in-sws t) 5195 5196 (fontified t c-is-sws t c-in-sws t) 5196 5197 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5197 5199 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5199 5211 (face font-lock-comment-face fontified t c-in-sws t) 5211 5217 (fontified t c-in-sws t c-is-sws t) 5217 5218 (fontified t c-is-sws t) 5218 5268 (fontified t)) . 1) (undo-tree-id200 . -33) (undo-tree-id201 . -4904) (undo-tree-id202 . 365) (undo-tree-id203 . -4904) (undo-tree-id204 . 364) (undo-tree-id205 . -4904) (undo-tree-id206 . -4904) (undo-tree-id207 . -4896) (undo-tree-id208 . -4900) (undo-tree-id209 . -4296) (undo-tree-id210 . -4900) (undo-tree-id211 . -869) (undo-tree-id212 . 365) (undo-tree-id213 . -4901) (undo-tree-id214 . -4902) (undo-tree-id215 . -4296) (undo-tree-id216 . -4296) (undo-tree-id217 . -4901) 4903) nil (26692 28188 831978 594000) 0 nil])
([nil nil ((3825 . 3827) 3824 (3825 . 3826) (3824 . 3824) (3824 . 3825)) nil (26692 28188 831974 769000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3831 . 3832) (#("
" 0 1 (fontified nil)) . -4043) (3827 . 4044) 3825) nil (26692 28188 831974 386000) 0 nil])
([nil nil ((3872 . 3873) (3871 . 3872) (#(";" 0 1 (fontified t)) . -3871) (undo-tree-id189 . -1) 3872 (3871 . 3872) (3867 . 3871) (3865 . 3867) (3855 . 3865) (#(":" 0 1 (fontified t)) . -3855) (undo-tree-id190 . -1) 3856 (3855 . 3856) (3854 . 3855) (3852 . 3854) (3851 . 3852) (3840 . 3851) (#("lef" 0 3 (fontified nil)) . 3840) (3840 . 3843) (#("left_margin" 0 11 (fontified nil)) . -3840) (3840 . 3851) (#("left_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -3840) (undo-tree-id191 . -5) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -5) 3845 (3844 . 3845) (#(" " 0 1 (fontified t)) . -3844) (undo-tree-id195 . -1) 3845 (3844 . 3845) (3839 . 3844) (3837 . 3839) (3832 . 3837) (3825 . 3827) (#(" " 0 1 (fontified nil)) . 3825) (3830 . 3831) (3825 . 3826) (#("  " 0 2 (fontified nil)) . 3825) (3830 . 3831) (#(";" 0 1 (fontified t)) . -3830) (undo-tree-id196 . -1) (#(":" 0 1 (fontified t)) . -3831) (undo-tree-id197 . -1) 3832 (3831 . 3832) (3825 . 3827) (#("    " 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 3825) (undo-tree-id198 . -4) (3832 . 3833) (3827 . 3832) (3825 . 3827) (#("  " 0 2 (fontified t)) . 3825) (undo-tree-id199 . 2)) nil (26692 28188 831972 946000) 0 nil])
([nil nil ((1 . 5526) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void menu() {
  std::cout << left_margin << \"OPTIONS\" << '\\n';
    std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
    std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
    std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 33 (c-in-sws t face font-lock-string-face fontified t) 33 34 (c-in-sws t fontified t) 34 35 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 35 42 (c-in-sws t face font-lock-preprocessor-face fontified t) 42 43 (c-in-sws t fontified t) 43 64 (c-in-sws t face font-lock-string-face fontified t) 64 65 (c-in-sws t fontified t) 65 66 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 66 73 (c-in-sws t face font-lock-preprocessor-face fontified t) 73 74 (c-in-sws t fontified t) 74 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 135 (c-in-sws t face font-lock-string-face fontified t) 135 136 (c-in-sws t fontified t) 136 137 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 137 144 (c-in-sws t face font-lock-preprocessor-face fontified t) 144 145 (c-in-sws t fontified t) 145 146 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 146 149 (c-in-sws t face font-lock-string-face fontified t) 149 150 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 150 151 (c-in-sws t fontified t) 151 152 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 152 159 (c-in-sws t face font-lock-preprocessor-face fontified t) 159 160 (c-in-sws t fontified t) 160 161 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 161 169 (c-in-sws t face font-lock-string-face fontified t) 169 170 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 170 171 (c-in-sws t fontified t) 171 172 (c-is-sws t c-in-sws t fontified t) 172 173 (c-is-sws t face font-lock-keyword-face fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 181 (face font-lock-constant-face fontified t) 181 183 (fontified t) 183 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 190 (fontified t) 190 198 (face font-lock-variable-name-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-string-face fontified t) 204 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 215 (face font-lock-constant-face fontified t) 215 217 (fontified t) 217 222 (face font-lock-type-face fontified t) 222 223 (face font-lock-type-face c-type c-decl-id-start fontified t) 223 224 (fontified t) 224 234 (face font-lock-variable-name-face fontified t) 234 237 (fontified t) 237 240 (face font-lock-string-face fontified t) 240 243 (fontified t) 243 244 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 244 245 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 245 386 (c-in-sws t face font-lock-comment-face fontified t) 386 420 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 420 421 (c-in-sws t fontified t) 421 422 (c-is-sws t face font-lock-keyword-face fontified t) 422 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 430 (face font-lock-constant-face fontified t) 430 432 (fontified t) 432 437 (face font-lock-type-face fontified t) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified t) 438 439 (fontified t) 439 448 (face font-lock-variable-name-face fontified t) 448 451 (fontified t) 451 454 (face font-lock-string-face fontified t) 454 455 (fontified t) 455 456 (c-is-sws t c-in-sws t fontified t) 456 457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 457 459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 459 468 (c-in-sws t face font-lock-comment-face fontified t) 468 469 (c-is-sws t face font-lock-keyword-face fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (fontified t) 474 477 (face font-lock-constant-face fontified t) 477 479 (fontified t) 479 484 (face font-lock-type-face fontified t) 484 485 (face font-lock-type-face c-type c-decl-id-start fontified t) 485 486 (fontified t) 486 495 (face font-lock-variable-name-face fontified t) 495 498 (fontified t) 498 501 (face font-lock-string-face fontified t) 501 503 (fontified t) 503 508 (face font-lock-keyword-face fontified t) 508 509 (fontified t) 509 512 (face font-lock-constant-face fontified t) 512 514 (fontified t) 514 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face c-type c-decl-id-start fontified t) 520 521 (fontified t) 521 530 (face font-lock-variable-name-face fontified t) 530 533 (fontified t) 533 536 (face font-lock-string-face fontified t) 536 538 (fontified t) 538 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 554 (face font-lock-type-face fontified t) 554 555 (face font-lock-type-face c-type c-decl-id-start fontified t) 555 556 (fontified t) 556 565 (face font-lock-variable-name-face fontified t) 565 568 (fontified t) 568 571 (face font-lock-string-face fontified t) 571 573 (fontified t) 573 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-constant-face fontified t) 582 584 (fontified t) 584 589 (face font-lock-type-face fontified t) 589 590 (face font-lock-type-face c-type c-decl-id-start fontified t) 590 591 (fontified t) 591 600 (face font-lock-variable-name-face fontified t) 600 603 (fontified t) 603 606 (face font-lock-string-face fontified t) 606 608 (fontified t) 608 613 (face font-lock-keyword-face fontified t) 613 614 (fontified t) 614 617 (face font-lock-constant-face fontified t) 617 619 (fontified t) 619 624 (face font-lock-type-face fontified t) 624 625 (face font-lock-type-face c-type c-decl-id-start fontified t) 625 626 (fontified t) 626 635 (face font-lock-variable-name-face fontified t) 635 638 (fontified t) 638 641 (face font-lock-string-face fontified t) 641 643 (fontified t) 643 648 (face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (face font-lock-constant-face fontified t) 652 654 (fontified t) 654 659 (face font-lock-type-face fontified t) 659 660 (face font-lock-type-face c-type c-decl-id-start fontified t) 660 661 (fontified t) 661 670 (face font-lock-variable-name-face fontified t) 670 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 678 (fontified t) 678 683 (face font-lock-keyword-face fontified t) 683 684 (fontified t) 684 687 (face font-lock-constant-face fontified t) 687 689 (fontified t) 689 694 (face font-lock-type-face fontified t) 694 695 (face font-lock-type-face c-type c-decl-id-start fontified t) 695 696 (fontified t) 696 708 (face font-lock-variable-name-face fontified t) 708 711 (fontified t) 711 714 (face font-lock-string-face fontified t) 714 716 (fontified t) 716 721 (face font-lock-keyword-face fontified t) 721 722 (fontified t) 722 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 732 (face font-lock-type-face fontified t) 732 733 (face font-lock-type-face c-type c-decl-id-start fontified t) 733 734 (fontified t) 734 748 (face font-lock-variable-name-face fontified t) 748 751 (fontified t) 751 754 (face font-lock-string-face fontified t) 754 756 (fontified t) 756 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 765 (face font-lock-constant-face fontified t) 765 767 (fontified t) 767 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 788 (face font-lock-variable-name-face fontified t) 788 791 (fontified t) 791 794 (face font-lock-string-face fontified t) 794 797 (fontified t) 797 799 (face font-lock-type-face fontified t) 799 800 (face font-lock-type-face c-type c-decl-id-start fontified t) 800 801 (fontified t) 801 826 (face font-lock-variable-name-face fontified t) 826 832 (fontified t) 832 834 (face font-lock-type-face fontified t) 834 835 (face font-lock-type-face c-type c-decl-id-start fontified t) 835 836 (fontified t) 836 863 (face font-lock-variable-name-face fontified t) 863 870 (fontified t) 870 873 (face font-lock-constant-face fontified t) 873 875 (fontified t) 875 881 (face font-lock-type-face fontified t) 881 882 (fontified t category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face fontified t) 885 887 (fontified t) 887 893 (face font-lock-type-face fontified t) 893 894 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 894 895 (fontified t) 895 899 (face font-lock-variable-name-face fontified t) 899 903 (fontified t) 903 906 (face font-lock-string-face fontified t) 906 908 (fontified t) 908 911 (face font-lock-string-face fontified t) 911 913 (fontified t) 913 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 921 (face font-lock-string-face fontified t) 921 923 (fontified t) 923 926 (face font-lock-string-face fontified t) 926 928 (fontified t) 928 931 (face font-lock-string-face fontified t) 931 933 (fontified t) 933 936 (face font-lock-string-face fontified t) 936 938 (fontified t) 938 941 (face font-lock-string-face fontified t) 941 943 (fontified t) 943 946 (face font-lock-string-face fontified t) 946 981 (fontified t) 981 984 (face font-lock-string-face fontified t) 984 986 (fontified t) 986 989 (face font-lock-string-face fontified t) 989 991 (fontified t) 991 994 (face font-lock-string-face fontified t) 994 996 (fontified t) 996 999 (face font-lock-string-face fontified t) 999 1001 (fontified t) 1001 1004 (face font-lock-string-face fontified t) 1004 1006 (fontified t) 1006 1009 (face font-lock-string-face fontified t) 1009 1011 (fontified t) 1011 1014 (face font-lock-string-face fontified t) 1014 1016 (fontified t) 1016 1019 (face font-lock-string-face fontified t) 1019 1021 (fontified t) 1021 1024 (face font-lock-string-face fontified t) 1024 1059 (fontified t) 1059 1062 (face font-lock-string-face fontified t) 1062 1064 (fontified t) 1064 1067 (face font-lock-string-face fontified t) 1067 1069 (fontified t) 1069 1072 (face font-lock-string-face fontified t) 1072 1074 (fontified t) 1074 1077 (face font-lock-string-face fontified t) 1077 1079 (fontified t) 1079 1082 (face font-lock-string-face fontified t) 1082 1084 (fontified t) 1084 1087 (face font-lock-string-face fontified t) 1087 1089 (fontified t) 1089 1092 (face font-lock-string-face fontified t) 1092 1094 (fontified t) 1094 1097 (face font-lock-string-face fontified t) 1097 1100 (fontified t) 1100 1103 (face font-lock-constant-face fontified t) 1103 1105 (fontified t) 1105 1110 (face font-lock-type-face fontified t) 1110 1111 (face font-lock-type-face c-type c-decl-id-start fontified t) 1111 1112 (fontified t) 1112 1122 (face font-lock-variable-name-face fontified t) 1122 1125 (fontified t) 1125 1153 (face font-lock-string-face fontified t) 1153 1156 (fontified t) 1156 1159 (face font-lock-type-face fontified t) 1159 1160 (face font-lock-type-face c-type c-decl-id-start fontified t) 1160 1161 (fontified t) 1161 1171 (face font-lock-function-name-face fontified t) 1171 1172 (c-type c-decl-arg-start fontified t) 1172 1175 (face font-lock-constant-face fontified t) 1175 1177 (fontified t) 1177 1183 (face font-lock-type-face fontified t) 1183 1184 (fontified t) 1184 1190 (face font-lock-variable-name-face fontified t) 1190 1191 (c-type c-decl-arg-start fontified t) 1191 1192 (fontified t) 1192 1195 (face font-lock-constant-face fontified t) 1195 1197 (fontified t) 1197 1203 (face font-lock-type-face fontified t) 1203 1204 (fontified t) 1204 1209 (face font-lock-variable-name-face fontified t) 1209 1215 (fontified t) 1215 1218 (face font-lock-keyword-face fontified t) 1218 1220 (fontified t) 1220 1222 (face font-lock-type-face fontified t) 1222 1223 (face font-lock-type-face c-type c-decl-id-start fontified t) 1223 1224 (fontified t) 1224 1225 (face font-lock-variable-name-face fontified t) 1225 1250 (fontified t) 1250 1252 (face font-lock-keyword-face fontified t) 1252 1254 (fontified t) 1254 1257 (face font-lock-constant-face fontified t) 1257 1319 (fontified t) 1319 1322 (face font-lock-constant-face fontified t) 1322 1371 (fontified t) 1371 1374 (face font-lock-type-face fontified t) 1374 1375 (face font-lock-type-face c-type c-decl-id-start fontified t) 1375 1376 (fontified t) 1376 1390 (face font-lock-function-name-face fontified t) 1390 1397 (fontified t) 1397 1400 (face font-lock-constant-face fontified t) 1400 1444 (fontified t) 1444 1447 (face font-lock-string-face fontified t) 1447 1475 (fontified t) 1475 1498 (face font-lock-string-face fontified t) 1498 1514 (fontified t) 1514 1517 (face font-lock-constant-face fontified t) 1517 1527 (fontified t) 1527 1531 (face font-lock-string-face fontified t) 1531 1569 (fontified t) 1569 1572 (face font-lock-string-face fontified t) 1572 1587 (fontified t) 1587 1590 (face font-lock-string-face fontified t) 1590 1594 (fontified t) 1594 1597 (face font-lock-keyword-face fontified t) 1597 1599 (fontified t) 1599 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face c-type c-decl-id-start fontified t) 1602 1603 (fontified t) 1603 1604 (face font-lock-variable-name-face fontified t) 1604 1629 (fontified t) 1629 1631 (face font-lock-keyword-face fontified t) 1631 1650 (fontified t) 1650 1653 (face font-lock-constant-face fontified t) 1653 1675 (fontified t) 1675 1679 (face font-lock-string-face fontified t) 1679 1687 (fontified t) 1687 1690 (face font-lock-constant-face fontified t) 1690 1734 (fontified t) 1734 1737 (face font-lock-string-face fontified t) 1737 1752 (fontified t) 1752 1756 (face font-lock-string-face fontified t) 1756 1765 (fontified t) 1765 1769 (face font-lock-keyword-face fontified t) 1769 1770 (fontified t) 1770 1772 (face font-lock-keyword-face fontified t) 1772 1791 (fontified t) 1791 1794 (face font-lock-constant-face fontified t) 1794 1804 (fontified t) 1804 1807 (face font-lock-string-face fontified t) 1807 1822 (fontified t) 1822 1826 (face font-lock-string-face fontified t) 1826 1834 (fontified t) 1834 1837 (face font-lock-constant-face fontified t) 1837 1881 (fontified t) 1881 1884 (face font-lock-string-face fontified t) 1884 1899 (fontified t) 1899 1905 (face font-lock-string-face fontified t) 1905 1917 (fontified t) 1917 1920 (face font-lock-constant-face fontified t) 1920 1941 (fontified t) 1941 1944 (face font-lock-string-face fontified t) 1944 1952 (fontified t) 1952 1955 (face font-lock-constant-face fontified t) 1955 1965 (fontified t) 1965 1970 (face font-lock-string-face fontified t) 1970 1985 (fontified t) 1985 1989 (face font-lock-string-face fontified t) 1989 1993 (fontified t) 1993 1996 (face font-lock-constant-face fontified t) 1996 2040 (fontified t) 2040 2043 (face font-lock-string-face fontified t) 2043 2071 (fontified t) 2071 2094 (face font-lock-string-face fontified t) 2094 2110 (fontified t) 2110 2114 (face font-lock-string-face fontified t) 2114 2119 (fontified t) 2119 2122 (face font-lock-type-face fontified t) 2122 2123 (face font-lock-type-face c-type c-decl-id-start fontified t) 2123 2124 (fontified t) 2124 2132 (face font-lock-function-name-face fontified t) 2132 2133 (c-type c-decl-arg-start fontified t) 2133 2136 (face font-lock-type-face fontified t) 2136 2137 (fontified t) 2137 2138 (face font-lock-variable-name-face fontified t) 2138 2144 (fontified t) 2144 2147 (face font-lock-keyword-face fontified t) 2147 2149 (fontified t) 2149 2151 (face font-lock-type-face fontified t) 2151 2152 (face font-lock-type-face c-type c-decl-id-start fontified t) 2152 2153 (fontified t) 2153 2154 (face font-lock-variable-name-face fontified t) 2154 2188 (fontified t) 2188 2194 (face font-lock-keyword-face fontified t) 2194 2222 (fontified t) 2222 2226 (face font-lock-keyword-face fontified t) 2226 2228 (fontified t) 2228 2229 (c-type c-decl-end fontified t) 2229 2230 (fontified t) 2230 2236 (fontified t) 2236 2239 (face font-lock-constant-face fontified t) 2239 2267 (fontified t) 2267 2272 (face font-lock-string-face fontified t) 2272 2294 (fontified t) 2294 2300 (fontified t) 2300 2305 (face font-lock-keyword-face fontified t) 2305 2311 (fontified t) 2311 2315 (face font-lock-keyword-face fontified t) 2315 2317 (fontified t) 2317 2318 (c-type c-decl-end fontified t) 2318 2325 (fontified t) 2325 2328 (face font-lock-constant-face fontified t) 2328 2356 (fontified t) 2356 2361 (face font-lock-string-face fontified t) 2361 2390 (fontified t) 2390 2395 (face font-lock-keyword-face fontified t) 2395 2401 (fontified t) 2401 2405 (face font-lock-keyword-face fontified t) 2405 2407 (fontified t) 2407 2408 (c-type c-decl-end fontified t) 2408 2415 (fontified t) 2415 2418 (face font-lock-constant-face fontified t) 2418 2446 (fontified t) 2446 2451 (face font-lock-string-face fontified t) 2451 2478 (fontified t) 2478 2483 (face font-lock-keyword-face fontified t) 2483 2489 (fontified t) 2489 2496 (face font-lock-keyword-face fontified t) 2496 2497 (c-type c-decl-end fontified t) 2497 2504 (fontified t) 2504 2507 (face font-lock-constant-face fontified t) 2507 2529 (fontified t) 2529 2534 (face font-lock-string-face fontified t) 2534 2560 (fontified t) 2560 2563 (face font-lock-constant-face fontified t) 2563 2573 (fontified t) 2573 2577 (face font-lock-string-face fontified t) 2577 2581 (fontified t) 2581 2584 (face font-lock-constant-face fontified t) 2584 2610 (fontified t) 2610 2613 (face font-lock-type-face fontified t) 2613 2614 (face font-lock-type-face c-type c-decl-id-start fontified t) 2614 2615 (fontified t) 2615 2626 (face font-lock-function-name-face fontified t) 2626 2627 (c-type c-decl-arg-start fontified t) 2627 2630 (face font-lock-constant-face fontified t) 2630 2632 (fontified t) 2632 2638 (face font-lock-type-face fontified t) 2638 2639 (fontified t category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face fontified t) 2642 2644 (fontified t) 2644 2650 (face font-lock-type-face fontified t) 2650 2651 (fontified t category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face fontified t) 2654 2662 (fontified t) 2662 2663 (fontified t category c->-as-paren-syntax) 2663 2664 (fontified t category c->-as-paren-syntax) 2664 2665 (fontified t) 2665 2678 (face font-lock-variable-name-face fontified t) 2678 2679 (c-type c-decl-arg-start fontified t) 2679 2680 (fontified t) 2680 2683 (face font-lock-type-face fontified t) 2683 2684 (fontified t) 2684 2685 (face font-lock-variable-name-face fontified t) 2685 2692 (fontified t) 2692 2695 (face font-lock-keyword-face fontified t) 2695 2697 (fontified t) 2697 2699 (face font-lock-type-face fontified t) 2699 2700 (face font-lock-type-face c-type c-decl-id-start fontified t) 2700 2701 (fontified t) 2701 2702 (face font-lock-variable-name-face fontified t) 2702 2736 (fontified t) 2736 2739 (face font-lock-constant-face fontified t) 2739 2741 (fontified t) 2741 2746 (face font-lock-type-face fontified t) 2746 2747 (face font-lock-type-face c-type c-decl-id-start fontified t) 2747 2748 (fontified t) 2748 2752 (face font-lock-variable-name-face fontified t) 2752 2780 (fontified t) 2780 2786 (face font-lock-keyword-face fontified t) 2786 2814 (fontified t) 2814 2818 (face font-lock-keyword-face fontified t) 2818 2820 (fontified t) 2820 2821 (c-type c-decl-end fontified t) 2821 2828 (fontified t) 2828 2831 (face font-lock-constant-face fontified t) 2831 2847 (fontified t) 2847 2851 (face font-lock-string-face fontified t) 2851 2870 (fontified t) 2870 2873 (face font-lock-string-face fontified t) 2873 2884 (fontified t) 2884 2888 (face font-lock-string-face fontified t) 2888 2935 (fontified t) 2935 2940 (face font-lock-keyword-face fontified t) 2940 2946 (fontified t) 2946 2950 (face font-lock-keyword-face fontified t) 2950 2952 (fontified t) 2952 2953 (c-type c-decl-end fontified t) 2953 2960 (fontified t) 2960 2963 (face font-lock-constant-face fontified t) 2963 2979 (fontified t) 2979 2983 (face font-lock-string-face fontified t) 2983 3002 (fontified t) 3002 3005 (face font-lock-string-face fontified t) 3005 3016 (fontified t) 3016 3020 (face font-lock-string-face fontified t) 3020 3069 (fontified t) 3069 3074 (face font-lock-keyword-face fontified t) 3074 3080 (fontified t) 3080 3084 (face font-lock-keyword-face fontified t) 3084 3086 (fontified t) 3086 3087 (c-type c-decl-end fontified t) 3087 3094 (fontified t) 3094 3097 (face font-lock-constant-face fontified t) 3097 3113 (fontified t) 3113 3117 (face font-lock-string-face fontified t) 3117 3136 (fontified t) 3136 3139 (face font-lock-string-face fontified t) 3139 3150 (fontified t) 3150 3154 (face font-lock-string-face fontified t) 3154 3199 (fontified t) 3199 3204 (face font-lock-keyword-face fontified t) 3204 3210 (fontified t) 3210 3217 (face font-lock-keyword-face fontified t) 3217 3218 (c-type c-decl-end fontified t) 3218 3225 (fontified t) 3225 3228 (face font-lock-constant-face fontified t) 3228 3238 (fontified t) 3238 3242 (face font-lock-string-face fontified t) 3242 3261 (fontified t) 3261 3264 (face font-lock-string-face fontified t) 3264 3275 (fontified t) 3275 3279 (face font-lock-string-face fontified t) 3279 3287 (fontified t) 3287 3293 (fontified t) 3293 3296 (face font-lock-constant-face fontified t) 3296 3306 (fontified t) 3306 3310 (face font-lock-string-face fontified t) 3310 3314 (fontified t) 3314 3317 (face font-lock-constant-face fontified t) 3317 3343 (fontified t) 3343 3346 (face font-lock-type-face fontified t) 3346 3347 (face font-lock-type-face c-type c-decl-id-start fontified t) 3347 3348 (fontified t) 3348 3359 (face font-lock-function-name-face fontified t) 3359 3360 (c-type c-decl-arg-start fontified t) 3360 3363 (face font-lock-type-face fontified t) 3363 3364 (fontified t) 3364 3365 (face font-lock-variable-name-face fontified t) 3365 3372 (fontified t) 3372 3375 (face font-lock-keyword-face fontified t) 3375 3377 (fontified t) 3377 3379 (face font-lock-type-face fontified t) 3379 3380 (face font-lock-type-face c-type c-decl-id-start fontified t) 3380 3381 (fontified t) 3381 3382 (face font-lock-variable-name-face fontified t) 3382 3416 (fontified t) 3416 3422 (face font-lock-keyword-face fontified t) 3422 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3819 (face font-lock-function-name-face fontified t) 3819 3823 (fontified t) 3823 3824 (fontified t) 3824 3826 (fontified t) 3826 3827 (face font-lock-constant-face fontified t) 3827 3828 (face font-lock-constant-face fontified t) 3828 3829 (face font-lock-constant-face fontified t) 3829 3830 (fontified t) 3830 3831 (fontified t) 3831 3832 (fontified t) 3832 3833 (fontified t) 3833 3834 (fontified t) 3834 3835 (fontified t) 3835 3836 (fontified t) 3836 3837 (fontified t) 3837 3838 (fontified t) 3838 3839 (fontified t) 3839 3850 (fontified t) 3850 3851 (fontified t) 3851 3852 (fontified t) 3852 3853 (fontified t) 3853 3854 (fontified t) 3854 3855 (face font-lock-string-face fontified t) 3855 3856 (face font-lock-string-face fontified t) 3856 3857 (face font-lock-string-face fontified t) 3857 3858 (face font-lock-string-face fontified t) 3858 3859 (face font-lock-string-face fontified t) 3859 3860 (face font-lock-string-face fontified t) 3860 3861 (face font-lock-string-face fontified t) 3861 3862 (face font-lock-string-face fontified t) 3862 3863 (face font-lock-string-face fontified t) 3863 3864 (fontified t) 3864 3865 (fontified t) 3865 3866 (fontified t) 3866 3867 (fontified t) 3867 3868 (face font-lock-string-face fontified t) 3868 3869 (face font-lock-string-face fontified t) 3869 3870 (face font-lock-string-face fontified t) 3870 3871 (face font-lock-string-face fontified t) 3871 3872 (fontified t) 3872 3873 (fontified t) 3873 3876 (fontified t) 3876 3877 (fontified t rear-nonsticky t) 3877 3880 (face font-lock-constant-face fontified t) 3880 3905 (fontified t) 3905 3935 (face font-lock-string-face fontified t) 3935 3939 (fontified t) 3939 3943 (face font-lock-string-face fontified t) 3943 3944 (fontified t) 3944 3945 (fontified t) 3945 3949 (fontified t) 3949 3952 (face font-lock-constant-face fontified t) 3952 3977 (fontified t) 3977 4007 (face font-lock-string-face fontified t) 4007 4011 (fontified t) 4011 4015 (face font-lock-string-face fontified t) 4015 4021 (fontified t) 4021 4024 (face font-lock-constant-face fontified t) 4024 4049 (fontified t) 4049 4079 (face font-lock-string-face fontified t) 4079 4083 (fontified t) 4083 4087 (face font-lock-string-face fontified t) 4087 4088 (fontified t) 4088 4089 (fontified t) 4089 4090 (fontified t) 4090 4091 (fontified t) 4091 4092 (fontified t) 4092 4095 (face font-lock-type-face fontified t) 4095 4096 (face font-lock-type-face c-type c-decl-id-start fontified t) 4096 4097 (fontified t) 4097 4108 (face font-lock-function-name-face fontified t) 4108 4109 (c-type c-decl-arg-start fontified t) 4109 4112 (face font-lock-constant-face fontified t) 4112 4114 (fontified t) 4114 4120 (face font-lock-type-face fontified t) 4120 4121 (fontified t category c-<-as-paren-syntax) 4121 4124 (face font-lock-constant-face fontified t) 4124 4126 (fontified t) 4126 4132 (face font-lock-type-face fontified t) 4132 4133 (fontified t category c-<-as-paren-syntax) 4133 4136 (face font-lock-constant-face fontified t) 4136 4138 (fontified t) 4138 4144 (face font-lock-type-face fontified t) 4144 4145 (fontified t category c->-as-paren-syntax) 4145 4146 (fontified t category c->-as-paren-syntax) 4146 4147 (fontified t) 4147 4160 (face font-lock-variable-name-face fontified t) 4160 4161 (c-type c-decl-arg-start fontified t) 4161 4179 (fontified t) 4179 4182 (face font-lock-type-face fontified t) 4182 4183 (fontified t) 4183 4198 (face font-lock-variable-name-face fontified t) 4198 4221 (fontified t) 4221 4223 (fontified t c-is-sws t c-in-sws t) 4223 4224 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4224 4226 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4226 4237 (face font-lock-comment-face fontified t c-in-sws t) 4237 4239 (fontified t c-in-sws t c-is-sws t) 4239 4240 (face font-lock-constant-face fontified t c-is-sws t) 4240 4242 (face font-lock-constant-face fontified t) 4242 4264 (fontified t) 4264 4267 (fontified t) 4267 4269 (face font-lock-keyword-face fontified t) 4269 4299 (fontified t) 4299 4302 (face font-lock-constant-face fontified t) 4302 4347 (fontified t) 4347 4366 (face font-lock-string-face fontified t) 4366 4370 (fontified t) 4370 4374 (face font-lock-string-face fontified t) 4374 4380 (fontified t) 4380 4384 (face font-lock-keyword-face fontified t) 4384 4385 (fontified t) 4385 4387 (face font-lock-keyword-face fontified t) 4387 4417 (fontified t) 4417 4420 (face font-lock-constant-face fontified t) 4420 4479 (fontified t) 4479 4498 (face font-lock-string-face fontified t) 4498 4520 (fontified t) 4520 4524 (face font-lock-string-face fontified t) 4524 4530 (fontified t) 4530 4534 (face font-lock-keyword-face fontified t) 4534 4535 (fontified t) 4535 4537 (face font-lock-keyword-face fontified t) 4537 4559 (fontified t) 4559 4562 (fontified t) 4562 4563 (fontified t) 4563 4566 (face font-lock-constant-face fontified t) 4566 4625 (fontified t) 4625 4654 (face font-lock-string-face fontified t) 4654 4660 (fontified t) 4660 4662 (face font-lock-keyword-face fontified t) 4662 4723 (fontified t) 4723 4728 (face font-lock-constant-face fontified t) 4728 4773 (fontified t) 4773 4777 (face font-lock-keyword-face fontified t) 4777 4825 (fontified t) 4825 4829 (face font-lock-keyword-face fontified t) 4829 4830 (fontified t) 4830 4832 (face font-lock-keyword-face fontified t) 4832 4860 (fontified t) 4860 4863 (face font-lock-constant-face fontified t) 4863 4908 (fontified t) 4908 4932 (face font-lock-string-face fontified t) 4932 4950 (fontified t) 4950 4954 (face font-lock-string-face fontified t) 4954 4960 (fontified t) 4960 4962 (face font-lock-keyword-face fontified t) 4962 5027 (fontified t) 5027 5032 (face font-lock-constant-face fontified t) 5032 5079 (fontified t) 5079 5083 (face font-lock-keyword-face fontified t) 5083 5133 (fontified t) 5133 5137 (face font-lock-keyword-face fontified t) 5137 5138 (fontified t) 5138 5140 (face font-lock-keyword-face fontified t) 5140 5171 (fontified t) 5171 5175 (face font-lock-keyword-face fontified t) 5175 5182 (fontified t) 5182 5185 (face font-lock-constant-face fontified t) 5185 5195 (fontified t) 5195 5199 (face font-lock-string-face fontified t) 5199 5201 (fontified t) 5201 5204 (face font-lock-comment-delimiter-face fontified t) 5204 5254 (face font-lock-comment-face fontified t) 5254 5260 (fontified t) 5260 5262 (face font-lock-keyword-face fontified t) 5262 5264 (fontified t) 5264 5265 (face font-lock-negation-char-face fontified t) 5265 5282 (fontified t) 5282 5285 (face font-lock-keyword-face fontified t) 5285 5287 (fontified t) 5287 5289 (face font-lock-type-face fontified t) 5289 5290 (face font-lock-type-face c-type c-decl-id-start fontified t) 5290 5291 (fontified t) 5291 5292 (face font-lock-variable-name-face fontified t) 5292 5332 (fontified t) 5332 5335 (face font-lock-constant-face fontified t) 5335 5358 (fontified t) 5358 5364 (fontified t c-is-sws t c-in-sws t) 5364 5365 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5365 5367 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5367 5373 (face font-lock-comment-face fontified t c-in-sws t) 5373 5376 (fontified t face font-lock-comment-face c-in-sws t) 5376 5382 (c-in-sws t c-is-sws t) 5382 5383 (c-is-sws t) 5395 5401 (c-is-sws t c-in-sws t) 5401 5402 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5402 5404 (face font-lock-comment-delimiter-face c-in-sws t) 5404 5416 (face font-lock-comment-face c-in-sws t) 5416 5422 (c-in-sws t c-is-sws t) 5422 5423 (c-is-sws t) 5453 5459 (c-is-sws t c-in-sws t) 5459 5460 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5460 5462 (face font-lock-comment-delimiter-face c-in-sws t) 5462 5474 (face font-lock-comment-face c-in-sws t) 5474 5480 (c-in-sws t c-is-sws t) 5480 5481 (c-is-sws t)) . 1) (undo-tree-id150 . -33) (undo-tree-id151 . -4088) (undo-tree-id152 . 1659) (undo-tree-id153 . -3873) (undo-tree-id154 . -4088) (undo-tree-id155 . -3839) (undo-tree-id156 . -3839) (undo-tree-id157 . -3412) (undo-tree-id158 . -3839) (undo-tree-id159 . -868) (undo-tree-id160 . -4095) (undo-tree-id161 . -3839) (undo-tree-id162 . -3871) (undo-tree-id163 . -3412) (undo-tree-id164 . 1659) (undo-tree-id165 . -3826) (undo-tree-id166 . -3873) (undo-tree-id167 . -3872) (undo-tree-id168 . -3872) (undo-tree-id169 . -3872) (undo-tree-id170 . -3872) (undo-tree-id171 . -3872) (undo-tree-id172 . -3872) (undo-tree-id173 . -3872) (undo-tree-id174 . -3872) (undo-tree-id175 . -3872) (undo-tree-id176 . -3872) (undo-tree-id177 . -3871) (undo-tree-id178 . -3871) (undo-tree-id179 . -3824) (undo-tree-id180 . -3871) (undo-tree-id181 . -3871) (undo-tree-id182 . -3871) (undo-tree-id183 . -3871) (undo-tree-id184 . -3871) (undo-tree-id185 . -3871) (undo-tree-id186 . -3871) (undo-tree-id187 . -3871) (undo-tree-id188 . -3871) 3872) nil (26692 28188 831965 883000) 0 nil])
([nil nil ((3822 . 3826) (3816 . 3822) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -3816) (undo-tree-id241 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -3817) (undo-tree-id242 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -3818) (undo-tree-id243 . -1) (#("u" 0 1 (face font-lock-function-name-face fontified t)) . -3819) (undo-tree-id244 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -3820) (undo-tree-id245 . -1) (#("v" 0 1 (face font-lock-function-name-face fontified t)) . -3821) (undo-tree-id246 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -3822) (undo-tree-id247 . -1) 3823 (3820 . 3823) (t 26692 28188 833981 5000)) nil (26692 28230 830450 388000) 0 nil])
([nil nil ((5160 . 5170) (#("pr" 0 2 (fontified nil)) . 5160) (5160 . 5162) (#("print_menu" 0 10 (fontified nil)) . -5160) (5160 . 5170) (#("pr" 0 1 (fontified t) 1 2 (fontified t)) . -5160) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) 5162 (5160 . 5162)) nil (26692 28230 830448 41000) 0 nil])
([nil nil ((#("menu" 0 4 (fontified t)) . 5170) (undo-tree-id235 . 4)) nil (26692 28230 830443 757000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4090) (undo-tree-id248 . -2) 4092 (4089 . 4092) (t 26692 28230 832980 845000) 4025) nil (26692 28264 575262 742000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4096 . 4097) (#("
" 0 1 (fontified nil)) . -4140) (4090 . 4141)) nil (26692 28264 575253 812000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4126 . 4127) (nil fontified nil 4124 . 4127) (4124 . 4127) 4123) nil (26692 28264 575253 332000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4129 . 4130) (nil fontified nil 4127 . 4130) (4127 . 4130) 4126) nil (26692 28264 575253 35000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4132 . 4133) (nil fontified nil 4130 . 4133) (4130 . 4133) 4129) nil (26692 28264 575252 737000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4135 . 4136) (nil fontified nil 4133 . 4136) (4133 . 4136) 4132) nil (26692 28264 575252 35000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4138 . 4139) (nil fontified nil 4136 . 4139) (4136 . 4139) 4135) nil (26692 28264 575251 768000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4141 . 4142) (nil fontified nil 4139 . 4142) (4139 . 4142) 4138) nil (26692 28264 575251 502000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4144 . 4145) (nil fontified nil 4142 . 4145) (4142 . 4145) 4141) nil (26692 28264 575251 279000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4147 . 4148) (nil fontified nil 4145 . 4148) (4145 . 4148) 4144) nil (26692 28264 575250 953000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4150 . 4151) (nil fontified nil 4148 . 4151) (4148 . 4151) 4147) nil (26692 28264 575250 656000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4153 . 4154) (nil fontified nil 4151 . 4154) (4151 . 4154) 4150) nil (26692 28264 576841 133000) 0 nil])
([nil nil ((1 . 5615) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {
  std::cout << left_margin << \"OPTIONS\" << '\\n';
  std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';

      std::cout << corner_bl + \"─────────────────────────────────\" + corner_br;
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 881 882 (category c-<-as-paren-syntax) 893 894 (category c->-as-paren-syntax) 2638 2639 (category c-<-as-paren-syntax) 2650 2651 (category c-<-as-paren-syntax) 2662 2663 (category c->-as-paren-syntax) 2663 2664 (category c->-as-paren-syntax) 3287 3293 (fontified t) 3293 3296 (face font-lock-constant-face fontified t) 3296 3306 (fontified t) 3306 3310 (face font-lock-string-face fontified t) 3310 3314 (fontified t) 3314 3317 (face font-lock-constant-face fontified t) 3317 3343 (fontified t) 3343 3346 (face font-lock-type-face fontified t) 3346 3347 (face font-lock-type-face c-type c-decl-id-start fontified t) 3347 3348 (fontified t) 3348 3359 (face font-lock-function-name-face fontified t) 3359 3360 (c-type c-decl-arg-start fontified t) 3360 3363 (face font-lock-type-face fontified t) 3363 3364 (fontified t) 3364 3365 (face font-lock-variable-name-face fontified t) 3365 3370 (fontified t) 3370 3372 (fontified t) 3372 3375 (face font-lock-keyword-face fontified t) 3375 3377 (fontified t) 3377 3379 (face font-lock-type-face fontified t) 3379 3380 (face font-lock-type-face c-type c-decl-id-start fontified t) 3380 3381 (fontified t) 3381 3382 (face font-lock-variable-name-face fontified t) 3382 3412 (fontified t) 3412 3416 (fontified t) 3416 3422 (face font-lock-keyword-face fontified t) 3422 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3816 (face font-lock-function-name-face fontified t) 3816 3817 (face font-lock-function-name-face fontified t) 3817 3818 (face font-lock-function-name-face fontified t) 3818 3819 (face font-lock-function-name-face fontified t) 3819 3820 (face font-lock-function-name-face fontified t) 3820 3821 (face font-lock-function-name-face fontified t) 3821 3822 (face font-lock-function-name-face fontified t) 3822 3823 (face font-lock-function-name-face fontified t) 3823 3824 (face font-lock-function-name-face fontified t) 3824 3825 (face font-lock-function-name-face fontified t) 3825 3829 (fontified t) 3829 3830 (fontified t) 3830 3832 (fontified t) 3832 3835 (face font-lock-constant-face fontified t) 3835 3860 (fontified t) 3860 3869 (face font-lock-string-face fontified t) 3869 3873 (fontified t) 3873 3877 (face font-lock-string-face fontified t) 3877 3881 (fontified t) 3881 3884 (face font-lock-constant-face fontified t) 3884 3909 (fontified t) 3909 3939 (face font-lock-string-face fontified t) 3939 3943 (fontified t) 3943 3947 (face font-lock-string-face fontified t) 3947 3951 (fontified t) 3951 3954 (face font-lock-constant-face fontified t) 3954 3979 (fontified t) 3979 4009 (face font-lock-string-face fontified t) 4009 4013 (fontified t) 4013 4017 (face font-lock-string-face fontified t) 4017 4019 (fontified t) 4019 4021 (fontified t) 4021 4024 (face font-lock-constant-face fontified t) 4024 4049 (fontified t) 4049 4079 (face font-lock-string-face fontified t) 4079 4083 (fontified t) 4083 4087 (face font-lock-string-face fontified t) 4087 4088 (fontified t) 4088 4089 (fontified t) 4089 4090 (fontified t) 4090 4095 (fontified t) 4095 4096 (rear-nonsticky t fontified t) 4096 4099 (face font-lock-constant-face fontified t) 4099 4121 (fontified t) 4121 4123 (face font-lock-string-face fontified t) 4123 4125 (face font-lock-string-face fontified t) 4125 4126 (face font-lock-string-face rear-nonsticky t fontified t) 4126 4128 (face font-lock-string-face fontified t) 4128 4129 (face font-lock-string-face rear-nonsticky t fontified t) 4129 4131 (face font-lock-string-face fontified t) 4131 4132 (face font-lock-string-face rear-nonsticky t fontified t) 4132 4134 (face font-lock-string-face fontified t) 4134 4135 (face font-lock-string-face rear-nonsticky t fontified t) 4135 4137 (face font-lock-string-face fontified t) 4137 4138 (face font-lock-string-face rear-nonsticky t fontified t) 4138 4140 (face font-lock-string-face fontified t) 4140 4141 (face font-lock-string-face rear-nonsticky t fontified t) 4141 4143 (face font-lock-string-face fontified t) 4143 4144 (face font-lock-string-face rear-nonsticky t fontified t) 4144 4146 (face font-lock-string-face fontified t) 4146 4147 (face font-lock-string-face rear-nonsticky t fontified t) 4147 4149 (face font-lock-string-face fontified t) 4149 4150 (face font-lock-string-face rear-nonsticky t fontified t) 4150 4152 (face font-lock-string-face fontified t) 4152 4153 (face font-lock-string-face rear-nonsticky t fontified t) 4153 4156 (face font-lock-string-face fontified t) 4156 4169 (fontified t) 4169 4170 (fontified t) 4170 4173 (fontified t) 4173 4176 (face font-lock-type-face fontified t) 4176 4177 (face font-lock-type-face c-type c-decl-id-start fontified t) 4177 4178 (fontified t) 4178 4189 (face font-lock-function-name-face fontified t) 4189 4190 (c-type c-decl-arg-start fontified t) 4190 4193 (face font-lock-constant-face fontified t) 4193 4195 (fontified t) 4195 4201 (face font-lock-type-face fontified t) 4201 4202 (fontified t category c-<-as-paren-syntax) 4202 4205 (face font-lock-constant-face fontified t) 4205 4207 (fontified t) 4207 4213 (face font-lock-type-face fontified t) 4213 4214 (fontified t category c-<-as-paren-syntax) 4214 4217 (face font-lock-constant-face fontified t) 4217 4225 (fontified t) 4225 4226 (fontified t category c->-as-paren-syntax) 4226 4227 (fontified t category c->-as-paren-syntax) 4227 4228 (fontified t) 4228 4241 (face font-lock-variable-name-face fontified t) 4241 4242 (c-type c-decl-arg-start fontified t) 4242 4260 (fontified t) 4260 4263 (face font-lock-type-face fontified t) 4263 4264 (fontified t) 4264 4279 (face font-lock-variable-name-face fontified t) 4279 4302 (fontified t) 4302 4304 (fontified t c-is-sws t c-in-sws t) 4304 4305 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4305 4307 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4307 4318 (face font-lock-comment-face fontified t c-in-sws t) 4318 4320 (fontified t c-in-sws t c-is-sws t) 4320 4321 (face font-lock-constant-face fontified t c-is-sws t) 4321 4323 (face font-lock-constant-face fontified t) 4323 4348 (fontified t) 4348 4350 (face font-lock-keyword-face fontified t) 4350 4380 (fontified t) 4380 4383 (face font-lock-constant-face fontified t) 4383 4428 (fontified t) 4428 4447 (face font-lock-string-face fontified t) 4447 4451 (fontified t) 4451 4455 (face font-lock-string-face fontified t) 4455 4461 (fontified t) 4461 4465 (face font-lock-keyword-face fontified t) 4465 4466 (fontified t) 4466 4468 (face font-lock-keyword-face fontified t) 4468 4498 (fontified t) 4498 4501 (face font-lock-constant-face fontified t) 4501 4560 (fontified t) 4560 4579 (face font-lock-string-face fontified t) 4579 4601 (fontified t) 4601 4605 (face font-lock-string-face fontified t) 4605 4611 (fontified t) 4611 4615 (face font-lock-keyword-face fontified t) 4615 4616 (fontified t) 4616 4618 (face font-lock-keyword-face fontified t) 4618 4644 (fontified t) 4644 4647 (face font-lock-constant-face fontified t) 4647 4706 (fontified t) 4706 4735 (face font-lock-string-face fontified t) 4735 4741 (fontified t) 4741 4743 (face font-lock-keyword-face fontified t) 4743 4804 (fontified t) 4804 4809 (face font-lock-constant-face fontified t) 4809 4854 (fontified t) 4854 4858 (face font-lock-keyword-face fontified t) 4858 4906 (fontified t) 4906 4910 (face font-lock-keyword-face fontified t) 4910 4911 (fontified t) 4911 4913 (face font-lock-keyword-face fontified t) 4913 4941 (fontified t) 4941 4944 (face font-lock-constant-face fontified t) 4944 4989 (fontified t) 4989 4999 (face font-lock-string-face fontified t) 4999 5013 (face font-lock-string-face fontified t) 5013 5014 (fontified t) 5014 5031 (fontified t) 5031 5035 (face font-lock-string-face fontified t) 5035 5041 (fontified t) 5041 5043 (face font-lock-keyword-face fontified t) 5043 5108 (fontified t) 5108 5113 (face font-lock-constant-face fontified t) 5113 5160 (fontified t) 5160 5164 (face font-lock-keyword-face fontified t) 5164 5214 (fontified t) 5214 5218 (face font-lock-keyword-face fontified t) 5218 5219 (fontified t) 5219 5221 (face font-lock-keyword-face fontified t) 5221 5236 (fontified t) 5236 5240 (fontified t) 5240 5250 (fontified t) 5250 5253 (fontified t) 5253 5254 (fontified t) 5254 5258 (fontified t) 5258 5262 (face font-lock-keyword-face fontified t) 5262 5269 (fontified t) 5269 5272 (face font-lock-constant-face fontified t) 5272 5282 (fontified t) 5282 5286 (face font-lock-string-face fontified t) 5286 5288 (fontified t) 5288 5291 (face font-lock-comment-delimiter-face fontified t) 5291 5341 (face font-lock-comment-face fontified t) 5341 5347 (fontified t) 5347 5349 (face font-lock-keyword-face fontified t) 5349 5351 (fontified t) 5351 5352 (face font-lock-negation-char-face fontified t) 5352 5369 (fontified t) 5369 5372 (face font-lock-keyword-face fontified t) 5372 5374 (fontified t) 5374 5376 (face font-lock-type-face fontified t) 5376 5377 (face font-lock-type-face c-type c-decl-id-start fontified t) 5377 5378 (fontified t) 5378 5379 (face font-lock-variable-name-face fontified t) 5379 5402 (fontified t) 5402 5405 (fontified t) 5405 5416 (fontified t) 5416 5419 (fontified t) 5419 5422 (face font-lock-constant-face fontified t) 5422 5445 (fontified t) 5445 5451 (fontified t) 5451 5452 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 5452 5454 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5454 5463 (face font-lock-comment-face fontified t c-in-sws t) 5463 5469 (fontified t c-in-sws t) 5469 5470 (fontified t c-is-sws t) 5470 5482 (fontified t) 5482 5488 (fontified t c-is-sws t c-in-sws t) 5488 5489 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5489 5491 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5491 5503 (face font-lock-comment-face fontified t c-in-sws t) 5503 5509 (fontified t c-in-sws t c-is-sws t) 5509 5510 (fontified t c-is-sws t) 5510 5540 (fontified t) 5540 5546 (fontified t c-is-sws t c-in-sws t) 5546 5547 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5547 5549 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5549 5561 (face font-lock-comment-face fontified t c-in-sws t) 5561 5567 (fontified t c-in-sws t c-is-sws t) 5567 5568 (fontified t c-is-sws t) 5568 5618 (fontified t)) . 1) (undo-tree-id319 . -33) (undo-tree-id320 . -4153) (undo-tree-id321 . 1449) (undo-tree-id322 . -4122) (undo-tree-id323 . 1463) (undo-tree-id324 . -4122) (undo-tree-id325 . -4154) (undo-tree-id326 . -4153) (undo-tree-id327 . -4153) (undo-tree-id328 . -5240) (undo-tree-id329 . -5240) (undo-tree-id330 . -4457) (undo-tree-id331 . -5240) (undo-tree-id332 . -3369) (undo-tree-id333 . -5249) (undo-tree-id334 . -4106) 4107) nil (26692 28298 875663 696000) 0 nil] [nil nil ((nil rear-nonsticky nil 4156 . 4157) (nil fontified nil 4154 . 4157) (4154 . 4157) 4153) ((#("───" 0 2 (face font-lock-string-face fontified nil) 2 3 (face font-lock-string-face rear-nonsticky nil fontified nil)) . 4154) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (nil rear-nonsticky t 4156 . 4157)) (26692 28264 575247 236000) 0 nil])
([nil nil ((4120 . 4121) (4118 . 4120) (4117 . 4118) (4106 . 4117) (#("lef" 0 3 (fontified nil)) . 4106) (4106 . 4109) (#("left_margin" 0 11 (fontified nil)) . -4106) (4106 . 4117) (#("lef" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -4106) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) 4109 (4106 . 4109)) nil (26692 28298 875660 150000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3832 . 3833) (#("
" 0 1 (fontified nil)) . -3921) (3830 . 3922) 3829) nil (26692 28298 875658 940000) 0 nil])
([nil nil ((3868 . 3869) (#("b" 0 1 (fontified t)) . 3868)) nil (26692 28298 875658 648000) 0 nil])
([nil nil ((3918 . 3919) (#("b" 0 1 (fontified t)) . 3918) (undo-tree-id314 . -1)) nil (26692 28298 875658 289000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3831) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -2) (undo-tree-id309 . -2) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) 3833 (3830 . 3833)) nil (26692 28330 488667 177000) 0 nil])
([nil nil ((1 . 5746) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {

  std::cout << left_margin << corner_tl + \"─────────────────────────────────\" + corner_tr;
  std::cout << left_margin << \"OPTIONS\" << '\\n';
  std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';

  std::cout << left_margin << corner_bl + \"─────────────────────────────────\" + corner_br;
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 33 (c-in-sws t face font-lock-string-face fontified t) 33 34 (c-in-sws t fontified t) 34 35 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 35 42 (c-in-sws t face font-lock-preprocessor-face fontified t) 42 43 (c-in-sws t fontified t) 43 64 (c-in-sws t face font-lock-string-face fontified t) 64 65 (c-in-sws t fontified t) 65 66 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 66 73 (c-in-sws t face font-lock-preprocessor-face fontified t) 73 74 (c-in-sws t fontified t) 74 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 135 (c-in-sws t face font-lock-string-face fontified t) 135 136 (c-in-sws t fontified t) 136 137 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 137 144 (c-in-sws t face font-lock-preprocessor-face fontified t) 144 145 (c-in-sws t fontified t) 145 146 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 146 149 (c-in-sws t face font-lock-string-face fontified t) 149 150 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 150 151 (c-in-sws t fontified t) 151 152 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 152 159 (c-in-sws t face font-lock-preprocessor-face fontified t) 159 160 (c-in-sws t fontified t) 160 161 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 161 169 (c-in-sws t face font-lock-string-face fontified t) 169 170 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 170 171 (c-in-sws t fontified t) 171 172 (c-is-sws t c-in-sws t fontified t) 172 173 (c-is-sws t face font-lock-keyword-face fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 181 (face font-lock-constant-face fontified t) 181 183 (fontified t) 183 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 190 (fontified t) 190 198 (face font-lock-variable-name-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-string-face fontified t) 204 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 215 (face font-lock-constant-face fontified t) 215 217 (fontified t) 217 222 (face font-lock-type-face fontified t) 222 223 (face font-lock-type-face c-type c-decl-id-start fontified t) 223 224 (fontified t) 224 234 (face font-lock-variable-name-face fontified t) 234 237 (fontified t) 237 240 (face font-lock-string-face fontified t) 240 243 (fontified t) 243 244 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 244 245 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 245 386 (c-in-sws t face font-lock-comment-face fontified t) 386 420 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 420 421 (c-in-sws t fontified t) 421 422 (c-is-sws t face font-lock-keyword-face fontified t) 422 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 430 (face font-lock-constant-face fontified t) 430 432 (fontified t) 432 437 (face font-lock-type-face fontified t) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified t) 438 439 (fontified t) 439 448 (face font-lock-variable-name-face fontified t) 448 451 (fontified t) 451 454 (face font-lock-string-face fontified t) 454 455 (fontified t) 455 456 (c-is-sws t c-in-sws t fontified t) 456 457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 457 459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 459 468 (c-in-sws t face font-lock-comment-face fontified t) 468 469 (c-is-sws t face font-lock-keyword-face fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (fontified t) 474 477 (face font-lock-constant-face fontified t) 477 479 (fontified t) 479 484 (face font-lock-type-face fontified t) 484 485 (face font-lock-type-face c-type c-decl-id-start fontified t) 485 486 (fontified t) 486 495 (face font-lock-variable-name-face fontified t) 495 498 (fontified t) 498 501 (face font-lock-string-face fontified t) 501 503 (fontified t) 503 508 (face font-lock-keyword-face fontified t) 508 509 (fontified t) 509 512 (face font-lock-constant-face fontified t) 512 514 (fontified t) 514 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face c-type c-decl-id-start fontified t) 520 521 (fontified t) 521 530 (face font-lock-variable-name-face fontified t) 530 533 (fontified t) 533 536 (face font-lock-string-face fontified t) 536 538 (fontified t) 538 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 554 (face font-lock-type-face fontified t) 554 555 (face font-lock-type-face c-type c-decl-id-start fontified t) 555 556 (fontified t) 556 565 (face font-lock-variable-name-face fontified t) 565 568 (fontified t) 568 571 (face font-lock-string-face fontified t) 571 573 (fontified t) 573 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-constant-face fontified t) 582 584 (fontified t) 584 589 (face font-lock-type-face fontified t) 589 590 (face font-lock-type-face c-type c-decl-id-start fontified t) 590 591 (fontified t) 591 600 (face font-lock-variable-name-face fontified t) 600 603 (fontified t) 603 606 (face font-lock-string-face fontified t) 606 608 (fontified t) 608 613 (face font-lock-keyword-face fontified t) 613 614 (fontified t) 614 617 (face font-lock-constant-face fontified t) 617 619 (fontified t) 619 624 (face font-lock-type-face fontified t) 624 625 (face font-lock-type-face c-type c-decl-id-start fontified t) 625 626 (fontified t) 626 635 (face font-lock-variable-name-face fontified t) 635 638 (fontified t) 638 641 (face font-lock-string-face fontified t) 641 643 (fontified t) 643 648 (face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (face font-lock-constant-face fontified t) 652 654 (fontified t) 654 659 (face font-lock-type-face fontified t) 659 660 (face font-lock-type-face c-type c-decl-id-start fontified t) 660 661 (fontified t) 661 670 (face font-lock-variable-name-face fontified t) 670 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 678 (fontified t) 678 683 (face font-lock-keyword-face fontified t) 683 684 (fontified t) 684 687 (face font-lock-constant-face fontified t) 687 689 (fontified t) 689 694 (face font-lock-type-face fontified t) 694 695 (face font-lock-type-face c-type c-decl-id-start fontified t) 695 696 (fontified t) 696 708 (face font-lock-variable-name-face fontified t) 708 711 (fontified t) 711 714 (face font-lock-string-face fontified t) 714 716 (fontified t) 716 721 (face font-lock-keyword-face fontified t) 721 722 (fontified t) 722 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 732 (face font-lock-type-face fontified t) 732 733 (face font-lock-type-face c-type c-decl-id-start fontified t) 733 734 (fontified t) 734 748 (face font-lock-variable-name-face fontified t) 748 751 (fontified t) 751 754 (face font-lock-string-face fontified t) 754 756 (fontified t) 756 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 765 (face font-lock-constant-face fontified t) 765 767 (fontified t) 767 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 788 (face font-lock-variable-name-face fontified t) 788 791 (fontified t) 791 794 (face font-lock-string-face fontified t) 794 797 (fontified t) 797 799 (face font-lock-type-face fontified t) 799 800 (face font-lock-type-face c-type c-decl-id-start fontified t) 800 801 (fontified t) 801 826 (face font-lock-variable-name-face fontified t) 826 832 (fontified t) 832 834 (face font-lock-type-face fontified t) 834 835 (face font-lock-type-face c-type c-decl-id-start fontified t) 835 836 (fontified t) 836 863 (face font-lock-variable-name-face fontified t) 863 870 (fontified t) 870 873 (face font-lock-constant-face fontified t) 873 875 (fontified t) 875 881 (face font-lock-type-face fontified t) 881 882 (fontified t category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face fontified t) 885 887 (fontified t) 887 893 (face font-lock-type-face fontified t) 893 894 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 894 895 (fontified t) 895 899 (face font-lock-variable-name-face fontified t) 899 903 (fontified t) 903 906 (face font-lock-string-face fontified t) 906 908 (fontified t) 908 911 (face font-lock-string-face fontified t) 911 913 (fontified t) 913 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 921 (face font-lock-string-face fontified t) 921 923 (fontified t) 923 926 (face font-lock-string-face fontified t) 926 928 (fontified t) 928 931 (face font-lock-string-face fontified t) 931 933 (fontified t) 933 936 (face font-lock-string-face fontified t) 936 938 (fontified t) 938 941 (face font-lock-string-face fontified t) 941 943 (fontified t) 943 946 (face font-lock-string-face fontified t) 946 981 (fontified t) 981 984 (face font-lock-string-face fontified t) 984 986 (fontified t) 986 989 (face font-lock-string-face fontified t) 989 991 (fontified t) 991 994 (face font-lock-string-face fontified t) 994 996 (fontified t) 996 999 (face font-lock-string-face fontified t) 999 1001 (fontified t) 1001 1004 (face font-lock-string-face fontified t) 1004 1006 (fontified t) 1006 1009 (face font-lock-string-face fontified t) 1009 1011 (fontified t) 1011 1014 (face font-lock-string-face fontified t) 1014 1016 (fontified t) 1016 1019 (face font-lock-string-face fontified t) 1019 1021 (fontified t) 1021 1024 (face font-lock-string-face fontified t) 1024 1059 (fontified t) 1059 1062 (face font-lock-string-face fontified t) 1062 1064 (fontified t) 1064 1067 (face font-lock-string-face fontified t) 1067 1069 (fontified t) 1069 1072 (face font-lock-string-face fontified t) 1072 1074 (fontified t) 1074 1077 (face font-lock-string-face fontified t) 1077 1079 (fontified t) 1079 1082 (face font-lock-string-face fontified t) 1082 1084 (fontified t) 1084 1087 (face font-lock-string-face fontified t) 1087 1089 (fontified t) 1089 1092 (face font-lock-string-face fontified t) 1092 1094 (fontified t) 1094 1097 (face font-lock-string-face fontified t) 1097 1100 (fontified t) 1100 1103 (face font-lock-constant-face fontified t) 1103 1105 (fontified t) 1105 1110 (face font-lock-type-face fontified t) 1110 1111 (face font-lock-type-face c-type c-decl-id-start fontified t) 1111 1112 (fontified t) 1112 1122 (face font-lock-variable-name-face fontified t) 1122 1125 (fontified t) 1125 1153 (face font-lock-string-face fontified t) 1153 1156 (fontified t) 1156 1159 (face font-lock-type-face fontified t) 1159 1160 (face font-lock-type-face c-type c-decl-id-start fontified t) 1160 1161 (fontified t) 1161 1171 (face font-lock-function-name-face fontified t) 1171 1172 (c-type c-decl-arg-start fontified t) 1172 1175 (face font-lock-constant-face fontified t) 1175 1177 (fontified t) 1177 1183 (face font-lock-type-face fontified t) 1183 1184 (fontified t) 1184 1190 (face font-lock-variable-name-face fontified t) 1190 1191 (c-type c-decl-arg-start fontified t) 1191 1192 (fontified t) 1192 1195 (face font-lock-constant-face fontified t) 1195 1197 (fontified t) 1197 1203 (face font-lock-type-face fontified t) 1203 1204 (fontified t) 1204 1209 (face font-lock-variable-name-face fontified t) 1209 1215 (fontified t) 1215 1218 (face font-lock-keyword-face fontified t) 1218 1220 (fontified t) 1220 1222 (face font-lock-type-face fontified t) 1222 1223 (face font-lock-type-face c-type c-decl-id-start fontified t) 1223 1224 (fontified t) 1224 1225 (face font-lock-variable-name-face fontified t) 1225 1250 (fontified t) 1250 1252 (face font-lock-keyword-face fontified t) 1252 1254 (fontified t) 1254 1257 (face font-lock-constant-face fontified t) 1257 1319 (fontified t) 1319 1322 (face font-lock-constant-face fontified t) 1322 1371 (fontified t) 1371 1374 (face font-lock-type-face fontified t) 1374 1375 (face font-lock-type-face c-type c-decl-id-start fontified t) 1375 1376 (fontified t) 1376 1390 (face font-lock-function-name-face fontified t) 1390 1397 (fontified t) 1397 1400 (face font-lock-constant-face fontified t) 1400 1444 (fontified t) 1444 1447 (face font-lock-string-face fontified t) 1447 1475 (fontified t) 1475 1498 (face font-lock-string-face fontified t) 1498 1500 (fontified t) 1500 1512 (fontified t) 1512 1514 (fontified t) 1514 1517 (face font-lock-constant-face fontified t) 1517 1527 (fontified t) 1527 1531 (face font-lock-string-face fontified t) 1531 1569 (fontified t) 1569 1572 (face font-lock-string-face fontified t) 1572 1587 (fontified t) 1587 1590 (face font-lock-string-face fontified t) 1590 1594 (fontified t) 1594 1597 (face font-lock-keyword-face fontified t) 1597 1599 (fontified t) 1599 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face c-type c-decl-id-start fontified t) 1602 1603 (fontified t) 1603 1604 (face font-lock-variable-name-face fontified t) 1604 1629 (fontified t) 1629 1631 (face font-lock-keyword-face fontified t) 1631 1650 (fontified t) 1650 1653 (face font-lock-constant-face fontified t) 1653 1675 (fontified t) 1675 1679 (face font-lock-string-face fontified t) 1679 1687 (fontified t) 1687 1690 (face font-lock-constant-face fontified t) 1690 1734 (fontified t) 1734 1737 (face font-lock-string-face fontified t) 1737 1752 (fontified t) 1752 1756 (face font-lock-string-face fontified t) 1756 1765 (fontified t) 1765 1769 (face font-lock-keyword-face fontified t) 1769 1770 (fontified t) 1770 1772 (face font-lock-keyword-face fontified t) 1772 1791 (fontified t) 1791 1794 (face font-lock-constant-face fontified t) 1794 1804 (fontified t) 1804 1807 (face font-lock-string-face fontified t) 1807 1822 (fontified t) 1822 1826 (face font-lock-string-face fontified t) 1826 1834 (fontified t) 1834 1837 (face font-lock-constant-face fontified t) 1837 1881 (fontified t) 1881 1884 (face font-lock-string-face fontified t) 1884 1899 (fontified t) 1899 1905 (face font-lock-string-face fontified t) 1905 1917 (fontified t) 1917 1920 (face font-lock-constant-face fontified t) 1920 1941 (fontified t) 1941 1944 (face font-lock-string-face fontified t) 1944 1952 (fontified t) 1952 1955 (face font-lock-constant-face fontified t) 1955 1965 (fontified t) 1965 1970 (face font-lock-string-face fontified t) 1970 1985 (fontified t) 1985 1989 (face font-lock-string-face fontified t) 1989 1993 (fontified t) 1993 1996 (face font-lock-constant-face fontified t) 1996 2040 (fontified t) 2040 2043 (face font-lock-string-face fontified t) 2043 2071 (fontified t) 2071 2094 (face font-lock-string-face fontified t) 2094 2110 (fontified t) 2110 2114 (face font-lock-string-face fontified t) 2114 2119 (fontified t) 2119 2122 (face font-lock-type-face fontified t) 2122 2123 (face font-lock-type-face c-type c-decl-id-start fontified t) 2123 2124 (fontified t) 2124 2132 (face font-lock-function-name-face fontified t) 2132 2133 (c-type c-decl-arg-start fontified t) 2133 2136 (face font-lock-type-face fontified t) 2136 2137 (fontified t) 2137 2138 (face font-lock-variable-name-face fontified t) 2138 2144 (fontified t) 2144 2147 (face font-lock-keyword-face fontified t) 2147 2149 (fontified t) 2149 2151 (face font-lock-type-face fontified t) 2151 2152 (face font-lock-type-face c-type c-decl-id-start fontified t) 2152 2153 (fontified t) 2153 2154 (face font-lock-variable-name-face fontified t) 2154 2188 (fontified t) 2188 2194 (face font-lock-keyword-face fontified t) 2194 2222 (fontified t) 2222 2226 (face font-lock-keyword-face fontified t) 2226 2228 (fontified t) 2228 2229 (c-type c-decl-end fontified t) 2229 2236 (fontified t) 2236 2239 (face font-lock-constant-face fontified t) 2239 2267 (fontified t) 2267 2272 (face font-lock-string-face fontified t) 2272 2300 (fontified t) 2300 2305 (face font-lock-keyword-face fontified t) 2305 2311 (fontified t) 2311 2315 (face font-lock-keyword-face fontified t) 2315 2317 (fontified t) 2317 2318 (c-type c-decl-end fontified t) 2318 2325 (fontified t) 2325 2328 (face font-lock-constant-face fontified t) 2328 2356 (fontified t) 2356 2361 (face font-lock-string-face fontified t) 2361 2390 (fontified t) 2390 2395 (face font-lock-keyword-face fontified t) 2395 2401 (fontified t) 2401 2405 (face font-lock-keyword-face fontified t) 2405 2407 (fontified t) 2407 2408 (c-type c-decl-end fontified t) 2408 2415 (fontified t) 2415 2418 (face font-lock-constant-face fontified t) 2418 2446 (fontified t) 2446 2451 (face font-lock-string-face fontified t) 2451 2478 (fontified t) 2478 2483 (face font-lock-keyword-face fontified t) 2483 2489 (fontified t) 2489 2496 (face font-lock-keyword-face fontified t) 2496 2497 (c-type c-decl-end fontified t) 2497 2504 (fontified t) 2504 2507 (face font-lock-constant-face fontified t) 2507 2529 (fontified t) 2529 2534 (face font-lock-string-face fontified t) 2534 2560 (fontified t) 2560 2563 (face font-lock-constant-face fontified t) 2563 2573 (fontified t) 2573 2577 (face font-lock-string-face fontified t) 2577 2581 (fontified t) 2581 2584 (face font-lock-constant-face fontified t) 2584 2610 (fontified t) 2610 2613 (face font-lock-type-face fontified t) 2613 2614 (face font-lock-type-face c-type c-decl-id-start fontified t) 2614 2615 (fontified t) 2615 2626 (face font-lock-function-name-face fontified t) 2626 2627 (c-type c-decl-arg-start fontified t) 2627 2630 (face font-lock-constant-face fontified t) 2630 2632 (fontified t) 2632 2638 (face font-lock-type-face fontified t) 2638 2639 (fontified t category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face fontified t) 2642 2644 (fontified t) 2644 2650 (face font-lock-type-face fontified t) 2650 2651 (fontified t category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face fontified t) 2654 2656 (fontified t) 2656 2662 (face font-lock-type-face fontified t) 2662 2663 (fontified t category c->-as-paren-syntax) 2663 2664 (fontified t category c->-as-paren-syntax) 2664 2665 (fontified t) 2665 2678 (face font-lock-variable-name-face fontified t) 2678 2679 (c-type c-decl-arg-start fontified t) 2679 2680 (fontified t) 2680 2683 (face font-lock-type-face fontified t) 2683 2684 (fontified t) 2684 2685 (face font-lock-variable-name-face fontified t) 2685 2692 (fontified t) 2692 2695 (face font-lock-keyword-face fontified t) 2695 2697 (fontified t) 2697 2699 (face font-lock-type-face fontified t) 2699 2700 (face font-lock-type-face c-type c-decl-id-start fontified t) 2700 2701 (fontified t) 2701 2702 (face font-lock-variable-name-face fontified t) 2702 2736 (fontified t) 2736 2739 (face font-lock-constant-face fontified t) 2739 2741 (fontified t) 2741 2746 (face font-lock-type-face fontified t) 2746 2747 (face font-lock-type-face c-type c-decl-id-start fontified t) 2747 2748 (fontified t) 2748 2752 (face font-lock-variable-name-face fontified t) 2752 2780 (fontified t) 2780 2786 (face font-lock-keyword-face fontified t) 2786 2814 (fontified t) 2814 2818 (face font-lock-keyword-face fontified t) 2818 2820 (fontified t) 2820 2821 (c-type c-decl-end fontified t) 2821 2828 (fontified t) 2828 2831 (face font-lock-constant-face fontified t) 2831 2847 (fontified t) 2847 2851 (face font-lock-string-face fontified t) 2851 2870 (fontified t) 2870 2873 (face font-lock-string-face fontified t) 2873 2884 (fontified t) 2884 2888 (face font-lock-string-face fontified t) 2888 2935 (fontified t) 2935 2940 (face font-lock-keyword-face fontified t) 2940 2946 (fontified t) 2946 2950 (face font-lock-keyword-face fontified t) 2950 2952 (fontified t) 2952 2953 (c-type c-decl-end fontified t) 2953 2960 (fontified t) 2960 2963 (face font-lock-constant-face fontified t) 2963 2979 (fontified t) 2979 2983 (face font-lock-string-face fontified t) 2983 3002 (fontified t) 3002 3005 (face font-lock-string-face fontified t) 3005 3012 (fontified t) 3012 3016 (fontified t) 3016 3020 (face font-lock-string-face fontified t) 3020 3031 (fontified t) 3031 3069 (fontified t) 3069 3074 (face font-lock-keyword-face fontified t) 3074 3080 (fontified t) 3080 3084 (face font-lock-keyword-face fontified t) 3084 3086 (fontified t) 3086 3087 (c-type c-decl-end fontified t) 3087 3094 (fontified t) 3094 3097 (face font-lock-constant-face fontified t) 3097 3113 (fontified t) 3113 3117 (face font-lock-string-face fontified t) 3117 3136 (fontified t) 3136 3139 (face font-lock-string-face fontified t) 3139 3150 (fontified t) 3150 3154 (face font-lock-string-face fontified t) 3154 3199 (fontified t) 3199 3204 (face font-lock-keyword-face fontified t) 3204 3210 (fontified t) 3210 3217 (face font-lock-keyword-face fontified t) 3217 3218 (c-type c-decl-end fontified t) 3218 3225 (fontified t) 3225 3228 (face font-lock-constant-face fontified t) 3228 3238 (fontified t) 3238 3242 (face font-lock-string-face fontified t) 3242 3261 (fontified t) 3261 3264 (face font-lock-string-face fontified t) 3264 3275 (fontified t) 3275 3279 (face font-lock-string-face fontified t) 3279 3293 (fontified t) 3293 3296 (face font-lock-constant-face fontified t) 3296 3306 (fontified t) 3306 3310 (face font-lock-string-face fontified t) 3310 3314 (fontified t) 3314 3317 (face font-lock-constant-face fontified t) 3317 3343 (fontified t) 3343 3346 (face font-lock-type-face fontified t) 3346 3347 (face font-lock-type-face c-type c-decl-id-start fontified t) 3347 3348 (fontified t) 3348 3359 (face font-lock-function-name-face fontified t) 3359 3360 (c-type c-decl-arg-start fontified t) 3360 3363 (face font-lock-type-face fontified t) 3363 3364 (fontified t) 3364 3365 (face font-lock-variable-name-face fontified t) 3365 3369 (fontified t) 3369 3372 (fontified t) 3372 3375 (face font-lock-keyword-face fontified t) 3375 3377 (fontified t) 3377 3379 (face font-lock-type-face fontified t) 3379 3380 (face font-lock-type-face c-type c-decl-id-start fontified t) 3380 3381 (fontified t) 3381 3382 (face font-lock-variable-name-face fontified t) 3382 3416 (fontified t) 3416 3422 (face font-lock-keyword-face fontified t) 3422 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3809 (fontified t) 3809 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3829 (fontified t) 3829 3830 (fontified t) 3830 3831 (fontified t) 3831 3832 (fontified t) 3832 3833 (fontified t rear-nonsticky t) 3833 3836 (face font-lock-constant-face fontified t) 3836 3846 (fontified t) 3846 3857 (fontified t) 3857 3858 (fontified t) 3858 3859 (fontified t) 3859 3860 (fontified t) 3860 3861 (fontified t) 3861 3868 (fontified t) 3868 3869 (fontified t) 3869 3873 (fontified t) 3873 3908 (face font-lock-string-face fontified t) 3908 3918 (fontified t) 3918 3919 (fontified t) 3919 3921 (fontified t) 3921 3922 (fontified t) 3922 3924 (fontified t) 3924 3927 (face font-lock-constant-face fontified t) 3927 3952 (fontified t) 3952 3961 (face font-lock-string-face fontified t) 3961 3965 (fontified t) 3965 3969 (face font-lock-string-face fontified t) 3969 3973 (fontified t) 3973 3976 (face font-lock-constant-face fontified t) 3976 4001 (fontified t) 4001 4031 (face font-lock-string-face fontified t) 4031 4035 (fontified t) 4035 4039 (face font-lock-string-face fontified t) 4039 4043 (fontified t) 4043 4046 (face font-lock-constant-face fontified t) 4046 4071 (fontified t) 4071 4101 (face font-lock-string-face fontified t) 4101 4105 (fontified t) 4105 4109 (face font-lock-string-face fontified t) 4109 4113 (fontified t) 4113 4116 (face font-lock-constant-face fontified t) 4116 4141 (fontified t) 4141 4171 (face font-lock-string-face fontified t) 4171 4175 (fontified t) 4175 4179 (face font-lock-string-face fontified t) 4179 4182 (fontified t) 4182 4184 (fontified t) 4184 4187 (face font-lock-constant-face fontified t) 4187 4197 (fontified t) 4197 4208 (fontified t) 4208 4209 (fontified t) 4209 4210 (fontified t) 4210 4211 (fontified t) 4211 4212 (fontified t) 4212 4224 (fontified t) 4224 4259 (face font-lock-string-face fontified t) 4259 4272 (fontified t) 4272 4276 (fontified t) 4276 4279 (face font-lock-type-face fontified t) 4279 4280 (face font-lock-type-face c-type c-decl-id-start fontified t) 4280 4281 (fontified t) 4281 4292 (face font-lock-function-name-face fontified t) 4292 4293 (c-type c-decl-arg-start fontified t) 4293 4296 (face font-lock-constant-face fontified t) 4296 4298 (fontified t) 4298 4304 (face font-lock-type-face fontified t) 4304 4305 (fontified t category c-<-as-paren-syntax) 4305 4308 (face font-lock-constant-face fontified t) 4308 4310 (fontified t) 4310 4316 (face font-lock-type-face fontified t) 4316 4317 (fontified t category c-<-as-paren-syntax) 4317 4320 (face font-lock-constant-face fontified t) 4320 4322 (fontified t) 4322 4328 (face font-lock-type-face fontified t) 4328 4329 (fontified t category c->-as-paren-syntax) 4329 4330 (fontified t category c->-as-paren-syntax) 4330 4331 (fontified t) 4331 4344 (face font-lock-variable-name-face fontified t) 4344 4345 (c-type c-decl-arg-start fontified t) 4345 4363 (fontified t) 4363 4366 (face font-lock-type-face fontified t) 4366 4367 (fontified t) 4367 4382 (face font-lock-variable-name-face fontified t) 4382 4405 (fontified t) 4405 4407 (fontified t c-is-sws t c-in-sws t) 4407 4408 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4408 4410 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4410 4421 (face font-lock-comment-face fontified t c-in-sws t) 4421 4423 (fontified t c-in-sws t c-is-sws t) 4423 4424 (face font-lock-constant-face fontified t c-is-sws t) 4424 4426 (face font-lock-constant-face fontified t) 4426 4451 (fontified t) 4451 4453 (face font-lock-keyword-face fontified t) 4453 4483 (fontified t) 4483 4486 (face font-lock-constant-face fontified t) 4486 4531 (fontified t) 4531 4550 (fontified t face font-lock-string-face) 4550 4554 (fontified t) 4554 4558 (fontified t face font-lock-string-face) 4558 4560 (fontified t) 4560 4564 (fontified t) 4564 4568 (face font-lock-keyword-face fontified t) 4568 4569 (fontified t) 4569 4571 (face font-lock-keyword-face fontified t) 4571 4601 (fontified t) 4601 4604 (face font-lock-constant-face fontified t) 4604 4663 (fontified t) 4663 4682 (face font-lock-string-face fontified t) 4682 4704 (fontified t) 4704 4708 (face font-lock-string-face fontified t) 4708 4714 (fontified t) 4714 4718 (face font-lock-keyword-face fontified t) 4718 4719 (fontified t) 4719 4721 (face font-lock-keyword-face fontified t) 4721 4747 (fontified t) 4747 4750 (face font-lock-constant-face fontified t) 4750 4809 (fontified t) 4809 4838 (face font-lock-string-face fontified t) 4838 4844 (fontified t) 4844 4846 (face font-lock-keyword-face fontified t) 4846 4869 (fontified t) 4869 4876 (fontified t) 4876 4907 (fontified t) 4907 4912 (face font-lock-constant-face fontified t) 4912 4957 (fontified t) 4957 4961 (face font-lock-keyword-face fontified t) 4961 4976 (fontified t) 4976 4998 (fontified t) 4998 5009 (fontified t) 5009 5013 (face font-lock-keyword-face fontified t) 5013 5014 (fontified t) 5014 5016 (face font-lock-keyword-face fontified t) 5016 5044 (fontified t) 5044 5047 (face font-lock-constant-face fontified t) 5047 5092 (fontified t) 5092 5116 (face font-lock-string-face fontified t) 5116 5134 (fontified t) 5134 5138 (face font-lock-string-face fontified t) 5138 5144 (fontified t) 5144 5146 (face font-lock-keyword-face fontified t) 5146 5211 (fontified t) 5211 5216 (face font-lock-constant-face fontified t) 5216 5263 (fontified t) 5263 5267 (face font-lock-keyword-face fontified t) 5267 5309 (fontified t) 5309 5313 (fontified t) 5313 5317 (fontified t) 5317 5321 (face font-lock-keyword-face fontified t) 5321 5322 (fontified t) 5322 5324 (face font-lock-keyword-face fontified t) 5324 5361 (fontified t) 5361 5365 (face font-lock-keyword-face fontified t) 5365 5372 (fontified t) 5372 5375 (face font-lock-constant-face fontified t) 5375 5385 (fontified t) 5385 5389 (face font-lock-string-face fontified t) 5389 5391 (fontified t) 5391 5394 (face font-lock-comment-delimiter-face fontified t) 5394 5421 (face font-lock-comment-face fontified t) 5421 5422 (face font-lock-comment-face fontified t) 5422 5444 (face font-lock-comment-face fontified t) 5444 5450 (fontified t) 5450 5452 (face font-lock-keyword-face fontified t) 5452 5454 (fontified t) 5454 5455 (face font-lock-negation-char-face fontified t) 5455 5472 (fontified t) 5472 5475 (face font-lock-keyword-face fontified t) 5475 5477 (fontified t) 5477 5479 (face font-lock-type-face fontified t) 5479 5480 (face font-lock-type-face c-type c-decl-id-start fontified t) 5480 5481 (fontified t) 5481 5482 (face font-lock-variable-name-face fontified t) 5482 5522 (fontified t) 5522 5525 (face font-lock-constant-face fontified t) 5525 5548 (fontified t) 5548 5554 (c-is-sws t c-in-sws t fontified t) 5554 5555 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 5555 5557 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5557 5566 (c-in-sws t face font-lock-comment-face fontified t) 5566 5572 (c-in-sws t c-is-sws t fontified t) 5572 5573 (c-is-sws t fontified t) 5573 5585 (fontified t) 5585 5591 (c-is-sws t c-in-sws t fontified t) 5591 5592 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 5592 5594 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5594 5606 (c-in-sws t face font-lock-comment-face fontified t) 5606 5612 (c-in-sws t c-is-sws t fontified t) 5612 5613 (c-is-sws t fontified t) 5613 5643 (fontified t) 5643 5649 (c-is-sws t c-in-sws t fontified t) 5649 5650 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 5650 5652 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5652 5664 (c-in-sws t face font-lock-comment-face fontified t) 5664 5670 (c-in-sws t c-is-sws t fontified t) 5670 5671 (c-is-sws t fontified t) 5671 5696 (fontified t) 5696 5715 (fontified t) 5715 5721 (fontified t)) . 1) (undo-tree-id453 . -33) (undo-tree-id454 . -3921) (undo-tree-id455 . 1891) (undo-tree-id456 . -4182) (undo-tree-id457 . 1448) (undo-tree-id458 . -4211) (undo-tree-id459 . -4211) (undo-tree-id460 . -3831) (undo-tree-id461 . -3921) (undo-tree-id462 . -4197) (undo-tree-id463 . -4197) (undo-tree-id464 . -3369) (undo-tree-id465 . -4197) (undo-tree-id466 . 1509) (undo-tree-id467 . -3522) (undo-tree-id468 . -3922) (undo-tree-id469 . -3971) (undo-tree-id470 . -3971) (undo-tree-id471 . -3971) (undo-tree-id472 . -3971) (undo-tree-id473 . -3971) (undo-tree-id474 . -3971) (undo-tree-id475 . -3971) (undo-tree-id476 . -3971) (undo-tree-id477 . -3971) (undo-tree-id478 . -3971) (undo-tree-id479 . -3971) (undo-tree-id480 . -3971) (undo-tree-id481 . -3971) (undo-tree-id482 . -3971) (undo-tree-id483 . -3971) (undo-tree-id484 . -3971) (undo-tree-id485 . -3971) (undo-tree-id486 . -3971) (undo-tree-id487 . -3522) 3972) nil (26692 28345 207210 868000) 0 nil] [nil nil ((1 . 5746) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {

  std::cout << left_margin << corner_tl + \"─────────────────────────────────\" + corner_tr;
  std::cout << left_margin << \"OPTIONS\" << '\\n';
  std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';

  std::cout << left_margin << corner_bl + \"─────────────────────────────────\" + corner_br;
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (face font-lock-preprocessor-face) 1 8 (face font-lock-preprocessor-face) 9 33 (face font-lock-string-face) 34 35 (face font-lock-preprocessor-face) 35 42 (face font-lock-preprocessor-face) 43 64 (face font-lock-string-face) 65 66 (face font-lock-preprocessor-face) 66 73 (face font-lock-preprocessor-face) 74 96 (face font-lock-string-face) 97 98 (face font-lock-preprocessor-face) 98 105 (face font-lock-preprocessor-face) 106 135 (face font-lock-string-face) 136 137 (face font-lock-preprocessor-face) 137 144 (face font-lock-preprocessor-face) 145 146 (face font-lock-string-face) 146 149 (face font-lock-string-face) 149 150 (face font-lock-string-face) 151 152 (face font-lock-preprocessor-face) 152 159 (face font-lock-preprocessor-face) 160 161 (face font-lock-string-face) 161 169 (face font-lock-string-face) 169 170 (face font-lock-string-face) 172 173 (face font-lock-keyword-face) 173 177 (face font-lock-keyword-face) 178 181 (face font-lock-constant-face) 183 188 (face font-lock-type-face) 188 189 (face font-lock-type-face) 190 198 (face font-lock-variable-name-face) 201 204 (face font-lock-string-face) 206 211 (face font-lock-keyword-face) 212 215 (face font-lock-constant-face) 217 222 (face font-lock-type-face) 222 223 (face font-lock-type-face) 224 234 (face font-lock-variable-name-face) 237 240 (face font-lock-string-face) 243 244 (face font-lock-comment-delimiter-face) 244 245 (face font-lock-comment-delimiter-face) 245 386 (face font-lock-comment-face) 386 420 (face font-lock-comment-delimiter-face) 421 422 (face font-lock-keyword-face) 422 426 (face font-lock-keyword-face) 427 430 (face font-lock-constant-face) 432 437 (face font-lock-type-face) 437 438 (face font-lock-type-face) 439 448 (face font-lock-variable-name-face) 451 454 (face font-lock-string-face) 456 457 (face font-lock-comment-delimiter-face) 457 459 (face font-lock-comment-delimiter-face) 459 468 (face font-lock-comment-face) 468 469 (face font-lock-keyword-face) 469 473 (face font-lock-keyword-face) 474 477 (face font-lock-constant-face) 479 484 (face font-lock-type-face) 484 485 (face font-lock-type-face) 486 495 (face font-lock-variable-name-face) 498 501 (face font-lock-string-face) 503 508 (face font-lock-keyword-face) 509 512 (face font-lock-constant-face) 514 519 (face font-lock-type-face) 519 520 (face font-lock-type-face) 521 530 (face font-lock-variable-name-face) 533 536 (face font-lock-string-face) 538 543 (face font-lock-keyword-face) 544 547 (face font-lock-constant-face) 549 554 (face font-lock-type-face) 554 555 (face font-lock-type-face) 556 565 (face font-lock-variable-name-face) 568 571 (face font-lock-string-face) 573 578 (face font-lock-keyword-face) 579 582 (face font-lock-constant-face) 584 589 (face font-lock-type-face) 589 590 (face font-lock-type-face) 591 600 (face font-lock-variable-name-face) 603 606 (face font-lock-string-face) 608 613 (face font-lock-keyword-face) 614 617 (face font-lock-constant-face) 619 624 (face font-lock-type-face) 624 625 (face font-lock-type-face) 626 635 (face font-lock-variable-name-face) 638 641 (face font-lock-string-face) 643 648 (face font-lock-keyword-face) 649 652 (face font-lock-constant-face) 654 659 (face font-lock-type-face) 659 660 (face font-lock-type-face) 661 670 (face font-lock-variable-name-face) 673 676 (face font-lock-string-face) 678 683 (face font-lock-keyword-face) 684 687 (face font-lock-constant-face) 689 694 (face font-lock-type-face) 694 695 (face font-lock-type-face) 696 708 (face font-lock-variable-name-face) 711 714 (face font-lock-string-face) 716 721 (face font-lock-keyword-face) 722 725 (face font-lock-constant-face) 727 732 (face font-lock-type-face) 732 733 (face font-lock-type-face) 734 748 (face font-lock-variable-name-face) 751 754 (face font-lock-string-face) 756 761 (face font-lock-keyword-face) 762 765 (face font-lock-constant-face) 767 772 (face font-lock-type-face) 772 773 (face font-lock-type-face) 774 788 (face font-lock-variable-name-face) 791 794 (face font-lock-string-face) 797 799 (face font-lock-type-face) 799 800 (face font-lock-type-face) 801 826 (face font-lock-variable-name-face) 832 834 (face font-lock-type-face) 834 835 (face font-lock-type-face) 836 863 (face font-lock-variable-name-face) 870 873 (face font-lock-constant-face) 875 881 (face font-lock-type-face) 881 882 (category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face) 887 893 (face font-lock-type-face) 893 894 (category c->-as-paren-syntax) 895 899 (face font-lock-variable-name-face) 903 906 (face font-lock-string-face) 908 911 (face font-lock-string-face) 913 916 (face font-lock-string-face) 918 921 (face font-lock-string-face) 923 926 (face font-lock-string-face) 928 931 (face font-lock-string-face) 933 936 (face font-lock-string-face) 938 941 (face font-lock-string-face) 943 946 (face font-lock-string-face) 981 984 (face font-lock-string-face) 986 989 (face font-lock-string-face) 991 994 (face font-lock-string-face) 996 999 (face font-lock-string-face) 1001 1004 (face font-lock-string-face) 1006 1009 (face font-lock-string-face) 1011 1014 (face font-lock-string-face) 1016 1019 (face font-lock-string-face) 1021 1024 (face font-lock-string-face) 1059 1062 (face font-lock-string-face) 1064 1067 (face font-lock-string-face) 1069 1072 (face font-lock-string-face) 1074 1077 (face font-lock-string-face) 1079 1082 (face font-lock-string-face) 1084 1087 (face font-lock-string-face) 1089 1092 (face font-lock-string-face) 1094 1097 (face font-lock-string-face) 1100 1103 (face font-lock-constant-face) 1105 1110 (face font-lock-type-face) 1110 1111 (face font-lock-type-face) 1112 1122 (face font-lock-variable-name-face) 1125 1153 (face font-lock-string-face) 1156 1159 (face font-lock-type-face) 1159 1160 (face font-lock-type-face) 1161 1171 (face font-lock-function-name-face) 1172 1175 (face font-lock-constant-face) 1177 1183 (face font-lock-type-face) 1184 1190 (face font-lock-variable-name-face) 1192 1195 (face font-lock-constant-face) 1197 1203 (face font-lock-type-face) 1204 1209 (face font-lock-variable-name-face) 1215 1218 (face font-lock-keyword-face) 1220 1222 (face font-lock-type-face) 1222 1223 (face font-lock-type-face) 1224 1225 (face font-lock-variable-name-face) 1250 1252 (face font-lock-keyword-face) 1254 1257 (face font-lock-constant-face) 1319 1322 (face font-lock-constant-face) 1371 1374 (face font-lock-type-face) 1374 1375 (face font-lock-type-face) 1376 1390 (face font-lock-function-name-face) 1397 1400 (face font-lock-constant-face) 1444 1447 (face font-lock-string-face) 1475 1498 (face font-lock-string-face) 1514 1517 (face font-lock-constant-face) 1527 1531 (face font-lock-string-face) 1569 1572 (face font-lock-string-face) 1587 1590 (face font-lock-string-face) 1594 1597 (face font-lock-keyword-face) 1599 1601 (face font-lock-type-face) 1601 1602 (face font-lock-type-face) 1603 1604 (face font-lock-variable-name-face) 1629 1631 (face font-lock-keyword-face) 1650 1653 (face font-lock-constant-face) 1675 1679 (face font-lock-string-face) 1687 1690 (face font-lock-constant-face) 1734 1737 (face font-lock-string-face) 1752 1756 (face font-lock-string-face) 1765 1769 (face font-lock-keyword-face) 1770 1772 (face font-lock-keyword-face) 1791 1794 (face font-lock-constant-face) 1804 1807 (face font-lock-string-face) 1822 1826 (face font-lock-string-face) 1834 1837 (face font-lock-constant-face) 1881 1884 (face font-lock-string-face) 1899 1905 (face font-lock-string-face) 1917 1920 (face font-lock-constant-face) 1941 1944 (face font-lock-string-face) 1952 1955 (face font-lock-constant-face) 1965 1970 (face font-lock-string-face) 1985 1989 (face font-lock-string-face) 1993 1996 (face font-lock-constant-face) 2040 2043 (face font-lock-string-face) 2071 2094 (face font-lock-string-face) 2110 2114 (face font-lock-string-face) 2119 2122 (face font-lock-type-face) 2122 2123 (face font-lock-type-face) 2124 2132 (face font-lock-function-name-face) 2133 2136 (face font-lock-type-face) 2137 2138 (face font-lock-variable-name-face) 2144 2147 (face font-lock-keyword-face) 2149 2151 (face font-lock-type-face) 2151 2152 (face font-lock-type-face) 2153 2154 (face font-lock-variable-name-face) 2188 2194 (face font-lock-keyword-face) 2222 2226 (face font-lock-keyword-face) 2236 2239 (face font-lock-constant-face) 2267 2272 (face font-lock-string-face) 2300 2305 (face font-lock-keyword-face) 2311 2315 (face font-lock-keyword-face) 2325 2328 (face font-lock-constant-face) 2356 2361 (face font-lock-string-face) 2390 2395 (face font-lock-keyword-face) 2401 2405 (face font-lock-keyword-face) 2415 2418 (face font-lock-constant-face) 2446 2451 (face font-lock-string-face) 2478 2483 (face font-lock-keyword-face) 2489 2496 (face font-lock-keyword-face) 2504 2507 (face font-lock-constant-face) 2529 2534 (face font-lock-string-face) 2560 2563 (face font-lock-constant-face) 2573 2577 (face font-lock-string-face) 2581 2584 (face font-lock-constant-face) 2610 2613 (face font-lock-type-face) 2613 2614 (face font-lock-type-face) 2615 2626 (face font-lock-function-name-face) 2627 2630 (face font-lock-constant-face) 2632 2638 (face font-lock-type-face) 2638 2639 (category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face) 2644 2650 (face font-lock-type-face) 2650 2651 (category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face) 2656 2662 (face font-lock-type-face) 2662 2663 (category c->-as-paren-syntax) 2663 2664 (category c->-as-paren-syntax) 2665 2678 (face font-lock-variable-name-face) 2680 2683 (face font-lock-type-face) 2684 2685 (face font-lock-variable-name-face) 2692 2695 (face font-lock-keyword-face) 2697 2699 (face font-lock-type-face) 2699 2700 (face font-lock-type-face) 2701 2702 (face font-lock-variable-name-face) 2736 2739 (face font-lock-constant-face) 2741 2746 (face font-lock-type-face) 2746 2747 (face font-lock-type-face) 2748 2752 (face font-lock-variable-name-face) 2780 2786 (face font-lock-keyword-face) 2814 2818 (face font-lock-keyword-face) 2828 2831 (face font-lock-constant-face) 2847 2851 (face font-lock-string-face) 2870 2873 (face font-lock-string-face) 2884 2888 (face font-lock-string-face) 2935 2940 (face font-lock-keyword-face) 2946 2950 (face font-lock-keyword-face) 2960 2963 (face font-lock-constant-face) 2979 2983 (face font-lock-string-face) 3002 3005 (face font-lock-string-face) 3016 3020 (face font-lock-string-face) 3069 3074 (face font-lock-keyword-face) 3080 3084 (face font-lock-keyword-face) 3094 3097 (face font-lock-constant-face) 3113 3117 (face font-lock-string-face) 3136 3139 (face font-lock-string-face) 3150 3154 (face font-lock-string-face) 3199 3204 (face font-lock-keyword-face) 3210 3217 (face font-lock-keyword-face) 3225 3228 (face font-lock-constant-face) 3238 3242 (face font-lock-string-face) 3261 3264 (face font-lock-string-face) 3275 3279 (face font-lock-string-face) 3293 3296 (face font-lock-constant-face) 3306 3310 (face font-lock-string-face) 3314 3317 (face font-lock-constant-face) 3343 3346 (face font-lock-type-face) 3346 3347 (c-type c-decl-id-start face font-lock-type-face) 3348 3359 (face font-lock-function-name-face) 3360 3363 (face font-lock-type-face) 3364 3365 (face font-lock-variable-name-face) 3372 3375 (face font-lock-keyword-face) 3377 3379 (face font-lock-type-face) 3379 3380 (face font-lock-type-face) 3381 3382 (face font-lock-variable-name-face) 3416 3422 (face font-lock-keyword-face) 3450 3454 (face font-lock-keyword-face) 3464 3467 (face font-lock-constant-face) 3495 3500 (face font-lock-string-face) 3528 3533 (face font-lock-keyword-face) 3539 3543 (face font-lock-keyword-face) 3553 3556 (face font-lock-constant-face) 3584 3589 (face font-lock-string-face) 3618 3623 (face font-lock-keyword-face) 3629 3633 (face font-lock-keyword-face) 3643 3646 (face font-lock-constant-face) 3674 3679 (face font-lock-string-face) 3706 3711 (face font-lock-keyword-face) 3717 3724 (face font-lock-keyword-face) 3732 3735 (face font-lock-constant-face) 3757 3762 (face font-lock-string-face) 3788 3791 (face font-lock-constant-face) 3801 3805 (face font-lock-string-face) 3809 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3829 (fontified t) 3829 3830 (fontified t) 3830 3831 (fontified t) 3831 3832 (fontified t) 3832 3833 (fontified t rear-nonsticky t) 3833 3836 (face font-lock-constant-face fontified t) 3836 3846 (fontified t) 3846 3857 (fontified t) 3857 3858 (fontified t) 3858 3859 (fontified t) 3859 3860 (fontified t) 3860 3861 (fontified t) 3861 3868 (fontified t) 3868 3869 (fontified t) 3869 3873 (fontified t) 3873 3908 (face font-lock-string-face fontified t) 3908 3918 (fontified t) 3918 3919 (fontified t) 3919 3921 (fontified t) 3921 3922 (fontified t) 3922 3924 (fontified t) 3924 3927 (face font-lock-constant-face fontified t) 3927 3952 (fontified t) 3952 3961 (face font-lock-string-face fontified t) 3961 3965 (fontified t) 3965 3969 (face font-lock-string-face fontified t) 3969 3973 (fontified t) 3973 3976 (face font-lock-constant-face fontified t) 3976 4001 (fontified t) 4001 4031 (face font-lock-string-face fontified t) 4031 4035 (fontified t) 4035 4039 (face font-lock-string-face fontified t) 4039 4043 (fontified t) 4043 4046 (face font-lock-constant-face fontified t) 4046 4071 (fontified t) 4071 4101 (face font-lock-string-face fontified t) 4101 4105 (fontified t) 4105 4109 (face font-lock-string-face fontified t) 4109 4113 (fontified t) 4113 4116 (face font-lock-constant-face fontified t) 4116 4141 (fontified t) 4141 4171 (face font-lock-string-face fontified t) 4171 4175 (fontified t) 4175 4179 (face font-lock-string-face fontified t) 4179 4182 (fontified t) 4182 4184 (fontified t) 4184 4187 (face font-lock-constant-face fontified t) 4187 4197 (fontified t) 4197 4208 (fontified t) 4208 4209 (fontified t) 4209 4210 (fontified t) 4210 4211 (fontified t) 4211 4212 (fontified t) 4212 4224 (fontified t) 4224 4259 (face font-lock-string-face fontified t) 4259 4272 (fontified t) 4272 4276 (fontified t) 4276 4279 (face font-lock-type-face fontified t) 4279 4280 (face font-lock-type-face c-type c-decl-id-start fontified t) 4280 4281 (fontified t) 4281 4292 (face font-lock-function-name-face fontified t) 4292 4293 (c-type c-decl-arg-start fontified t) 4293 4296 (face font-lock-constant-face fontified t) 4296 4298 (fontified t) 4298 4304 (face font-lock-type-face fontified t) 4304 4305 (fontified t category c-<-as-paren-syntax) 4305 4308 (face font-lock-constant-face fontified t) 4308 4310 (fontified t) 4310 4316 (face font-lock-type-face fontified t) 4316 4317 (fontified t category c-<-as-paren-syntax) 4317 4320 (face font-lock-constant-face fontified t) 4320 4322 (fontified t) 4322 4328 (fontified t) 4328 4329 (fontified t category c->-as-paren-syntax) 4329 4330 (fontified t category c->-as-paren-syntax) 4330 4331 (fontified t) 4331 4344 (face font-lock-variable-name-face fontified t) 4344 4345 (c-type c-decl-arg-start fontified t) 4345 4363 (fontified t) 4363 4366 (face font-lock-type-face fontified t) 4366 4367 (fontified t) 4367 4382 (face font-lock-variable-name-face fontified t) 4382 4405 (fontified t) 4405 4407 (fontified t c-is-sws t c-in-sws t) 4407 4408 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4408 4410 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4410 4421 (face font-lock-comment-face fontified t c-in-sws t) 4421 4423 (fontified t c-in-sws t c-is-sws t) 4423 4424 (face font-lock-constant-face fontified t c-is-sws t) 4424 4426 (face font-lock-constant-face fontified t) 4426 4451 (fontified t) 4451 4453 (face font-lock-keyword-face fontified t) 4453 4483 (fontified t) 4483 4486 (face font-lock-constant-face fontified t) 4486 4531 (fontified t) 4531 4550 (face font-lock-string-face fontified t) 4550 4554 (fontified t) 4554 4558 (face font-lock-string-face fontified t) 4558 4560 (fontified t) 4560 4564 (fontified t) 4564 4568 (face font-lock-keyword-face fontified t) 4568 4569 (fontified t) 4569 4571 (face font-lock-keyword-face fontified t) 4571 4601 (fontified t) 4601 4604 (face font-lock-constant-face fontified t) 4604 4663 (fontified t) 4663 4682 (face font-lock-string-face fontified t) 4682 4704 (fontified t) 4704 4708 (face font-lock-string-face fontified t) 4708 4714 (fontified t) 4714 4718 (face font-lock-keyword-face fontified t) 4718 4719 (fontified t) 4719 4721 (face font-lock-keyword-face fontified t) 4721 4747 (fontified t) 4747 4750 (face font-lock-constant-face fontified t) 4750 4809 (fontified t) 4809 4838 (face font-lock-string-face fontified t) 4838 4844 (fontified t) 4844 4846 (face font-lock-keyword-face fontified t) 4846 4869 (fontified t) 4869 4876 (fontified t) 4876 4907 (fontified t) 4907 4912 (face font-lock-constant-face fontified t) 4912 4957 (fontified t) 4957 4961 (face font-lock-keyword-face fontified t) 4961 4976 (fontified t) 4976 4998 (fontified t) 4998 5009 (fontified t) 5009 5013 (face font-lock-keyword-face fontified t) 5013 5014 (fontified t) 5014 5016 (face font-lock-keyword-face fontified t) 5016 5044 (fontified t) 5044 5047 (face font-lock-constant-face fontified t) 5047 5092 (fontified t) 5092 5116 (face font-lock-string-face fontified t) 5116 5134 (fontified t) 5134 5138 (face font-lock-string-face fontified t) 5138 5144 (fontified t) 5144 5146 (face font-lock-keyword-face fontified t) 5146 5211 (fontified t) 5211 5216 (face font-lock-constant-face fontified t) 5216 5263 (fontified t) 5263 5267 (face font-lock-keyword-face fontified t) 5267 5309 (fontified t) 5309 5313 (fontified t) 5317 5321 (face font-lock-keyword-face) 5322 5324 (face font-lock-keyword-face) 5361 5365 (face font-lock-keyword-face) 5372 5375 (face font-lock-constant-face) 5385 5389 (face font-lock-string-face) 5391 5394 (face font-lock-comment-delimiter-face) 5394 5421 (face font-lock-comment-face) 5421 5422 (face font-lock-comment-face) 5422 5444 (face font-lock-comment-face) 5450 5452 (face font-lock-keyword-face) 5454 5455 (face font-lock-negation-char-face) 5472 5475 (face font-lock-keyword-face) 5477 5479 (face font-lock-type-face) 5479 5480 (face font-lock-type-face) 5481 5482 (face font-lock-variable-name-face) 5522 5525 (face font-lock-constant-face) 5554 5555 (face font-lock-comment-delimiter-face) 5555 5557 (face font-lock-comment-delimiter-face) 5557 5566 (face font-lock-comment-face) 5591 5592 (face font-lock-comment-delimiter-face) 5592 5594 (face font-lock-comment-delimiter-face) 5594 5606 (face font-lock-comment-face) 5649 5650 (face font-lock-comment-delimiter-face) 5650 5652 (face font-lock-comment-delimiter-face) 5652 5664 (face font-lock-comment-face)) . 1) (undo-tree-id393 . -33) (undo-tree-id394 . -3921) (undo-tree-id395 . 1891) (undo-tree-id396 . -4182) (undo-tree-id397 . 1448) (undo-tree-id398 . -4211) (undo-tree-id399 . -4211) (undo-tree-id400 . -3831) (undo-tree-id401 . -3921) (undo-tree-id402 . -4197) (undo-tree-id403 . -4197) (undo-tree-id404 . -3369) (undo-tree-id405 . -4197) (undo-tree-id406 . 1509) (undo-tree-id408 . -3922) (undo-tree-id410 . -3922) (undo-tree-id412 . -3922) (undo-tree-id414 . -3922) (undo-tree-id416 . -3922) (undo-tree-id418 . -3922) (undo-tree-id420 . -3922) (undo-tree-id422 . -3922) (undo-tree-id424 . -3922) (undo-tree-id426 . -3922) (undo-tree-id428 . -3809) (undo-tree-id429 . -3922) (undo-tree-id430 . -3922)) ((1 . 5722) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {

  std::cout << left_margin
            << corner_tl + \"─────────────────────────────────\" + corner_tr;
  std::cout << left_margin << \"OPTIONS\" << '\\n';
  std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';

  std::cout << left_margin
            << corner_bl + \"─────────────────────────────────\" + corner_br;
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 881 882 (category c-<-as-paren-syntax) 893 894 (category c->-as-paren-syntax) 2638 2639 (category c-<-as-paren-syntax) 2650 2651 (category c-<-as-paren-syntax) 2662 2663 (category c->-as-paren-syntax) 2663 2664 (category c->-as-paren-syntax) 3346 3347 (c-type c-decl-id-start) 3348 3359 (face font-lock-function-name-face) 3360 3363 (face font-lock-type-face) 3809 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3833 (fontified t) 3833 3836 (face font-lock-constant-face fontified t) 3836 3885 (fontified t) 3885 3920 (face font-lock-string-face fontified t) 3920 3936 (fontified t) 3936 3939 (face font-lock-constant-face fontified t) 3939 3964 (fontified t) 3964 3973 (face font-lock-string-face fontified t) 3973 3977 (fontified t) 3977 3981 (face font-lock-string-face fontified t) 3981 3985 (fontified t) 3985 3988 (face font-lock-constant-face fontified t) 3988 4013 (fontified t) 4013 4043 (face font-lock-string-face fontified t) 4043 4047 (fontified t) 4047 4051 (face font-lock-string-face fontified t) 4051 4055 (fontified t) 4055 4058 (face font-lock-constant-face fontified t) 4058 4083 (fontified t) 4083 4113 (face font-lock-string-face fontified t) 4113 4117 (fontified t) 4117 4121 (face font-lock-string-face fontified t) 4121 4125 (fontified t) 4125 4128 (face font-lock-constant-face fontified t) 4128 4153 (fontified t) 4153 4183 (face font-lock-string-face fontified t) 4183 4187 (fontified t) 4187 4191 (face font-lock-string-face fontified t) 4191 4196 (fontified t) 4196 4199 (face font-lock-constant-face fontified t) 4199 4248 (fontified t) 4248 4283 (face font-lock-string-face fontified t) 4283 4300 (fontified t) 4300 4303 (face font-lock-type-face fontified t) 4303 4304 (face font-lock-type-face c-type c-decl-id-start fontified t) 4304 4305 (fontified t) 4305 4316 (face font-lock-function-name-face fontified t) 4316 4317 (c-type c-decl-arg-start fontified t) 4317 4320 (face font-lock-constant-face fontified t) 4320 4322 (fontified t) 4322 4328 (face font-lock-type-face fontified t) 4328 4329 (fontified t category c-<-as-paren-syntax) 4329 4332 (face font-lock-constant-face fontified t) 4332 4334 (fontified t) 4334 4340 (face font-lock-type-face fontified t) 4340 4341 (fontified t category c-<-as-paren-syntax) 4341 4344 (face font-lock-constant-face fontified t) 4344 4352 (fontified t) 4352 4353 (fontified t category c->-as-paren-syntax) 4353 4354 (fontified t category c->-as-paren-syntax) 4354 4355 (fontified t) 4355 4368 (face font-lock-variable-name-face fontified t) 4368 4369 (c-type c-decl-arg-start fontified t) 4369 4387 (fontified t) 4387 4390 (face font-lock-type-face fontified t) 4390 4391 (fontified t) 4391 4406 (face font-lock-variable-name-face fontified t) 4406 4429 (fontified t) 4429 4431 (fontified t c-is-sws t c-in-sws t) 4431 4432 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4432 4434 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4434 4445 (face font-lock-comment-face fontified t c-in-sws t) 4445 4447 (fontified t c-in-sws t c-is-sws t) 4447 4448 (face font-lock-constant-face fontified t c-is-sws t) 4448 4450 (face font-lock-constant-face fontified t) 4450 4475 (fontified t) 4475 4477 (face font-lock-keyword-face fontified t) 4477 4507 (fontified t) 4507 4510 (face font-lock-constant-face fontified t) 4510 4555 (fontified t) 4555 4574 (face font-lock-string-face fontified t) 4574 4578 (fontified t) 4578 4582 (face font-lock-string-face fontified t) 4582 4588 (fontified t) 4588 4592 (face font-lock-keyword-face fontified t) 4592 4593 (fontified t) 4593 4595 (face font-lock-keyword-face fontified t) 4595 4625 (fontified t) 4625 4628 (face font-lock-constant-face fontified t) 4628 4687 (fontified t) 4687 4706 (face font-lock-string-face fontified t) 4706 4728 (fontified t) 4728 4732 (face font-lock-string-face fontified t) 4732 4738 (fontified t) 4738 4742 (face font-lock-keyword-face fontified t) 4742 4743 (fontified t) 4743 4745 (face font-lock-keyword-face fontified t) 4745 4771 (fontified t) 4771 4774 (face font-lock-constant-face fontified t) 4774 4833 (fontified t) 4833 4862 (face font-lock-string-face fontified t) 4862 4868 (fontified t) 4868 4870 (face font-lock-keyword-face fontified t) 4870 4931 (fontified t) 4931 4936 (face font-lock-constant-face fontified t) 4936 4981 (fontified t) 4981 4985 (face font-lock-keyword-face fontified t) 4985 5033 (fontified t) 5033 5037 (face font-lock-keyword-face fontified t) 5037 5038 (fontified t) 5038 5040 (face font-lock-keyword-face fontified t) 5040 5068 (fontified t) 5068 5071 (face font-lock-constant-face fontified t) 5071 5116 (fontified t) 5116 5140 (face font-lock-string-face fontified t) 5140 5158 (fontified t) 5158 5162 (face font-lock-string-face fontified t) 5162 5168 (fontified t) 5168 5170 (face font-lock-keyword-face fontified t) 5170 5235 (fontified t) 5235 5240 (face font-lock-constant-face fontified t) 5240 5287 (fontified t) 5287 5291 (face font-lock-keyword-face fontified t) 5291 5309 (fontified t) 5309 5330 (fontified t)) . 1) (undo-tree-id432 . -33) (undo-tree-id433 . -3921) (undo-tree-id434 . -3809) (undo-tree-id435 . -3858) (undo-tree-id436 . -3858) (undo-tree-id437 . -3858) (undo-tree-id438 . -3858) (undo-tree-id439 . -3858) (undo-tree-id440 . -3858) (undo-tree-id441 . -3858) (undo-tree-id442 . -3858) (undo-tree-id443 . -3858) (undo-tree-id444 . -3858) (undo-tree-id445 . -3858) (undo-tree-id446 . -3858) (undo-tree-id447 . -3858) (undo-tree-id448 . -3858) (undo-tree-id449 . -3858) (undo-tree-id450 . -3858) (undo-tree-id451 . -3858) (undo-tree-id452 . -3858) (t 26692 28324 555980 487000)) (26692 28324 552159 714000) 0 nil] [nil nil ((1 . 5746) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {

  std::cout << left_margin << corner_tl + \"─────────────────────────────────\" + corner_tr;
  std::cout << left_margin << \"OPTIONS\" << '\\n';
  std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';

  std::cout << left_margin << corner_bl + \"─────────────────────────────────\" + corner_br;
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 33 (c-in-sws t face font-lock-string-face fontified t) 33 34 (c-in-sws t fontified t) 34 35 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 35 42 (c-in-sws t face font-lock-preprocessor-face fontified t) 42 43 (c-in-sws t fontified t) 43 64 (c-in-sws t face font-lock-string-face fontified t) 64 65 (c-in-sws t fontified t) 65 66 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 66 73 (c-in-sws t face font-lock-preprocessor-face fontified t) 73 74 (c-in-sws t fontified t) 74 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 135 (c-in-sws t face font-lock-string-face fontified t) 135 136 (c-in-sws t fontified t) 136 137 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 137 144 (c-in-sws t face font-lock-preprocessor-face fontified t) 144 145 (c-in-sws t fontified t) 145 146 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 146 149 (c-in-sws t face font-lock-string-face fontified t) 149 150 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 150 151 (c-in-sws t fontified t) 151 152 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 152 159 (c-in-sws t face font-lock-preprocessor-face fontified t) 159 160 (c-in-sws t fontified t) 160 161 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 161 169 (c-in-sws t face font-lock-string-face fontified t) 169 170 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 170 171 (c-in-sws t fontified t) 171 172 (c-is-sws t c-in-sws t fontified t) 172 173 (c-is-sws t face font-lock-keyword-face fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 181 (face font-lock-constant-face fontified t) 181 183 (fontified t) 183 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 190 (fontified t) 190 198 (face font-lock-variable-name-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-string-face fontified t) 204 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 215 (face font-lock-constant-face fontified t) 215 217 (fontified t) 217 222 (face font-lock-type-face fontified t) 222 223 (face font-lock-type-face c-type c-decl-id-start fontified t) 223 224 (fontified t) 224 234 (face font-lock-variable-name-face fontified t) 234 237 (fontified t) 237 240 (face font-lock-string-face fontified t) 240 243 (fontified t) 243 244 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 244 245 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 245 386 (c-in-sws t face font-lock-comment-face fontified t) 386 420 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 420 421 (c-in-sws t fontified t) 421 422 (c-is-sws t face font-lock-keyword-face fontified t) 422 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 430 (face font-lock-constant-face fontified t) 430 432 (fontified t) 432 437 (face font-lock-type-face fontified t) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified t) 438 439 (fontified t) 439 448 (face font-lock-variable-name-face fontified t) 448 451 (fontified t) 451 454 (face font-lock-string-face fontified t) 454 455 (fontified t) 455 456 (c-is-sws t c-in-sws t fontified t) 456 457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 457 459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 459 468 (c-in-sws t face font-lock-comment-face fontified t) 468 469 (c-is-sws t face font-lock-keyword-face fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (fontified t) 474 477 (face font-lock-constant-face fontified t) 477 479 (fontified t) 479 484 (face font-lock-type-face fontified t) 484 485 (face font-lock-type-face c-type c-decl-id-start fontified t) 485 486 (fontified t) 486 495 (face font-lock-variable-name-face fontified t) 495 498 (fontified t) 498 501 (face font-lock-string-face fontified t) 501 503 (fontified t) 503 508 (face font-lock-keyword-face fontified t) 508 509 (fontified t) 509 512 (face font-lock-constant-face fontified t) 512 514 (fontified t) 514 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face c-type c-decl-id-start fontified t) 520 521 (fontified t) 521 530 (face font-lock-variable-name-face fontified t) 530 533 (fontified t) 533 536 (face font-lock-string-face fontified t) 536 538 (fontified t) 538 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 554 (face font-lock-type-face fontified t) 554 555 (face font-lock-type-face c-type c-decl-id-start fontified t) 555 556 (fontified t) 556 565 (face font-lock-variable-name-face fontified t) 565 568 (fontified t) 568 571 (face font-lock-string-face fontified t) 571 573 (fontified t) 573 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-constant-face fontified t) 582 584 (fontified t) 584 589 (face font-lock-type-face fontified t) 589 590 (face font-lock-type-face c-type c-decl-id-start fontified t) 590 591 (fontified t) 591 600 (face font-lock-variable-name-face fontified t) 600 603 (fontified t) 603 606 (face font-lock-string-face fontified t) 606 608 (fontified t) 608 613 (face font-lock-keyword-face fontified t) 613 614 (fontified t) 614 617 (face font-lock-constant-face fontified t) 617 619 (fontified t) 619 624 (face font-lock-type-face fontified t) 624 625 (face font-lock-type-face c-type c-decl-id-start fontified t) 625 626 (fontified t) 626 635 (face font-lock-variable-name-face fontified t) 635 638 (fontified t) 638 641 (face font-lock-string-face fontified t) 641 643 (fontified t) 643 648 (face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (face font-lock-constant-face fontified t) 652 654 (fontified t) 654 659 (face font-lock-type-face fontified t) 659 660 (face font-lock-type-face c-type c-decl-id-start fontified t) 660 661 (fontified t) 661 670 (face font-lock-variable-name-face fontified t) 670 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 678 (fontified t) 678 683 (face font-lock-keyword-face fontified t) 683 684 (fontified t) 684 687 (face font-lock-constant-face fontified t) 687 689 (fontified t) 689 694 (face font-lock-type-face fontified t) 694 695 (face font-lock-type-face c-type c-decl-id-start fontified t) 695 696 (fontified t) 696 708 (face font-lock-variable-name-face fontified t) 708 711 (fontified t) 711 714 (face font-lock-string-face fontified t) 714 716 (fontified t) 716 721 (face font-lock-keyword-face fontified t) 721 722 (fontified t) 722 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 732 (face font-lock-type-face fontified t) 732 733 (face font-lock-type-face c-type c-decl-id-start fontified t) 733 734 (fontified t) 734 748 (face font-lock-variable-name-face fontified t) 748 751 (fontified t) 751 754 (face font-lock-string-face fontified t) 754 756 (fontified t) 756 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 765 (face font-lock-constant-face fontified t) 765 767 (fontified t) 767 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 788 (face font-lock-variable-name-face fontified t) 788 791 (fontified t) 791 794 (face font-lock-string-face fontified t) 794 797 (fontified t) 797 799 (face font-lock-type-face fontified t) 799 800 (face font-lock-type-face c-type c-decl-id-start fontified t) 800 801 (fontified t) 801 826 (face font-lock-variable-name-face fontified t) 826 832 (fontified t) 832 834 (face font-lock-type-face fontified t) 834 835 (face font-lock-type-face c-type c-decl-id-start fontified t) 835 836 (fontified t) 836 863 (face font-lock-variable-name-face fontified t) 863 870 (fontified t) 870 873 (face font-lock-constant-face fontified t) 873 875 (fontified t) 875 881 (face font-lock-type-face fontified t) 881 882 (fontified t category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face fontified t) 885 887 (fontified t) 887 893 (face font-lock-type-face fontified t) 893 894 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 894 895 (fontified t) 895 899 (face font-lock-variable-name-face fontified t) 899 903 (fontified t) 903 906 (face font-lock-string-face fontified t) 906 908 (fontified t) 908 911 (face font-lock-string-face fontified t) 911 913 (fontified t) 913 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 921 (face font-lock-string-face fontified t) 921 923 (fontified t) 923 926 (face font-lock-string-face fontified t) 926 928 (fontified t) 928 931 (face font-lock-string-face fontified t) 931 933 (fontified t) 933 936 (face font-lock-string-face fontified t) 936 938 (fontified t) 938 941 (face font-lock-string-face fontified t) 941 943 (fontified t) 943 946 (face font-lock-string-face fontified t) 946 981 (fontified t) 981 984 (face font-lock-string-face fontified t) 984 986 (fontified t) 986 989 (face font-lock-string-face fontified t) 989 991 (fontified t) 991 994 (face font-lock-string-face fontified t) 994 996 (fontified t) 996 999 (face font-lock-string-face fontified t) 999 1001 (fontified t) 1001 1004 (face font-lock-string-face fontified t) 1004 1006 (fontified t) 1006 1009 (face font-lock-string-face fontified t) 1009 1011 (fontified t) 1011 1014 (face font-lock-string-face fontified t) 1014 1016 (fontified t) 1016 1019 (face font-lock-string-face fontified t) 1019 1021 (fontified t) 1021 1024 (face font-lock-string-face fontified t) 1024 1059 (fontified t) 1059 1062 (face font-lock-string-face fontified t) 1062 1064 (fontified t) 1064 1067 (face font-lock-string-face fontified t) 1067 1069 (fontified t) 1069 1072 (face font-lock-string-face fontified t) 1072 1074 (fontified t) 1074 1077 (face font-lock-string-face fontified t) 1077 1079 (fontified t) 1079 1082 (face font-lock-string-face fontified t) 1082 1084 (fontified t) 1084 1087 (face font-lock-string-face fontified t) 1087 1089 (fontified t) 1089 1092 (face font-lock-string-face fontified t) 1092 1094 (fontified t) 1094 1097 (face font-lock-string-face fontified t) 1097 1100 (fontified t) 1100 1103 (face font-lock-constant-face fontified t) 1103 1105 (fontified t) 1105 1110 (face font-lock-type-face fontified t) 1110 1111 (face font-lock-type-face c-type c-decl-id-start fontified t) 1111 1112 (fontified t) 1112 1122 (face font-lock-variable-name-face fontified t) 1122 1125 (fontified t) 1125 1153 (face font-lock-string-face fontified t) 1153 1156 (fontified t) 1156 1159 (face font-lock-type-face fontified t) 1159 1160 (face font-lock-type-face c-type c-decl-id-start fontified t) 1160 1161 (fontified t) 1161 1171 (face font-lock-function-name-face fontified t) 1171 1172 (c-type c-decl-arg-start fontified t) 1172 1175 (face font-lock-constant-face fontified t) 1175 1177 (fontified t) 1177 1183 (face font-lock-type-face fontified t) 1183 1184 (fontified t) 1184 1190 (face font-lock-variable-name-face fontified t) 1190 1191 (c-type c-decl-arg-start fontified t) 1191 1192 (fontified t) 1192 1195 (face font-lock-constant-face fontified t) 1195 1197 (fontified t) 1197 1203 (face font-lock-type-face fontified t) 1203 1204 (fontified t) 1204 1209 (face font-lock-variable-name-face fontified t) 1209 1215 (fontified t) 1215 1218 (face font-lock-keyword-face fontified t) 1218 1220 (fontified t) 1220 1222 (face font-lock-type-face fontified t) 1222 1223 (face font-lock-type-face c-type c-decl-id-start fontified t) 1223 1224 (fontified t) 1224 1225 (face font-lock-variable-name-face fontified t) 1225 1250 (fontified t) 1250 1252 (face font-lock-keyword-face fontified t) 1252 1254 (fontified t) 1254 1257 (face font-lock-constant-face fontified t) 1257 1319 (fontified t) 1319 1322 (face font-lock-constant-face fontified t) 1322 1371 (fontified t) 1371 1374 (face font-lock-type-face fontified t) 1374 1375 (face font-lock-type-face c-type c-decl-id-start fontified t) 1375 1376 (fontified t) 1376 1390 (face font-lock-function-name-face fontified t) 1390 1397 (fontified t) 1397 1400 (face font-lock-constant-face fontified t) 1400 1444 (fontified t) 1444 1447 (face font-lock-string-face fontified t) 1447 1475 (fontified t) 1475 1498 (face font-lock-string-face fontified t) 1498 1500 (fontified t) 1500 1512 (fontified t) 1512 1514 (fontified t) 1514 1517 (face font-lock-constant-face fontified t) 1517 1527 (fontified t) 1527 1531 (face font-lock-string-face fontified t) 1531 1569 (fontified t) 1569 1572 (face font-lock-string-face fontified t) 1572 1587 (fontified t) 1587 1590 (face font-lock-string-face fontified t) 1590 1594 (fontified t) 1594 1597 (face font-lock-keyword-face fontified t) 1597 1599 (fontified t) 1599 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face c-type c-decl-id-start fontified t) 1602 1603 (fontified t) 1603 1604 (face font-lock-variable-name-face fontified t) 1604 1629 (fontified t) 1629 1631 (face font-lock-keyword-face fontified t) 1631 1650 (fontified t) 1650 1653 (face font-lock-constant-face fontified t) 1653 1675 (fontified t) 1675 1679 (face font-lock-string-face fontified t) 1679 1687 (fontified t) 1687 1690 (face font-lock-constant-face fontified t) 1690 1734 (fontified t) 1734 1737 (face font-lock-string-face fontified t) 1737 1752 (fontified t) 1752 1756 (face font-lock-string-face fontified t) 1756 1765 (fontified t) 1765 1769 (face font-lock-keyword-face fontified t) 1769 1770 (fontified t) 1770 1772 (face font-lock-keyword-face fontified t) 1772 1791 (fontified t) 1791 1794 (face font-lock-constant-face fontified t) 1794 1804 (fontified t) 1804 1807 (face font-lock-string-face fontified t) 1807 1822 (fontified t) 1822 1826 (face font-lock-string-face fontified t) 1826 1834 (fontified t) 1834 1837 (face font-lock-constant-face fontified t) 1837 1881 (fontified t) 1881 1884 (face font-lock-string-face fontified t) 1884 1899 (fontified t) 1899 1905 (face font-lock-string-face fontified t) 1905 1917 (fontified t) 1917 1920 (face font-lock-constant-face fontified t) 1920 1941 (fontified t) 1941 1944 (face font-lock-string-face fontified t) 1944 1952 (fontified t) 1952 1955 (face font-lock-constant-face fontified t) 1955 1965 (fontified t) 1965 1970 (face font-lock-string-face fontified t) 1970 1985 (fontified t) 1985 1989 (face font-lock-string-face fontified t) 1989 1993 (fontified t) 1993 1996 (face font-lock-constant-face fontified t) 1996 2040 (fontified t) 2040 2043 (face font-lock-string-face fontified t) 2043 2071 (fontified t) 2071 2094 (face font-lock-string-face fontified t) 2094 2110 (fontified t) 2110 2114 (face font-lock-string-face fontified t) 2114 2119 (fontified t) 2119 2122 (face font-lock-type-face fontified t) 2122 2123 (face font-lock-type-face c-type c-decl-id-start fontified t) 2123 2124 (fontified t) 2124 2132 (face font-lock-function-name-face fontified t) 2132 2133 (c-type c-decl-arg-start fontified t) 2133 2136 (face font-lock-type-face fontified t) 2136 2137 (fontified t) 2137 2138 (face font-lock-variable-name-face fontified t) 2138 2144 (fontified t) 2144 2147 (face font-lock-keyword-face fontified t) 2147 2149 (fontified t) 2149 2151 (face font-lock-type-face fontified t) 2151 2152 (face font-lock-type-face c-type c-decl-id-start fontified t) 2152 2153 (fontified t) 2153 2154 (face font-lock-variable-name-face fontified t) 2154 2188 (fontified t) 2188 2194 (face font-lock-keyword-face fontified t) 2194 2222 (fontified t) 2222 2226 (face font-lock-keyword-face fontified t) 2226 2228 (fontified t) 2228 2229 (c-type c-decl-end fontified t) 2229 2236 (fontified t) 2236 2239 (face font-lock-constant-face fontified t) 2239 2267 (fontified t) 2267 2272 (face font-lock-string-face fontified t) 2272 2300 (fontified t) 2300 2305 (face font-lock-keyword-face fontified t) 2305 2311 (fontified t) 2311 2315 (face font-lock-keyword-face fontified t) 2315 2317 (fontified t) 2317 2318 (c-type c-decl-end fontified t) 2318 2325 (fontified t) 2325 2328 (face font-lock-constant-face fontified t) 2328 2356 (fontified t) 2356 2361 (face font-lock-string-face fontified t) 2361 2390 (fontified t) 2390 2395 (face font-lock-keyword-face fontified t) 2395 2401 (fontified t) 2401 2405 (face font-lock-keyword-face fontified t) 2405 2407 (fontified t) 2407 2408 (c-type c-decl-end fontified t) 2408 2415 (fontified t) 2415 2418 (face font-lock-constant-face fontified t) 2418 2446 (fontified t) 2446 2451 (face font-lock-string-face fontified t) 2451 2478 (fontified t) 2478 2483 (face font-lock-keyword-face fontified t) 2483 2489 (fontified t) 2489 2496 (face font-lock-keyword-face fontified t) 2496 2497 (c-type c-decl-end fontified t) 2497 2504 (fontified t) 2504 2507 (face font-lock-constant-face fontified t) 2507 2529 (fontified t) 2529 2534 (face font-lock-string-face fontified t) 2534 2560 (fontified t) 2560 2563 (face font-lock-constant-face fontified t) 2563 2573 (fontified t) 2573 2577 (face font-lock-string-face fontified t) 2577 2581 (fontified t) 2581 2584 (face font-lock-constant-face fontified t) 2584 2610 (fontified t) 2610 2613 (face font-lock-type-face fontified t) 2613 2614 (face font-lock-type-face c-type c-decl-id-start fontified t) 2614 2615 (fontified t) 2615 2626 (face font-lock-function-name-face fontified t) 2626 2627 (c-type c-decl-arg-start fontified t) 2627 2630 (face font-lock-constant-face fontified t) 2630 2632 (fontified t) 2632 2638 (face font-lock-type-face fontified t) 2638 2639 (fontified t category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face fontified t) 2642 2644 (fontified t) 2644 2650 (face font-lock-type-face fontified t) 2650 2651 (fontified t category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face fontified t) 2654 2656 (fontified t) 2656 2662 (face font-lock-type-face fontified t) 2662 2663 (fontified t category c->-as-paren-syntax) 2663 2664 (fontified t category c->-as-paren-syntax) 2664 2665 (fontified t) 2665 2678 (face font-lock-variable-name-face fontified t) 2678 2679 (c-type c-decl-arg-start fontified t) 2679 2680 (fontified t) 2680 2683 (face font-lock-type-face fontified t) 2683 2684 (fontified t) 2684 2685 (face font-lock-variable-name-face fontified t) 2685 2692 (fontified t) 2692 2695 (face font-lock-keyword-face fontified t) 2695 2697 (fontified t) 2697 2699 (face font-lock-type-face fontified t) 2699 2700 (face font-lock-type-face c-type c-decl-id-start fontified t) 2700 2701 (fontified t) 2701 2702 (face font-lock-variable-name-face fontified t) 2702 2736 (fontified t) 2736 2739 (face font-lock-constant-face fontified t) 2739 2741 (fontified t) 2741 2746 (face font-lock-type-face fontified t) 2746 2747 (face font-lock-type-face c-type c-decl-id-start fontified t) 2747 2748 (fontified t) 2748 2752 (face font-lock-variable-name-face fontified t) 2752 2780 (fontified t) 2780 2786 (face font-lock-keyword-face fontified t) 2786 2814 (fontified t) 2814 2818 (face font-lock-keyword-face fontified t) 2818 2820 (fontified t) 2820 2821 (c-type c-decl-end fontified t) 2821 2828 (fontified t) 2828 2831 (face font-lock-constant-face fontified t) 2831 2847 (fontified t) 2847 2851 (face font-lock-string-face fontified t) 2851 2870 (fontified t) 2870 2873 (face font-lock-string-face fontified t) 2873 2884 (fontified t) 2884 2888 (face font-lock-string-face fontified t) 2888 2935 (fontified t) 2935 2940 (face font-lock-keyword-face fontified t) 2940 2946 (fontified t) 2946 2950 (face font-lock-keyword-face fontified t) 2950 2952 (fontified t) 2952 2953 (c-type c-decl-end fontified t) 2953 2960 (fontified t) 2960 2963 (face font-lock-constant-face fontified t) 2963 2979 (fontified t) 2979 2983 (face font-lock-string-face fontified t) 2983 3002 (fontified t) 3002 3005 (face font-lock-string-face fontified t) 3005 3012 (fontified t) 3012 3016 (fontified t) 3016 3020 (face font-lock-string-face fontified t) 3020 3031 (fontified t) 3031 3069 (fontified t) 3069 3074 (face font-lock-keyword-face fontified t) 3074 3080 (fontified t) 3080 3084 (face font-lock-keyword-face fontified t) 3084 3086 (fontified t) 3086 3087 (c-type c-decl-end fontified t) 3087 3094 (fontified t) 3094 3097 (face font-lock-constant-face fontified t) 3097 3113 (fontified t) 3113 3117 (face font-lock-string-face fontified t) 3117 3136 (fontified t) 3136 3139 (face font-lock-string-face fontified t) 3139 3150 (fontified t) 3150 3154 (face font-lock-string-face fontified t) 3154 3199 (fontified t) 3199 3204 (face font-lock-keyword-face fontified t) 3204 3210 (fontified t) 3210 3217 (face font-lock-keyword-face fontified t) 3217 3218 (c-type c-decl-end fontified t) 3218 3225 (fontified t) 3225 3228 (face font-lock-constant-face fontified t) 3228 3238 (fontified t) 3238 3242 (face font-lock-string-face fontified t) 3242 3261 (fontified t) 3261 3264 (face font-lock-string-face fontified t) 3264 3275 (fontified t) 3275 3279 (face font-lock-string-face fontified t) 3279 3293 (fontified t) 3293 3296 (face font-lock-constant-face fontified t) 3296 3306 (fontified t) 3306 3310 (face font-lock-string-face fontified t) 3310 3314 (fontified t) 3314 3317 (face font-lock-constant-face fontified t) 3317 3343 (fontified t) 3343 3346 (face font-lock-type-face fontified t) 3346 3347 (face font-lock-type-face c-type c-decl-id-start fontified t) 3347 3348 (fontified t) 3348 3359 (face font-lock-function-name-face fontified t) 3359 3360 (c-type c-decl-arg-start fontified t) 3360 3363 (face font-lock-type-face fontified t) 3363 3364 (fontified t) 3364 3365 (face font-lock-variable-name-face fontified t) 3365 3369 (fontified t) 3369 3372 (fontified t) 3372 3375 (face font-lock-keyword-face fontified t) 3375 3377 (fontified t) 3377 3379 (face font-lock-type-face fontified t) 3379 3380 (face font-lock-type-face c-type c-decl-id-start fontified t) 3380 3381 (fontified t) 3381 3382 (face font-lock-variable-name-face fontified t) 3382 3416 (fontified t) 3416 3422 (face font-lock-keyword-face fontified t) 3422 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3829 (fontified t) 3829 3830 (fontified t) 3830 3831 (fontified t) 3831 3832 (fontified t) 3832 3833 (fontified t rear-nonsticky t) 3833 3836 (face font-lock-constant-face fontified t) 3836 3846 (fontified t) 3846 3857 (fontified t) 3857 3858 (fontified t) 3858 3859 (fontified t) 3859 3860 (fontified t) 3860 3861 (fontified t) 3861 3868 (fontified t) 3868 3869 (fontified t) 3869 3873 (fontified t) 3873 3908 (face font-lock-string-face fontified t) 3908 3918 (fontified t) 3918 3919 (fontified t) 3919 3921 (fontified t) 3921 3922 (fontified t) 3922 3924 (fontified t) 3924 3927 (face font-lock-constant-face fontified t) 3927 3952 (fontified t) 3952 3961 (face font-lock-string-face fontified t) 3961 3965 (fontified t) 3965 3969 (face font-lock-string-face fontified t) 3969 3973 (fontified t) 3973 3976 (face font-lock-constant-face fontified t) 3976 4001 (fontified t) 4001 4031 (face font-lock-string-face fontified t) 4031 4035 (fontified t) 4035 4039 (face font-lock-string-face fontified t) 4039 4043 (fontified t) 4043 4046 (face font-lock-constant-face fontified t) 4046 4071 (fontified t) 4071 4101 (face font-lock-string-face fontified t) 4101 4105 (fontified t) 4105 4109 (face font-lock-string-face fontified t) 4109 4113 (fontified t) 4113 4116 (face font-lock-constant-face fontified t) 4116 4141 (fontified t) 4141 4171 (face font-lock-string-face fontified t) 4171 4175 (fontified t) 4175 4179 (face font-lock-string-face fontified t) 4179 4182 (fontified t) 4182 4184 (fontified t) 4184 4187 (face font-lock-constant-face fontified t) 4187 4197 (fontified t) 4197 4208 (fontified t) 4208 4209 (fontified t) 4209 4210 (fontified t) 4210 4211 (fontified t) 4211 4212 (fontified t) 4212 4224 (fontified t) 4224 4259 (face font-lock-string-face fontified t) 4259 4272 (fontified t) 4272 4276 (fontified t) 4276 4279 (face font-lock-type-face fontified t) 4279 4280 (face font-lock-type-face c-type c-decl-id-start fontified t) 4280 4281 (fontified t) 4281 4292 (face font-lock-function-name-face fontified t) 4292 4293 (c-type c-decl-arg-start fontified t) 4293 4296 (face font-lock-constant-face fontified t) 4296 4298 (fontified t) 4298 4304 (face font-lock-type-face fontified t) 4304 4305 (fontified t category c-<-as-paren-syntax) 4305 4308 (face font-lock-constant-face fontified t) 4308 4310 (fontified t) 4310 4316 (face font-lock-type-face fontified t) 4316 4317 (fontified t category c-<-as-paren-syntax) 4317 4320 (face font-lock-constant-face fontified t) 4320 4322 (fontified t) 4322 4328 (face font-lock-type-face fontified t) 4328 4329 (fontified t category c->-as-paren-syntax) 4329 4330 (fontified t category c->-as-paren-syntax) 4330 4331 (fontified t) 4331 4344 (face font-lock-variable-name-face fontified t) 4344 4345 (c-type c-decl-arg-start fontified t) 4345 4363 (fontified t) 4363 4366 (face font-lock-type-face fontified t) 4366 4367 (fontified t) 4367 4382 (face font-lock-variable-name-face fontified t) 4382 4405 (fontified t) 4405 4407 (fontified t c-is-sws t c-in-sws t) 4407 4408 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4408 4410 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4410 4421 (face font-lock-comment-face fontified t c-in-sws t) 4421 4423 (fontified t c-in-sws t c-is-sws t) 4423 4424 (face font-lock-constant-face fontified t c-is-sws t) 4424 4426 (face font-lock-constant-face fontified t) 4426 4451 (fontified t) 4451 4453 (face font-lock-keyword-face fontified t) 4453 4483 (fontified t) 4483 4486 (face font-lock-constant-face fontified t) 4486 4531 (fontified t) 4531 4550 (fontified t face font-lock-string-face) 4550 4554 (fontified t) 4554 4558 (fontified t face font-lock-string-face) 4558 4560 (fontified t) 4560 4564 (fontified t) 4564 4568 (face font-lock-keyword-face fontified t) 4568 4569 (fontified t) 4569 4571 (face font-lock-keyword-face fontified t) 4571 4601 (fontified t) 4601 4604 (face font-lock-constant-face fontified t) 4604 4663 (fontified t) 4663 4682 (face font-lock-string-face fontified t) 4682 4704 (fontified t) 4704 4708 (face font-lock-string-face fontified t) 4708 4714 (fontified t) 4714 4718 (face font-lock-keyword-face fontified t) 4718 4719 (fontified t) 4719 4721 (face font-lock-keyword-face fontified t) 4721 4747 (fontified t) 4747 4750 (face font-lock-constant-face fontified t) 4750 4809 (fontified t) 4809 4838 (face font-lock-string-face fontified t) 4838 4844 (fontified t) 4844 4846 (face font-lock-keyword-face fontified t) 4846 4869 (fontified t) 4869 4876 (fontified t) 4876 4907 (fontified t) 4907 4912 (face font-lock-constant-face fontified t) 4912 4957 (fontified t) 4957 4961 (face font-lock-keyword-face fontified t) 4961 4976 (fontified t) 4976 4998 (fontified t) 4998 5009 (fontified t) 5009 5013 (face font-lock-keyword-face fontified t) 5013 5014 (fontified t) 5014 5016 (face font-lock-keyword-face fontified t) 5016 5044 (fontified t) 5044 5047 (face font-lock-constant-face fontified t) 5047 5092 (fontified t) 5092 5116 (face font-lock-string-face fontified t) 5116 5134 (fontified t) 5134 5138 (face font-lock-string-face fontified t) 5138 5144 (fontified t) 5144 5146 (face font-lock-keyword-face fontified t) 5146 5211 (fontified t) 5211 5216 (face font-lock-constant-face fontified t) 5216 5263 (fontified t) 5263 5267 (face font-lock-keyword-face fontified t) 5267 5317 (fontified t) 5317 5321 (face font-lock-keyword-face fontified t) 5321 5322 (fontified t) 5322 5324 (face font-lock-keyword-face fontified t) 5324 5361 (fontified t) 5361 5365 (face font-lock-keyword-face fontified t) 5365 5372 (fontified t) 5372 5375 (face font-lock-constant-face fontified t) 5375 5385 (fontified t) 5385 5389 (face font-lock-string-face fontified t) 5389 5391 (fontified t) 5391 5394 (face font-lock-comment-delimiter-face fontified t) 5394 5421 (face font-lock-comment-face fontified t) 5421 5422 (face font-lock-comment-face fontified t) 5422 5444 (face font-lock-comment-face fontified t) 5444 5450 (fontified t) 5450 5452 (face font-lock-keyword-face fontified t) 5452 5454 (fontified t) 5454 5455 (face font-lock-negation-char-face fontified t) 5455 5472 (fontified t) 5472 5475 (face font-lock-keyword-face fontified t) 5475 5477 (fontified t) 5477 5479 (face font-lock-type-face fontified t) 5479 5480 (face font-lock-type-face c-type c-decl-id-start fontified t) 5480 5481 (fontified t) 5481 5482 (face font-lock-variable-name-face fontified t) 5482 5522 (fontified t) 5522 5525 (face font-lock-constant-face fontified t) 5525 5548 (fontified t) 5548 5554 (c-is-sws t c-in-sws t fontified t) 5554 5555 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 5555 5557 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5557 5566 (c-in-sws t face font-lock-comment-face fontified t) 5566 5572 (c-in-sws t c-is-sws t fontified t) 5572 5573 (c-is-sws t fontified t) 5573 5585 (fontified t) 5585 5591 (c-is-sws t c-in-sws t fontified t) 5591 5592 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 5592 5594 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5594 5606 (c-in-sws t face font-lock-comment-face fontified t) 5606 5612 (c-in-sws t c-is-sws t fontified t) 5612 5613 (c-is-sws t fontified t) 5613 5643 (fontified t) 5643 5649 (c-is-sws t c-in-sws t fontified t) 5649 5650 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 5650 5652 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5652 5664 (c-in-sws t face font-lock-comment-face fontified t) 5664 5670 (c-in-sws t c-is-sws t fontified t) 5670 5671 (c-is-sws t fontified t) 5671 5696 (fontified t) 5696 5715 (fontified t) 5715 5721 (fontified t)) . 1) (undo-tree-id361 . -33) (undo-tree-id362 . -3921) (undo-tree-id363 . 1891) (undo-tree-id364 . -4182) (undo-tree-id365 . 1448) (undo-tree-id366 . -4211) (undo-tree-id367 . -4211) (undo-tree-id368 . -3831) (undo-tree-id369 . -3921) (undo-tree-id370 . -4197) (undo-tree-id371 . -4197) (undo-tree-id372 . -3369) (undo-tree-id373 . -4197) (undo-tree-id374 . 1509) (undo-tree-id375 . -3922) (undo-tree-id376 . -3922) (undo-tree-id377 . -3809) (undo-tree-id378 . -3809) (undo-tree-id379 . -3922) (undo-tree-id380 . -3922) (undo-tree-id381 . -3922) (undo-tree-id382 . -3922) (undo-tree-id383 . -3922) (undo-tree-id384 . -3922) (undo-tree-id385 . -3922) (undo-tree-id386 . -3922) 3923) ((1 . 5722) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {

  std::cout << left_margin
            << corner_tl + \"─────────────────────────────────\" + corner_tr;
  std::cout << left_margin << \"OPTIONS\" << '\\n';
  std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';

  std::cout << left_margin
            << corner_bl + \"─────────────────────────────────\" + corner_br;
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 881 882 (category c-<-as-paren-syntax) 893 894 (category c->-as-paren-syntax) 2638 2639 (category c-<-as-paren-syntax) 2650 2651 (category c-<-as-paren-syntax) 2662 2663 (category c->-as-paren-syntax) 2663 2664 (category c->-as-paren-syntax) 3346 3347 (c-type c-decl-id-start) 3348 3359 (face font-lock-function-name-face) 3360 3363 (face font-lock-type-face) 3809 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3833 (fontified t) 3833 3836 (face font-lock-constant-face fontified t) 3836 3885 (fontified t) 3885 3920 (face font-lock-string-face fontified t) 3920 3936 (fontified t) 3936 3939 (face font-lock-constant-face fontified t) 3939 3964 (fontified t) 3964 3973 (face font-lock-string-face fontified t) 3973 3977 (fontified t) 3977 3981 (face font-lock-string-face fontified t) 3981 3985 (fontified t) 3985 3988 (face font-lock-constant-face fontified t) 3988 4013 (fontified t) 4013 4043 (face font-lock-string-face fontified t) 4043 4047 (fontified t) 4047 4051 (face font-lock-string-face fontified t) 4051 4055 (fontified t) 4055 4058 (face font-lock-constant-face fontified t) 4058 4083 (fontified t) 4083 4113 (face font-lock-string-face fontified t) 4113 4117 (fontified t) 4117 4121 (face font-lock-string-face fontified t) 4121 4125 (fontified t) 4125 4128 (face font-lock-constant-face fontified t) 4128 4153 (fontified t) 4153 4183 (face font-lock-string-face fontified t) 4183 4187 (fontified t) 4187 4191 (face font-lock-string-face fontified t) 4191 4196 (fontified t) 4196 4199 (face font-lock-constant-face fontified t) 4199 4248 (fontified t) 4248 4283 (face font-lock-string-face fontified t) 4283 4300 (fontified t) 4300 4303 (face font-lock-type-face fontified t) 4303 4304 (face font-lock-type-face c-type c-decl-id-start fontified t) 4304 4305 (fontified t) 4305 4316 (face font-lock-function-name-face fontified t) 4316 4317 (c-type c-decl-arg-start fontified t) 4317 4320 (face font-lock-constant-face fontified t) 4320 4322 (fontified t) 4322 4328 (face font-lock-type-face fontified t) 4328 4329 (fontified t category c-<-as-paren-syntax) 4329 4332 (face font-lock-constant-face fontified t) 4332 4334 (fontified t) 4334 4340 (face font-lock-type-face fontified t) 4340 4341 (fontified t category c-<-as-paren-syntax) 4341 4344 (face font-lock-constant-face fontified t) 4344 4352 (fontified t) 4352 4353 (fontified t category c->-as-paren-syntax) 4353 4354 (fontified t category c->-as-paren-syntax) 4354 4355 (fontified t) 4355 4368 (face font-lock-variable-name-face fontified t) 4368 4369 (c-type c-decl-arg-start fontified t) 4369 4387 (fontified t) 4387 4390 (face font-lock-type-face fontified t) 4390 4391 (fontified t) 4391 4406 (face font-lock-variable-name-face fontified t) 4406 4429 (fontified t) 4429 4431 (fontified t c-is-sws t c-in-sws t) 4431 4432 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4432 4434 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4434 4445 (face font-lock-comment-face fontified t c-in-sws t) 4445 4447 (fontified t c-in-sws t c-is-sws t) 4447 4448 (face font-lock-constant-face fontified t c-is-sws t) 4448 4450 (face font-lock-constant-face fontified t) 4450 4475 (fontified t) 4475 4477 (face font-lock-keyword-face fontified t) 4477 4507 (fontified t) 4507 4510 (face font-lock-constant-face fontified t) 4510 4555 (fontified t) 4555 4574 (face font-lock-string-face fontified t) 4574 4578 (fontified t) 4578 4582 (face font-lock-string-face fontified t) 4582 4588 (fontified t) 4588 4592 (face font-lock-keyword-face fontified t) 4592 4593 (fontified t) 4593 4595 (face font-lock-keyword-face fontified t) 4595 4625 (fontified t) 4625 4628 (face font-lock-constant-face fontified t) 4628 4687 (fontified t) 4687 4706 (face font-lock-string-face fontified t) 4706 4728 (fontified t) 4728 4732 (face font-lock-string-face fontified t) 4732 4738 (fontified t) 4738 4742 (face font-lock-keyword-face fontified t) 4742 4743 (fontified t) 4743 4745 (face font-lock-keyword-face fontified t) 4745 4771 (fontified t) 4771 4774 (face font-lock-constant-face fontified t) 4774 4833 (fontified t) 4833 4862 (face font-lock-string-face fontified t) 4862 4868 (fontified t) 4868 4870 (face font-lock-keyword-face fontified t) 4870 4931 (fontified t) 4931 4936 (face font-lock-constant-face fontified t) 4936 4981 (fontified t) 4981 4985 (face font-lock-keyword-face fontified t) 4985 5033 (fontified t) 5033 5037 (face font-lock-keyword-face fontified t) 5037 5038 (fontified t) 5038 5040 (face font-lock-keyword-face fontified t) 5040 5068 (fontified t) 5068 5071 (face font-lock-constant-face fontified t) 5071 5116 (fontified t) 5116 5140 (face font-lock-string-face fontified t) 5140 5158 (fontified t) 5158 5162 (face font-lock-string-face fontified t) 5162 5168 (fontified t) 5168 5170 (face font-lock-keyword-face fontified t) 5170 5235 (fontified t) 5235 5240 (face font-lock-constant-face fontified t) 5240 5287 (fontified t) 5287 5291 (face font-lock-keyword-face fontified t) 5291 5309 (fontified t) 5309 5330 (fontified t)) . 1) (undo-tree-id387 . -33) (undo-tree-id388 . -3921) (undo-tree-id389 . -3809) (undo-tree-id390 . -3858) (undo-tree-id391 . -3858) (undo-tree-id392 . -3858)) (26692 28322 388303 486000) 0 nil] [nil nil ((1 . 5746) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {

  std::cout << left_margin << corner_tl + \"─────────────────────────────────\" + corner_tr;
  std::cout << left_margin << \"OPTIONS\" << '\\n';
  std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';

  std::cout << left_margin << corner_bl + \"─────────────────────────────────\" + corner_br;
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 881 882 (category c-<-as-paren-syntax) 893 894 (category c->-as-paren-syntax) 2613 2614 (c-type c-decl-id-start) 2615 2626 (face font-lock-function-name-face) 2632 2638 (face font-lock-type-face) 2638 2639 (category c-<-as-paren-syntax) 2650 2651 (category c-<-as-paren-syntax) 2662 2663 (category c->-as-paren-syntax) 2663 2664 (category c->-as-paren-syntax) 3343 3346 (face font-lock-type-face fontified t) 3346 3347 (face font-lock-type-face c-type c-decl-id-start fontified t) 3347 3348 (fontified t) 3348 3359 (face font-lock-function-name-face fontified t) 3359 3360 (c-type c-decl-arg-start fontified t) 3360 3363 (face font-lock-type-face fontified t) 3363 3364 (fontified t) 3364 3365 (face font-lock-variable-name-face fontified t) 3365 3369 (fontified t) 3369 3372 (fontified t) 3372 3375 (face font-lock-keyword-face fontified t) 3375 3377 (fontified t) 3377 3379 (face font-lock-type-face fontified t) 3379 3380 (face font-lock-type-face c-type c-decl-id-start fontified t) 3380 3381 (fontified t) 3381 3382 (face font-lock-variable-name-face fontified t) 3382 3416 (fontified t) 3416 3422 (face font-lock-keyword-face fontified t) 3422 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3829 (fontified t) 3829 3830 (fontified t) 3830 3831 (fontified t) 3831 3832 (fontified t) 3832 3833 (rear-nonsticky t fontified t) 3833 3836 (face font-lock-constant-face fontified t) 3836 3846 (fontified t) 3846 3857 (fontified t) 3857 3858 (fontified t) 3858 3859 (fontified t) 3859 3860 (fontified t) 3860 3861 (fontified t) 3861 3868 (fontified t) 3868 3869 (fontified t) 3869 3873 (fontified t) 3873 3908 (face font-lock-string-face fontified t) 3908 3918 (fontified t) 3918 3919 (fontified t) 3919 3921 (fontified t) 3921 3922 (fontified t) 3922 3924 (fontified t) 3924 3927 (face font-lock-constant-face fontified t) 3927 3952 (fontified t) 3952 3961 (face font-lock-string-face fontified t) 3961 3965 (fontified t) 3965 3969 (face font-lock-string-face fontified t) 3969 3973 (fontified t) 3973 3976 (face font-lock-constant-face fontified t) 3976 4001 (fontified t) 4001 4031 (face font-lock-string-face fontified t) 4031 4035 (fontified t) 4035 4039 (face font-lock-string-face fontified t) 4039 4043 (fontified t) 4043 4046 (face font-lock-constant-face fontified t) 4046 4071 (fontified t) 4071 4101 (face font-lock-string-face fontified t) 4101 4105 (fontified t) 4105 4109 (face font-lock-string-face fontified t) 4109 4113 (fontified t) 4113 4116 (face font-lock-constant-face fontified t) 4116 4141 (fontified t) 4141 4171 (face font-lock-string-face fontified t) 4171 4175 (fontified t) 4175 4179 (face font-lock-string-face fontified t) 4179 4182 (fontified t) 4182 4184 (fontified t) 4184 4187 (face font-lock-constant-face fontified t) 4187 4197 (fontified t) 4197 4208 (fontified t) 4208 4209 (fontified t) 4209 4210 (fontified t) 4210 4211 (fontified t) 4211 4212 (fontified t) 4212 4224 (fontified t) 4224 4259 (face font-lock-string-face fontified t) 4259 4272 (fontified t) 4272 4276 (fontified t) 4276 4279 (face font-lock-type-face fontified t) 4279 4280 (face font-lock-type-face c-type c-decl-id-start fontified t) 4280 4281 (fontified t) 4281 4292 (face font-lock-function-name-face fontified t) 4292 4293 (c-type c-decl-arg-start fontified t) 4293 4296 (face font-lock-constant-face fontified t) 4296 4298 (fontified t) 4298 4304 (face font-lock-type-face fontified t) 4304 4305 (fontified t category c-<-as-paren-syntax) 4305 4308 (face font-lock-constant-face fontified t) 4308 4310 (fontified t) 4310 4316 (face font-lock-type-face fontified t) 4316 4317 (fontified t category c-<-as-paren-syntax) 4317 4320 (face font-lock-constant-face fontified t) 4320 4328 (fontified t) 4328 4329 (fontified t category c->-as-paren-syntax) 4329 4330 (fontified t category c->-as-paren-syntax) 4330 4331 (fontified t) 4331 4344 (face font-lock-variable-name-face fontified t) 4344 4345 (c-type c-decl-arg-start fontified t) 4345 4363 (fontified t) 4363 4366 (face font-lock-type-face fontified t) 4366 4367 (fontified t) 4367 4382 (face font-lock-variable-name-face fontified t) 4382 4405 (fontified t) 4405 4407 (fontified t c-is-sws t c-in-sws t) 4407 4408 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4408 4410 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4410 4421 (face font-lock-comment-face fontified t c-in-sws t) 4421 4423 (fontified t c-in-sws t c-is-sws t) 4423 4424 (face font-lock-constant-face fontified t c-is-sws t) 4424 4426 (face font-lock-constant-face fontified t) 4426 4451 (fontified t) 4451 4453 (face font-lock-keyword-face fontified t) 4453 4483 (fontified t) 4483 4486 (face font-lock-constant-face fontified t) 4486 4531 (fontified t) 4531 4550 (face font-lock-string-face fontified t) 4550 4554 (fontified t) 4554 4558 (face font-lock-string-face fontified t) 4558 4564 (fontified t) 4564 4568 (face font-lock-keyword-face fontified t) 4568 4569 (fontified t) 4569 4571 (face font-lock-keyword-face fontified t) 4571 4601 (fontified t) 4601 4604 (face font-lock-constant-face fontified t) 4604 4663 (fontified t) 4663 4682 (face font-lock-string-face fontified t) 4682 4704 (fontified t) 4704 4708 (face font-lock-string-face fontified t) 4708 4714 (fontified t) 4714 4718 (face font-lock-keyword-face fontified t) 4718 4719 (fontified t) 4719 4721 (face font-lock-keyword-face fontified t) 4721 4747 (fontified t) 4747 4750 (face font-lock-constant-face fontified t) 4750 4809 (fontified t) 4809 4838 (face font-lock-string-face fontified t) 4838 4844 (fontified t) 4844 4846 (face font-lock-keyword-face fontified t) 4846 4907 (fontified t) 4907 4912 (face font-lock-constant-face fontified t) 4912 4957 (fontified t) 4957 4961 (face font-lock-keyword-face fontified t) 4961 4976 (fontified t) 4976 4998 (fontified t) 4998 5009 (fontified t) 5009 5013 (face font-lock-keyword-face fontified t) 5013 5014 (fontified t) 5014 5016 (face font-lock-keyword-face fontified t) 5016 5044 (fontified t) 5044 5047 (face font-lock-constant-face fontified t) 5047 5092 (fontified t) 5092 5116 (face font-lock-string-face fontified t) 5116 5134 (fontified t) 5134 5138 (face font-lock-string-face fontified t) 5138 5144 (fontified t) 5144 5146 (face font-lock-keyword-face fontified t) 5146 5211 (fontified t) 5211 5216 (face font-lock-constant-face fontified t) 5216 5263 (fontified t) 5263 5267 (face font-lock-keyword-face fontified t) 5267 5317 (fontified t) 5317 5321 (face font-lock-keyword-face fontified t) 5321 5322 (fontified t) 5322 5324 (face font-lock-keyword-face fontified t) 5324 5361 (fontified t) 5361 5365 (face font-lock-keyword-face fontified t) 5365 5372 (fontified t) 5372 5375 (face font-lock-constant-face fontified t) 5375 5385 (fontified t) 5385 5389 (face font-lock-string-face fontified t) 5389 5391 (fontified t) 5391 5394 (face font-lock-comment-delimiter-face fontified t) 5394 5421 (face font-lock-comment-face fontified t) 5421 5422 (fontified t face font-lock-comment-face) 5422 5444 (fontified t face font-lock-comment-face) 5450 5452 (face font-lock-keyword-face) 5454 5455 (face font-lock-negation-char-face) 5472 5475 (face font-lock-keyword-face) 5477 5479 (face font-lock-type-face) 5479 5480 (face font-lock-type-face c-type c-decl-id-start) 5481 5482 (face font-lock-variable-name-face) 5522 5525 (face font-lock-constant-face) 5548 5554 (c-is-sws t c-in-sws t) 5554 5555 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5555 5557 (face font-lock-comment-delimiter-face c-in-sws t) 5557 5566 (face font-lock-comment-face c-in-sws t) 5566 5572 (c-in-sws t c-is-sws t) 5572 5573 (c-is-sws t) 5585 5591 (c-is-sws t c-in-sws t) 5591 5592 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5592 5594 (face font-lock-comment-delimiter-face c-in-sws t) 5594 5606 (face font-lock-comment-face c-in-sws t) 5606 5612 (c-in-sws t c-is-sws t) 5612 5613 (c-is-sws t) 5643 5649 (c-is-sws t c-in-sws t) 5649 5650 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5650 5652 (face font-lock-comment-delimiter-face c-in-sws t) 5652 5664 (face font-lock-comment-face c-in-sws t) 5664 5670 (c-in-sws t c-is-sws t) 5670 5671 (c-is-sws t)) . 1) (undo-tree-id252 . -33) (undo-tree-id253 . -3921) (undo-tree-id254 . 1891) (undo-tree-id255 . -4182) (undo-tree-id256 . 1448) (undo-tree-id257 . -4211) (undo-tree-id258 . -4211) (undo-tree-id259 . -3831) (undo-tree-id260 . -3921) (undo-tree-id261 . -4197) (undo-tree-id262 . -4197) (undo-tree-id263 . -3369) (undo-tree-id264 . -4197) (undo-tree-id266 . -4254) (undo-tree-id268 . -4248) (undo-tree-id270 . -4242) (undo-tree-id272 . -4236) (undo-tree-id274 . -4230) (undo-tree-id276 . -868) (undo-tree-id278 . 1509) (undo-tree-id280 . -3830) (undo-tree-id282 . -3830) (undo-tree-id284 . -3830) (undo-tree-id286 . -3830) (undo-tree-id288 . -3830) (undo-tree-id290 . -3830) (undo-tree-id292 . -3830) (undo-tree-id294 . -3830) (undo-tree-id296 . -3830) (undo-tree-id298 . -3830) (undo-tree-id300 . -3830) (undo-tree-id302 . -3369) (undo-tree-id303 . -3830) (undo-tree-id304 . -3830)) ((1 . 5722) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {

  std::cout << left_margin
            << corner_tl + \"─────────────────────────────────\" + corner_tr;
  std::cout << left_margin << \"OPTIONS\" << '\\n';
  std::cout << left_margin << \"Press 1. for 5 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 2. for 6 letter Wordle\" << '\\n';
  std::cout << left_margin << \"Press 3. for 7 letter Wordle\" << '\\n';

  std::cout << left_margin
            << corner_bl + \"─────────────────────────────────\" + corner_br;
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 881 882 (category c-<-as-paren-syntax) 893 894 (category c->-as-paren-syntax) 2638 2639 (category c-<-as-paren-syntax) 2650 2651 (category c-<-as-paren-syntax) 2662 2663 (category c->-as-paren-syntax) 2663 2664 (category c->-as-paren-syntax) 3346 3347 (c-type c-decl-id-start) 3348 3359 (face font-lock-function-name-face) 3360 3363 (face font-lock-type-face) 3369 3372 (fontified t) 3372 3375 (face font-lock-keyword-face fontified t) 3375 3377 (fontified t) 3377 3379 (face font-lock-type-face fontified t) 3379 3380 (face font-lock-type-face c-type c-decl-id-start fontified t) 3380 3381 (fontified t) 3381 3382 (face font-lock-variable-name-face fontified t) 3382 3416 (fontified t) 3416 3422 (face font-lock-keyword-face fontified t) 3422 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3833 (fontified t) 3833 3836 (face font-lock-constant-face fontified t) 3836 3885 (fontified t) 3885 3920 (face font-lock-string-face fontified t) 3920 3936 (fontified t) 3936 3939 (face font-lock-constant-face fontified t) 3939 3964 (fontified t) 3964 3973 (face font-lock-string-face fontified t) 3973 3977 (fontified t) 3977 3981 (face font-lock-string-face fontified t) 3981 3985 (fontified t) 3985 3988 (face font-lock-constant-face fontified t) 3988 4013 (fontified t) 4013 4043 (face font-lock-string-face fontified t) 4043 4047 (fontified t) 4047 4051 (face font-lock-string-face fontified t) 4051 4055 (fontified t) 4055 4058 (face font-lock-constant-face fontified t) 4058 4083 (fontified t) 4083 4113 (face font-lock-string-face fontified t) 4113 4117 (fontified t) 4117 4121 (face font-lock-string-face fontified t) 4121 4125 (fontified t) 4125 4128 (face font-lock-constant-face fontified t) 4128 4153 (fontified t) 4153 4183 (face font-lock-string-face fontified t) 4183 4187 (fontified t) 4187 4191 (face font-lock-string-face fontified t) 4191 4196 (fontified t) 4196 4199 (face font-lock-constant-face fontified t) 4199 4248 (fontified t) 4248 4283 (face font-lock-string-face fontified t) 4283 4300 (fontified t) 4300 4303 (face font-lock-type-face fontified t) 4303 4304 (face font-lock-type-face c-type c-decl-id-start fontified t) 4304 4305 (fontified t) 4305 4316 (face font-lock-function-name-face fontified t) 4316 4317 (c-type c-decl-arg-start fontified t) 4317 4320 (face font-lock-constant-face fontified t) 4320 4322 (fontified t) 4322 4328 (face font-lock-type-face fontified t) 4328 4329 (fontified t category c-<-as-paren-syntax) 4329 4332 (face font-lock-constant-face fontified t) 4332 4334 (fontified t) 4334 4340 (face font-lock-type-face fontified t) 4340 4341 (fontified t category c-<-as-paren-syntax) 4341 4344 (face font-lock-constant-face fontified t) 4344 4352 (fontified t) 4352 4353 (fontified t category c->-as-paren-syntax) 4353 4354 (fontified t category c->-as-paren-syntax) 4354 4355 (fontified t) 4355 4368 (face font-lock-variable-name-face fontified t) 4368 4369 (c-type c-decl-arg-start fontified t) 4369 4387 (fontified t) 4387 4390 (face font-lock-type-face fontified t) 4390 4391 (fontified t) 4391 4406 (face font-lock-variable-name-face fontified t) 4406 4429 (fontified t) 4429 4431 (fontified t c-is-sws t c-in-sws t) 4431 4432 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4432 4434 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4434 4445 (face font-lock-comment-face fontified t c-in-sws t) 4445 4447 (fontified t c-in-sws t c-is-sws t) 4447 4448 (face font-lock-constant-face fontified t c-is-sws t) 4448 4450 (face font-lock-constant-face fontified t) 4450 4475 (fontified t) 4475 4477 (face font-lock-keyword-face fontified t) 4477 4507 (fontified t) 4507 4510 (face font-lock-constant-face fontified t) 4510 4555 (fontified t) 4555 4574 (face font-lock-string-face fontified t) 4574 4578 (fontified t) 4578 4582 (face font-lock-string-face fontified t) 4582 4588 (fontified t) 4588 4592 (face font-lock-keyword-face fontified t) 4592 4593 (fontified t) 4593 4595 (face font-lock-keyword-face fontified t) 4595 4625 (fontified t) 4625 4628 (face font-lock-constant-face fontified t) 4628 4687 (fontified t) 4687 4706 (face font-lock-string-face fontified t) 4706 4728 (fontified t) 4728 4732 (face font-lock-string-face fontified t) 4732 4738 (fontified t) 4738 4742 (face font-lock-keyword-face fontified t) 4742 4743 (fontified t) 4743 4745 (face font-lock-keyword-face fontified t) 4745 4771 (fontified t) 4771 4774 (face font-lock-constant-face fontified t) 4774 4833 (fontified t) 4833 4862 (face font-lock-string-face fontified t) 4862 4868 (fontified t) 4868 4869 (face font-lock-keyword-face fontified t) 4869 4870 (fontified t face font-lock-keyword-face) 4870 4906 (fontified t)) . 1) (undo-tree-id335 . -33) (undo-tree-id336 . -3921) (undo-tree-id337 . -3369) (undo-tree-id338 . -3830) (undo-tree-id339 . -4257) (undo-tree-id340 . -4254) (undo-tree-id341 . -4251) (undo-tree-id342 . -4248) (undo-tree-id343 . -4245) (undo-tree-id344 . -4242) (undo-tree-id345 . -4239) (undo-tree-id346 . -4236) (undo-tree-id347 . -4233) (undo-tree-id348 . -4230) (undo-tree-id349 . -4261) (undo-tree-id350 . -868) (undo-tree-id351 . -4289) (undo-tree-id352 . -3830) (undo-tree-id353 . -3830) (undo-tree-id354 . -3830) (undo-tree-id355 . -3830) (undo-tree-id356 . -3830) (undo-tree-id357 . -3830) (undo-tree-id358 . -3830) (undo-tree-id359 . -3830) (undo-tree-id360 . -3830) (t 26692 28298 878980 585000)) (26692 28298 875652 630000) 0 nil])
([nil nil ((3966 . 3976) (t 26692 28345 211980 408000)) nil (26692 28423 152894 333000) 0 nil])
nil
nil
nil
([nil nil ((3966 . 3976) (3965 . 3966)) nil (26692 28423 152894 113000) 0 nil])
([nil nil ((3994 . 4005)) nil (26692 28423 152893 796000) 0 nil])
([nil nil ((4006 . 4017)) nil (26692 28423 152893 584000) 0 nil])
([nil nil ((4057 . 4068)) nil (26692 28427 265483 94000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4147 . 4148) (nil fontified nil 4138 . 4148) (4138 . 4148) 4137) nil (26692 28436 620836 203000) 0 nil] [nil nil ((nil rear-nonsticky nil 4148 . 4149) (nil fontified nil 4139 . 4149) (4139 . 4149) 4138) ((#("vertical +" 0 9 (face font-lock-string-face fontified nil) 9 10 (face font-lock-string-face rear-nonsticky nil fontified nil)) . 4139) (undo-tree-id527 . -9) (nil rear-nonsticky t 4148 . 4149)) (26692 28427 263927 300000) 0 nil] [nil nil ((#("  " 0 2 (fontified t)) . -4178) (undo-tree-id488 . -2) (undo-tree-id489 . -2) (undo-tree-id490 . -2) (undo-tree-id491 . -2) (undo-tree-id492 . -2) (undo-tree-id493 . -2) (undo-tree-id494 . -2) (undo-tree-id495 . -2) (undo-tree-id496 . -2) (undo-tree-id497 . -2) (undo-tree-id498 . -2) (undo-tree-id499 . -2) (undo-tree-id500 . -2) (undo-tree-id501 . -2) (undo-tree-id502 . -2) (undo-tree-id503 . -2) (undo-tree-id504 . -2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) 4180 (4177 . 4180) 4138) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 4177) (undo-tree-id507 . -3) (undo-tree-id508 . -3) (undo-tree-id509 . -3) (undo-tree-id510 . -3) (undo-tree-id511 . -3) (undo-tree-id512 . -3) (undo-tree-id513 . -3) (undo-tree-id514 . -3) (undo-tree-id515 . -3) (undo-tree-id516 . -3) (undo-tree-id517 . -3) (undo-tree-id518 . -3) (undo-tree-id519 . -3) (undo-tree-id520 . -3) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id523 . -3) (undo-tree-id524 . -3) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (4178 . 4180)) (26692 28423 152890 105000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4227 . 4228) (nil fontified nil 4218 . 4228) (4218 . 4228) 4217) nil (26692 28436 624108 226000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 4110 . 4111) (nil fontified nil 4099 . 4111) (4099 . 4111) 4098) nil (26692 28458 877068 441000) 0 nil] [nil nil ((nil rear-nonsticky nil 4108 . 4109) (nil fontified nil 4099 . 4109) (4099 . 4109) 4098) ((#("vertical +" 0 9 (fontified nil) 9 10 (rear-nonsticky nil fontified nil)) . 4099) (undo-tree-id528 . -9) (undo-tree-id529 . -9) (undo-tree-id530 . -9) (nil rear-nonsticky t 4108 . 4109)) (26692 28436 620832 276000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4202 . 4203) (nil fontified nil 4191 . 4203) (4191 . 4203) 4190) nil (26692 28458 877067 746000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 4294 . 4295) (nil fontified nil 4283 . 4295) (4283 . 4295) 4282) nil (26692 28458 877067 397000) 0 nil])
([nil nil ((1 . 5903) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {

  std::cout << left_margin
            << corner_tl + \"─────────────────────────────────\" + corner_tr;
  std::cout << left_margin << vertical + \"          OPTIONS           \" + vertical << '\\n';
  std::cout << left_margin << vertical + \"Press 1. for 5 letter Wordle\"  + vertical << '\\n';
  std::cout << left_margin << vertical +\"Press 2. for 6 letter Wordle\"  + vertical << '\\n';
  std::cout << left_margin << vertical +\"Press 3. for 7 letter Wordle\"  + vertical << '\\n';

  std::cout << left_margin
            << corner_bl + \"─────────────────────────────────\" + corner_br;
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 33 (c-in-sws t face font-lock-string-face fontified t) 33 34 (c-in-sws t fontified t) 34 35 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 35 42 (c-in-sws t face font-lock-preprocessor-face fontified t) 42 43 (c-in-sws t fontified t) 43 64 (c-in-sws t face font-lock-string-face fontified t) 64 65 (c-in-sws t fontified t) 65 66 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 66 73 (c-in-sws t face font-lock-preprocessor-face fontified t) 73 74 (c-in-sws t fontified t) 74 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 135 (c-in-sws t face font-lock-string-face fontified t) 135 136 (c-in-sws t fontified t) 136 137 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 137 144 (c-in-sws t face font-lock-preprocessor-face fontified t) 144 145 (c-in-sws t fontified t) 145 146 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 146 149 (c-in-sws t face font-lock-string-face fontified t) 149 150 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 150 151 (c-in-sws t fontified t) 151 152 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 152 159 (c-in-sws t face font-lock-preprocessor-face fontified t) 159 160 (c-in-sws t fontified t) 160 161 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 161 169 (c-in-sws t face font-lock-string-face fontified t) 169 170 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 170 171 (c-in-sws t fontified t) 171 172 (c-is-sws t c-in-sws t fontified t) 172 173 (c-is-sws t face font-lock-keyword-face fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 181 (face font-lock-constant-face fontified t) 181 183 (fontified t) 183 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 190 (fontified t) 190 198 (face font-lock-variable-name-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-string-face fontified t) 204 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 215 (face font-lock-constant-face fontified t) 215 217 (fontified t) 217 222 (face font-lock-type-face fontified t) 222 223 (face font-lock-type-face c-type c-decl-id-start fontified t) 223 224 (fontified t) 224 234 (face font-lock-variable-name-face fontified t) 234 237 (fontified t) 237 240 (face font-lock-string-face fontified t) 240 243 (fontified t) 243 244 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 244 245 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 245 386 (c-in-sws t face font-lock-comment-face fontified t) 386 420 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 420 421 (c-in-sws t fontified t) 421 422 (c-is-sws t face font-lock-keyword-face fontified t) 422 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 430 (face font-lock-constant-face fontified t) 430 432 (fontified t) 432 437 (face font-lock-type-face fontified t) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified t) 438 439 (fontified t) 439 448 (face font-lock-variable-name-face fontified t) 448 451 (fontified t) 451 454 (face font-lock-string-face fontified t) 454 455 (fontified t) 455 456 (c-is-sws t c-in-sws t fontified t) 456 457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 457 459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 459 468 (c-in-sws t face font-lock-comment-face fontified t) 468 469 (c-is-sws t face font-lock-keyword-face fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (fontified t) 474 477 (face font-lock-constant-face fontified t) 477 479 (fontified t) 479 484 (face font-lock-type-face fontified t) 484 485 (face font-lock-type-face c-type c-decl-id-start fontified t) 485 486 (fontified t) 486 495 (face font-lock-variable-name-face fontified t) 495 498 (fontified t) 498 501 (face font-lock-string-face fontified t) 501 503 (fontified t) 503 508 (face font-lock-keyword-face fontified t) 508 509 (fontified t) 509 512 (face font-lock-constant-face fontified t) 512 514 (fontified t) 514 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face c-type c-decl-id-start fontified t) 520 521 (fontified t) 521 530 (face font-lock-variable-name-face fontified t) 530 533 (fontified t) 533 536 (face font-lock-string-face fontified t) 536 538 (fontified t) 538 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 554 (face font-lock-type-face fontified t) 554 555 (face font-lock-type-face c-type c-decl-id-start fontified t) 555 556 (fontified t) 556 565 (face font-lock-variable-name-face fontified t) 565 568 (fontified t) 568 571 (face font-lock-string-face fontified t) 571 573 (fontified t) 573 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-constant-face fontified t) 582 584 (fontified t) 584 589 (face font-lock-type-face fontified t) 589 590 (face font-lock-type-face c-type c-decl-id-start fontified t) 590 591 (fontified t) 591 600 (face font-lock-variable-name-face fontified t) 600 603 (fontified t) 603 606 (face font-lock-string-face fontified t) 606 608 (fontified t) 608 613 (face font-lock-keyword-face fontified t) 613 614 (fontified t) 614 617 (face font-lock-constant-face fontified t) 617 619 (fontified t) 619 624 (face font-lock-type-face fontified t) 624 625 (face font-lock-type-face c-type c-decl-id-start fontified t) 625 626 (fontified t) 626 635 (face font-lock-variable-name-face fontified t) 635 638 (fontified t) 638 641 (face font-lock-string-face fontified t) 641 643 (fontified t) 643 648 (face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (face font-lock-constant-face fontified t) 652 654 (fontified t) 654 659 (face font-lock-type-face fontified t) 659 660 (face font-lock-type-face c-type c-decl-id-start fontified t) 660 661 (fontified t) 661 670 (face font-lock-variable-name-face fontified t) 670 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 678 (fontified t) 678 683 (face font-lock-keyword-face fontified t) 683 684 (fontified t) 684 687 (face font-lock-constant-face fontified t) 687 689 (fontified t) 689 694 (face font-lock-type-face fontified t) 694 695 (face font-lock-type-face c-type c-decl-id-start fontified t) 695 696 (fontified t) 696 708 (face font-lock-variable-name-face fontified t) 708 711 (fontified t) 711 714 (face font-lock-string-face fontified t) 714 716 (fontified t) 716 721 (face font-lock-keyword-face fontified t) 721 722 (fontified t) 722 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 732 (face font-lock-type-face fontified t) 732 733 (face font-lock-type-face c-type c-decl-id-start fontified t) 733 734 (fontified t) 734 748 (face font-lock-variable-name-face fontified t) 748 751 (fontified t) 751 754 (face font-lock-string-face fontified t) 754 756 (fontified t) 756 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 765 (face font-lock-constant-face fontified t) 765 767 (fontified t) 767 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 788 (face font-lock-variable-name-face fontified t) 788 791 (fontified t) 791 794 (face font-lock-string-face fontified t) 794 797 (fontified t) 797 799 (face font-lock-type-face fontified t) 799 800 (face font-lock-type-face c-type c-decl-id-start fontified t) 800 801 (fontified t) 801 826 (face font-lock-variable-name-face fontified t) 826 832 (fontified t) 832 834 (face font-lock-type-face fontified t) 834 835 (face font-lock-type-face c-type c-decl-id-start fontified t) 835 836 (fontified t) 836 863 (face font-lock-variable-name-face fontified t) 863 870 (fontified t) 870 873 (face font-lock-constant-face fontified t) 873 875 (fontified t) 875 881 (face font-lock-type-face fontified t) 881 882 (fontified t category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face fontified t) 885 887 (fontified t) 887 893 (face font-lock-type-face fontified t) 893 894 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 894 895 (fontified t) 895 899 (face font-lock-variable-name-face fontified t) 899 903 (fontified t) 903 906 (face font-lock-string-face fontified t) 906 908 (fontified t) 908 911 (face font-lock-string-face fontified t) 911 913 (fontified t) 913 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 921 (face font-lock-string-face fontified t) 921 923 (fontified t) 923 926 (face font-lock-string-face fontified t) 926 928 (fontified t) 928 931 (face font-lock-string-face fontified t) 931 933 (fontified t) 933 936 (face font-lock-string-face fontified t) 936 938 (fontified t) 938 941 (face font-lock-string-face fontified t) 941 943 (fontified t) 943 946 (face font-lock-string-face fontified t) 946 981 (fontified t) 981 984 (face font-lock-string-face fontified t) 984 986 (fontified t) 986 989 (face font-lock-string-face fontified t) 989 991 (fontified t) 991 994 (face font-lock-string-face fontified t) 994 996 (fontified t) 996 999 (face font-lock-string-face fontified t) 999 1001 (fontified t) 1001 1004 (face font-lock-string-face fontified t) 1004 1006 (fontified t) 1006 1009 (face font-lock-string-face fontified t) 1009 1011 (fontified t) 1011 1014 (face font-lock-string-face fontified t) 1014 1016 (fontified t) 1016 1019 (face font-lock-string-face fontified t) 1019 1021 (fontified t) 1021 1024 (face font-lock-string-face fontified t) 1024 1059 (fontified t) 1059 1062 (face font-lock-string-face fontified t) 1062 1064 (fontified t) 1064 1067 (face font-lock-string-face fontified t) 1067 1069 (fontified t) 1069 1072 (face font-lock-string-face fontified t) 1072 1074 (fontified t) 1074 1077 (face font-lock-string-face fontified t) 1077 1079 (fontified t) 1079 1082 (face font-lock-string-face fontified t) 1082 1084 (fontified t) 1084 1087 (face font-lock-string-face fontified t) 1087 1089 (fontified t) 1089 1092 (face font-lock-string-face fontified t) 1092 1094 (fontified t) 1094 1097 (face font-lock-string-face fontified t) 1097 1100 (fontified t) 1100 1103 (face font-lock-constant-face fontified t) 1103 1105 (fontified t) 1105 1110 (face font-lock-type-face fontified t) 1110 1111 (face font-lock-type-face c-type c-decl-id-start fontified t) 1111 1112 (fontified t) 1112 1122 (face font-lock-variable-name-face fontified t) 1122 1125 (fontified t) 1125 1153 (face font-lock-string-face fontified t) 1153 1156 (fontified t) 1156 1159 (face font-lock-type-face fontified t) 1159 1160 (face font-lock-type-face c-type c-decl-id-start fontified t) 1160 1161 (fontified t) 1161 1171 (face font-lock-function-name-face fontified t) 1171 1172 (c-type c-decl-arg-start fontified t) 1172 1175 (face font-lock-constant-face fontified t) 1175 1177 (fontified t) 1177 1183 (face font-lock-type-face fontified t) 1183 1184 (fontified t) 1184 1190 (face font-lock-variable-name-face fontified t) 1190 1191 (c-type c-decl-arg-start fontified t) 1191 1192 (fontified t) 1192 1195 (face font-lock-constant-face fontified t) 1195 1197 (fontified t) 1197 1203 (face font-lock-type-face fontified t) 1203 1204 (fontified t) 1204 1209 (face font-lock-variable-name-face fontified t) 1209 1215 (fontified t) 1215 1218 (face font-lock-keyword-face fontified t) 1218 1220 (fontified t) 1220 1222 (face font-lock-type-face fontified t) 1222 1223 (face font-lock-type-face c-type c-decl-id-start fontified t) 1223 1224 (fontified t) 1224 1225 (face font-lock-variable-name-face fontified t) 1225 1250 (fontified t) 1250 1252 (face font-lock-keyword-face fontified t) 1252 1254 (fontified t) 1254 1257 (face font-lock-constant-face fontified t) 1257 1319 (fontified t) 1319 1322 (face font-lock-constant-face fontified t) 1322 1371 (fontified t) 1371 1374 (face font-lock-type-face fontified t) 1374 1375 (face font-lock-type-face c-type c-decl-id-start fontified t) 1375 1376 (fontified t) 1376 1390 (face font-lock-function-name-face fontified t) 1390 1397 (fontified t) 1397 1400 (face font-lock-constant-face fontified t) 1400 1444 (fontified t) 1444 1447 (face font-lock-string-face fontified t) 1447 1475 (fontified t) 1475 1498 (face font-lock-string-face fontified t) 1498 1500 (fontified t) 1500 1512 (fontified t) 1512 1514 (fontified t) 1514 1517 (face font-lock-constant-face fontified t) 1517 1527 (fontified t) 1527 1531 (face font-lock-string-face fontified t) 1531 1569 (fontified t) 1569 1572 (face font-lock-string-face fontified t) 1572 1587 (fontified t) 1587 1590 (face font-lock-string-face fontified t) 1590 1594 (fontified t) 1594 1597 (face font-lock-keyword-face fontified t) 1597 1599 (fontified t) 1599 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face c-type c-decl-id-start fontified t) 1602 1603 (fontified t) 1603 1604 (face font-lock-variable-name-face fontified t) 1604 1629 (fontified t) 1629 1631 (face font-lock-keyword-face fontified t) 1631 1650 (fontified t) 1650 1653 (face font-lock-constant-face fontified t) 1653 1675 (fontified t) 1675 1679 (face font-lock-string-face fontified t) 1679 1687 (fontified t) 1687 1690 (face font-lock-constant-face fontified t) 1690 1734 (fontified t) 1734 1737 (face font-lock-string-face fontified t) 1737 1752 (fontified t) 1752 1756 (face font-lock-string-face fontified t) 1756 1765 (fontified t) 1765 1769 (face font-lock-keyword-face fontified t) 1769 1770 (fontified t) 1770 1772 (face font-lock-keyword-face fontified t) 1772 1791 (fontified t) 1791 1794 (face font-lock-constant-face fontified t) 1794 1804 (fontified t) 1804 1807 (face font-lock-string-face fontified t) 1807 1822 (fontified t) 1822 1826 (face font-lock-string-face fontified t) 1826 1834 (fontified t) 1834 1837 (face font-lock-constant-face fontified t) 1837 1881 (fontified t) 1881 1884 (face font-lock-string-face fontified t) 1884 1899 (fontified t) 1899 1905 (face font-lock-string-face fontified t) 1905 1917 (fontified t) 1917 1920 (face font-lock-constant-face fontified t) 1920 1941 (fontified t) 1941 1944 (face font-lock-string-face fontified t) 1944 1952 (fontified t) 1952 1955 (face font-lock-constant-face fontified t) 1955 1965 (fontified t) 1965 1970 (face font-lock-string-face fontified t) 1970 1985 (fontified t) 1985 1989 (face font-lock-string-face fontified t) 1989 1993 (fontified t) 1993 1996 (face font-lock-constant-face fontified t) 1996 2040 (fontified t) 2040 2043 (face font-lock-string-face fontified t) 2043 2071 (fontified t) 2071 2094 (face font-lock-string-face fontified t) 2094 2110 (fontified t) 2110 2114 (face font-lock-string-face fontified t) 2114 2119 (fontified t) 2119 2122 (face font-lock-type-face fontified t) 2122 2123 (face font-lock-type-face c-type c-decl-id-start fontified t) 2123 2124 (fontified t) 2124 2132 (face font-lock-function-name-face fontified t) 2132 2133 (c-type c-decl-arg-start fontified t) 2133 2136 (face font-lock-type-face fontified t) 2136 2137 (fontified t) 2137 2138 (face font-lock-variable-name-face fontified t) 2138 2144 (fontified t) 2144 2147 (face font-lock-keyword-face fontified t) 2147 2149 (fontified t) 2149 2151 (face font-lock-type-face fontified t) 2151 2152 (face font-lock-type-face c-type c-decl-id-start fontified t) 2152 2153 (fontified t) 2153 2154 (face font-lock-variable-name-face fontified t) 2154 2188 (fontified t) 2188 2194 (face font-lock-keyword-face fontified t) 2194 2222 (fontified t) 2222 2226 (face font-lock-keyword-face fontified t) 2226 2228 (fontified t) 2228 2229 (c-type c-decl-end fontified t) 2229 2236 (fontified t) 2236 2239 (face font-lock-constant-face fontified t) 2239 2267 (fontified t) 2267 2272 (face font-lock-string-face fontified t) 2272 2300 (fontified t) 2300 2305 (face font-lock-keyword-face fontified t) 2305 2311 (fontified t) 2311 2315 (face font-lock-keyword-face fontified t) 2315 2317 (fontified t) 2317 2318 (c-type c-decl-end fontified t) 2318 2325 (fontified t) 2325 2328 (face font-lock-constant-face fontified t) 2328 2356 (fontified t) 2356 2361 (face font-lock-string-face fontified t) 2361 2390 (fontified t) 2390 2395 (face font-lock-keyword-face fontified t) 2395 2401 (fontified t) 2401 2405 (face font-lock-keyword-face fontified t) 2405 2407 (fontified t) 2407 2408 (c-type c-decl-end fontified t) 2408 2415 (fontified t) 2415 2418 (face font-lock-constant-face fontified t) 2418 2446 (fontified t) 2446 2451 (face font-lock-string-face fontified t) 2451 2478 (fontified t) 2478 2483 (face font-lock-keyword-face fontified t) 2483 2489 (fontified t) 2489 2496 (face font-lock-keyword-face fontified t) 2496 2497 (c-type c-decl-end fontified t) 2497 2504 (fontified t) 2504 2507 (face font-lock-constant-face fontified t) 2507 2529 (fontified t) 2529 2534 (face font-lock-string-face fontified t) 2534 2560 (fontified t) 2560 2563 (face font-lock-constant-face fontified t) 2563 2573 (fontified t) 2573 2577 (face font-lock-string-face fontified t) 2577 2581 (fontified t) 2581 2584 (face font-lock-constant-face fontified t) 2584 2610 (fontified t) 2610 2613 (face font-lock-type-face fontified t) 2613 2614 (face font-lock-type-face c-type c-decl-id-start fontified t) 2614 2615 (fontified t) 2615 2626 (face font-lock-function-name-face fontified t) 2626 2627 (c-type c-decl-arg-start fontified t) 2627 2630 (face font-lock-constant-face fontified t) 2630 2632 (fontified t) 2632 2638 (face font-lock-type-face fontified t) 2638 2639 (fontified t category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face fontified t) 2642 2644 (fontified t) 2644 2650 (face font-lock-type-face fontified t) 2650 2651 (fontified t category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face fontified t) 2654 2656 (fontified t) 2656 2662 (face font-lock-type-face fontified t) 2662 2663 (fontified t category c->-as-paren-syntax) 2663 2664 (fontified t category c->-as-paren-syntax) 2664 2665 (fontified t) 2665 2678 (face font-lock-variable-name-face fontified t) 2678 2679 (c-type c-decl-arg-start fontified t) 2679 2680 (fontified t) 2680 2683 (face font-lock-type-face fontified t) 2683 2684 (fontified t) 2684 2685 (face font-lock-variable-name-face fontified t) 2685 2692 (fontified t) 2692 2695 (face font-lock-keyword-face fontified t) 2695 2697 (fontified t) 2697 2699 (face font-lock-type-face fontified t) 2699 2700 (face font-lock-type-face c-type c-decl-id-start fontified t) 2700 2701 (fontified t) 2701 2702 (face font-lock-variable-name-face fontified t) 2702 2736 (fontified t) 2736 2739 (face font-lock-constant-face fontified t) 2739 2741 (fontified t) 2741 2746 (face font-lock-type-face fontified t) 2746 2747 (face font-lock-type-face c-type c-decl-id-start fontified t) 2747 2748 (fontified t) 2748 2752 (face font-lock-variable-name-face fontified t) 2752 2780 (fontified t) 2780 2786 (face font-lock-keyword-face fontified t) 2786 2814 (fontified t) 2814 2818 (face font-lock-keyword-face fontified t) 2818 2820 (fontified t) 2820 2821 (c-type c-decl-end fontified t) 2821 2828 (fontified t) 2828 2831 (face font-lock-constant-face fontified t) 2831 2847 (fontified t) 2847 2851 (face font-lock-string-face fontified t) 2851 2870 (fontified t) 2870 2873 (face font-lock-string-face fontified t) 2873 2884 (fontified t) 2884 2888 (face font-lock-string-face fontified t) 2888 2935 (fontified t) 2935 2940 (face font-lock-keyword-face fontified t) 2940 2946 (fontified t) 2946 2950 (face font-lock-keyword-face fontified t) 2950 2952 (fontified t) 2952 2953 (c-type c-decl-end fontified t) 2953 2960 (fontified t) 2960 2963 (face font-lock-constant-face fontified t) 2963 2979 (fontified t) 2979 2983 (face font-lock-string-face fontified t) 2983 3002 (fontified t) 3002 3005 (face font-lock-string-face fontified t) 3005 3012 (fontified t) 3012 3016 (fontified t) 3016 3020 (fontified t face font-lock-string-face) 3020 3031 (fontified t) 3031 3069 (fontified t) 3069 3074 (face font-lock-keyword-face fontified t) 3074 3080 (fontified t) 3080 3084 (face font-lock-keyword-face fontified t) 3084 3086 (fontified t) 3086 3087 (c-type c-decl-end fontified t) 3087 3094 (fontified t) 3094 3097 (face font-lock-constant-face fontified t) 3097 3113 (fontified t) 3113 3117 (face font-lock-string-face fontified t) 3117 3136 (fontified t) 3136 3139 (face font-lock-string-face fontified t) 3139 3150 (fontified t) 3150 3154 (face font-lock-string-face fontified t) 3154 3199 (fontified t) 3199 3204 (face font-lock-keyword-face fontified t) 3204 3210 (fontified t) 3210 3217 (face font-lock-keyword-face fontified t) 3217 3218 (c-type c-decl-end fontified t) 3218 3225 (fontified t) 3225 3228 (face font-lock-constant-face fontified t) 3228 3238 (fontified t) 3238 3242 (face font-lock-string-face fontified t) 3242 3261 (fontified t) 3261 3264 (face font-lock-string-face fontified t) 3264 3275 (fontified t) 3275 3279 (face font-lock-string-face fontified t) 3279 3293 (fontified t) 3293 3296 (face font-lock-constant-face fontified t) 3296 3306 (fontified t) 3306 3310 (face font-lock-string-face fontified t) 3310 3314 (fontified t) 3314 3317 (face font-lock-constant-face fontified t) 3317 3343 (fontified t) 3343 3346 (face font-lock-type-face fontified t) 3346 3347 (face font-lock-type-face c-type c-decl-id-start fontified t) 3347 3348 (fontified t) 3348 3359 (face font-lock-function-name-face fontified t) 3359 3360 (c-type c-decl-arg-start fontified t) 3360 3363 (face font-lock-type-face fontified t) 3363 3364 (fontified t) 3364 3365 (face font-lock-variable-name-face fontified t) 3365 3372 (fontified t) 3372 3375 (face font-lock-keyword-face fontified t) 3375 3377 (fontified t) 3377 3379 (face font-lock-type-face fontified t) 3379 3380 (face font-lock-type-face c-type c-decl-id-start fontified t) 3380 3381 (fontified t) 3381 3382 (face font-lock-variable-name-face fontified t) 3382 3416 (fontified t) 3416 3422 (face font-lock-keyword-face fontified t) 3422 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3833 (fontified t) 3833 3836 (face font-lock-constant-face fontified t) 3836 3885 (fontified t) 3885 3920 (face font-lock-string-face fontified t) 3920 3934 (fontified t) 3934 3936 (fontified t) 3936 3939 (face font-lock-constant-face fontified t) 3939 3964 (fontified t) 3964 3965 (fontified t) 3965 3966 (fontified t) 3966 3967 (fontified t) 3967 3968 (fontified t) 3968 3969 (fontified t) 3969 3970 (fontified t) 3970 3971 (fontified t) 3971 3972 (fontified t) 3972 3973 (fontified t) 3973 3974 (fontified t) 3974 3975 (fontified t) 3975 3976 (face font-lock-string-face fontified t) 3976 3977 (face font-lock-string-face fontified t) 3977 3978 (face font-lock-string-face fontified t) 3978 3979 (face font-lock-string-face fontified t) 3979 3980 (face font-lock-string-face fontified t) 3980 3981 (face font-lock-string-face fontified t) 3981 3982 (face font-lock-string-face fontified t) 3982 3983 (face font-lock-string-face fontified t) 3983 3984 (face font-lock-string-face fontified t) 3984 3985 (face font-lock-string-face fontified t) 3985 3986 (face font-lock-string-face fontified t) 3986 3993 (face font-lock-string-face fontified t) 3993 3994 (face font-lock-string-face fontified t) 3994 3995 (face font-lock-string-face fontified t) 3995 3996 (face font-lock-string-face fontified t) 3996 3997 (face font-lock-string-face fontified t) 3997 3998 (face font-lock-string-face fontified t) 3998 4000 (face font-lock-string-face fontified t) 4000 4001 (face font-lock-string-face fontified t) 4001 4002 (face font-lock-string-face fontified t) 4002 4003 (face font-lock-string-face fontified t) 4003 4004 (face font-lock-string-face fontified t) 4004 4005 (face font-lock-string-face fontified t) 4005 4006 (fontified t) 4006 4007 (fontified t) 4007 4008 (fontified t) 4008 4009 (fontified t) 4009 4010 (fontified t) 4010 4011 (fontified t) 4011 4012 (fontified t) 4012 4013 (fontified t) 4013 4014 (fontified t) 4014 4015 (fontified t) 4015 4016 (fontified t) 4016 4020 (fontified t) 4020 4024 (face font-lock-string-face fontified t) 4024 4025 (fontified t) 4025 4026 (fontified t) 4026 4028 (fontified t) 4028 4031 (face font-lock-constant-face fontified t) 4031 4056 (fontified t) 4056 4057 (fontified t) 4057 4058 (fontified t) 4058 4059 (fontified t) 4059 4060 (fontified t) 4060 4061 (fontified t) 4061 4062 (fontified t) 4062 4063 (fontified t) 4063 4064 (fontified t) 4064 4065 (fontified t) 4065 4066 (fontified t) 4066 4067 (fontified t) 4067 4097 (face font-lock-string-face fontified t) 4097 4098 (fontified t) 4098 4109 (fontified t) 4109 4110 (rear-nonsticky t fontified t) 4110 4113 (fontified t) 4113 4117 (face font-lock-string-face fontified t) 4117 4118 (fontified t) 4118 4119 (fontified t) 4119 4121 (fontified t) 4121 4124 (face font-lock-constant-face fontified t) 4124 4149 (fontified t) 4149 4158 (fontified t) 4158 4159 (fontified t rear-nonsticky t) 4159 4160 (face font-lock-string-face fontified t) 4160 4189 (face font-lock-string-face fontified t) 4189 4190 (fontified t) 4190 4201 (fontified t) 4201 4202 (fontified t rear-nonsticky t) 4202 4205 (fontified t) 4205 4209 (face font-lock-string-face fontified t) 4209 4210 (fontified t) 4210 4211 (fontified t) 4211 4213 (fontified t) 4213 4216 (face font-lock-constant-face fontified t) 4216 4241 (fontified t) 4241 4250 (fontified t) 4250 4251 (fontified t rear-nonsticky t) 4251 4281 (face font-lock-string-face fontified t) 4281 4282 (fontified t) 4282 4293 (fontified t) 4293 4294 (rear-nonsticky t fontified t) 4294 4297 (fontified t) 4297 4301 (face font-lock-string-face fontified t) 4301 4302 (fontified t) 4302 4303 (fontified t) 4303 4306 (fontified t) 4306 4309 (face font-lock-constant-face fontified t) 4309 4358 (fontified t) 4358 4393 (face font-lock-string-face fontified t) 4393 4410 (fontified t) 4410 4413 (face font-lock-type-face fontified t) 4413 4414 (face font-lock-type-face c-type c-decl-id-start fontified t) 4414 4415 (fontified t) 4415 4426 (face font-lock-function-name-face fontified t) 4426 4427 (c-type c-decl-arg-start fontified t) 4427 4430 (face font-lock-constant-face fontified t) 4430 4432 (fontified t) 4432 4438 (face font-lock-type-face fontified t) 4438 4439 (fontified t category c-<-as-paren-syntax) 4439 4442 (face font-lock-constant-face fontified t) 4442 4444 (fontified t) 4444 4450 (face font-lock-type-face fontified t) 4450 4451 (fontified t category c-<-as-paren-syntax) 4451 4454 (face font-lock-constant-face fontified t) 4454 4456 (fontified t) 4456 4462 (face font-lock-type-face fontified t) 4462 4463 (fontified t category c->-as-paren-syntax) 4463 4464 (fontified t category c->-as-paren-syntax) 4464 4465 (fontified t) 4465 4478 (face font-lock-variable-name-face fontified t) 4478 4479 (c-type c-decl-arg-start fontified t) 4479 4497 (fontified t) 4497 4500 (face font-lock-type-face fontified t) 4500 4501 (fontified t) 4501 4516 (face font-lock-variable-name-face fontified t) 4516 4539 (fontified t) 4539 4541 (fontified t c-is-sws t c-in-sws t) 4541 4542 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4542 4544 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4544 4555 (face font-lock-comment-face fontified t c-in-sws t) 4555 4557 (fontified t c-in-sws t c-is-sws t) 4557 4558 (face font-lock-constant-face fontified t c-is-sws t) 4558 4560 (face font-lock-constant-face fontified t) 4560 4585 (fontified t) 4585 4587 (face font-lock-keyword-face fontified t) 4587 4613 (fontified t) 4613 4617 (fontified t) 4617 4620 (face font-lock-constant-face fontified t) 4620 4641 (fontified t) 4641 4665 (fontified t) 4665 4684 (face font-lock-string-face fontified t) 4684 4688 (fontified t) 4688 4692 (face font-lock-string-face fontified t) 4692 4693 (fontified t) 4693 4698 (fontified t) 4698 4702 (face font-lock-keyword-face fontified t) 4702 4703 (fontified t) 4703 4705 (face font-lock-keyword-face fontified t) 4705 4735 (fontified t) 4735 4738 (face font-lock-constant-face fontified t) 4738 4797 (fontified t) 4797 4816 (face font-lock-string-face fontified t) 4816 4838 (fontified t) 4838 4842 (face font-lock-string-face fontified t) 4842 4848 (fontified t) 4848 4852 (face font-lock-keyword-face fontified t) 4852 4853 (fontified t) 4853 4855 (face font-lock-keyword-face fontified t) 4855 4881 (fontified t) 4881 4884 (face font-lock-constant-face fontified t) 4884 4943 (fontified t) 4943 4972 (face font-lock-string-face fontified t) 4972 4978 (fontified t) 4978 4980 (face font-lock-keyword-face fontified t) 4980 5041 (fontified t) 5041 5046 (face font-lock-constant-face fontified t) 5046 5091 (fontified t) 5091 5095 (face font-lock-keyword-face fontified t) 5095 5143 (fontified t) 5143 5147 (face font-lock-keyword-face fontified t) 5147 5148 (fontified t) 5148 5150 (face font-lock-keyword-face fontified t) 5150 5178 (fontified t) 5178 5181 (face font-lock-constant-face fontified t) 5181 5226 (fontified t) 5226 5250 (face font-lock-string-face fontified t) 5250 5268 (fontified t) 5268 5272 (face font-lock-string-face fontified t) 5272 5278 (fontified t) 5278 5280 (face font-lock-keyword-face fontified t) 5280 5345 (fontified t) 5345 5350 (face font-lock-constant-face fontified t) 5350 5397 (fontified t) 5397 5401 (face font-lock-keyword-face fontified t) 5401 5451 (fontified t) 5451 5455 (face font-lock-keyword-face fontified t) 5455 5456 (fontified t) 5456 5458 (face font-lock-keyword-face fontified t) 5458 5495 (fontified t) 5495 5499 (face font-lock-keyword-face fontified t) 5499 5506 (fontified t) 5506 5509 (face font-lock-constant-face fontified t) 5509 5519 (fontified t) 5519 5523 (face font-lock-string-face fontified t) 5523 5525 (fontified t) 5525 5528 (face font-lock-comment-delimiter-face fontified t) 5528 5578 (face font-lock-comment-face fontified t) 5578 5584 (fontified t) 5584 5586 (face font-lock-keyword-face fontified t) 5586 5588 (fontified t) 5588 5589 (face font-lock-negation-char-face fontified t) 5589 5592 (fontified t) 5592 5593 (fontified t) 5593 5602 (fontified t) 5602 5606 (fontified t) 5606 5609 (face font-lock-keyword-face fontified t) 5609 5611 (fontified t) 5611 5613 (face font-lock-type-face fontified t) 5613 5614 (face font-lock-type-face c-type c-decl-id-start fontified t) 5614 5615 (fontified t) 5615 5616 (face font-lock-variable-name-face fontified t) 5616 5623 (fontified t) 5623 5630 (fontified t) 5630 5642 (fontified t) 5642 5643 (fontified t) 5643 5650 (fontified t) 5650 5656 (fontified t) 5656 5659 (face font-lock-constant-face fontified t) 5659 5663 (fontified t) 5663 5681 (fontified t) 5681 5682 (fontified t) 5682 5688 (fontified t c-is-sws t c-in-sws t) 5688 5689 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5689 5691 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5691 5700 (face font-lock-comment-face fontified t c-in-sws t) 5700 5706 (fontified t c-in-sws t c-is-sws t) 5706 5707 (fontified t c-is-sws t) 5707 5711 (fontified t) 5711 5718 (fontified t) 5718 5719 (fontified t) 5719 5725 (fontified t c-is-sws t c-in-sws t) 5725 5726 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5726 5728 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5728 5733 (face font-lock-comment-face fontified t c-in-sws t) 5733 5740 (face font-lock-comment-face fontified t c-in-sws t) 5740 5746 (fontified t c-in-sws t c-is-sws t) 5746 5747 (fontified t c-is-sws t) 5747 5777 (fontified t) 5777 5783 (fontified t c-is-sws t c-in-sws t) 5783 5784 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5784 5786 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5786 5798 (face font-lock-comment-face fontified t c-in-sws t) 5798 5802 (fontified t c-in-sws t c-is-sws t) 5802 5803 (fontified t c-in-sws t c-is-sws t) 5803 5804 (fontified t c-in-sws t c-is-sws t) 5804 5805 (fontified t c-is-sws t) 5805 5820 (fontified t)) . 1) (undo-tree-id531 . -33) (undo-tree-id532 . -4282) (undo-tree-id533 . 1645) (undo-tree-id534 . -4005) (undo-tree-id535 . 1838) (undo-tree-id536 . -4005) (undo-tree-id537 . -4016) (undo-tree-id538 . -4282) (undo-tree-id539 . -4293) (undo-tree-id540 . -4056) (undo-tree-id541 . -4064) (undo-tree-id542 . -3446) (undo-tree-id543 . -4064) (undo-tree-id544 . 1788) (undo-tree-id545 . -4064) (undo-tree-id546 . -4293) (undo-tree-id547 . -3446) 4294) nil (26692 28458 878047 504000) 0 nil])
([nil nil ((#("─" 0 1 (face font-lock-string-face fontified t)) . 4439) (undo-tree-id548 . -1)) nil (26692 28472 34604 556000) 0 nil] [nil nil ((3998 . 3999)) ((#(" " 0 1 (face font-lock-string-face fontified t)) . 3998)) (26692 28458 877051 541000) 0 nil])
([nil nil ((#("─" 0 1 (face font-lock-string-face fontified t)) . 3919)) nil (26692 28472 34596 190000) 0 nil])
nil
([nil nil ((3935 . 3940) (3933 . 3935) (3932 . 3933) (t 26692 28472 39979 925000)) nil (26692 28523 154310 28000) 0 nil])
([nil nil ((1 . 5921) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {

  std::cout << left_margin
            << corner_tl + \"────────────────────────────────\" + corner_tr << '\\n';
  std::cout << left_margin
            << vertical + \"          OPTIONS           \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \"Press 1. for 5 letter Wordle\" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \"Press 2. for 6 letter Wordle\" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \"Press 3. for 7 letter Wordle\" + vertical << '\\n';

  std::cout << left_margin
            << corner_bl + \"────────────────────────────────\" + corner_br;
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 881 882 (category c-<-as-paren-syntax) 893 894 (category c->-as-paren-syntax) 2638 2639 (category c-<-as-paren-syntax) 2650 2651 (category c-<-as-paren-syntax) 2662 2663 (category c->-as-paren-syntax) 2663 2664 (category c->-as-paren-syntax) 3446 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3831 (fontified t) 3831 3833 (fontified t) 3833 3836 (face font-lock-constant-face fontified t) 3836 3885 (fontified t) 3885 3918 (face font-lock-string-face fontified t) 3918 3919 (face font-lock-string-face fontified t) 3919 3931 (fontified t) 3931 3932 (fontified t) 3932 3933 (fontified t) 3933 3934 (fontified t) 3934 3935 (fontified t) 3935 3936 (face font-lock-string-face fontified t) 3936 3937 (face font-lock-string-face fontified t) 3937 3938 (face font-lock-string-face fontified t) 3938 3939 (face font-lock-string-face fontified t) 3939 3940 (fontified t) 3940 3941 (fontified t) 3941 3943 (fontified t) 3943 3946 (face font-lock-constant-face fontified t) 3946 3994 (fontified t) 3994 4004 (face font-lock-string-face fontified t) 4004 4024 (face font-lock-string-face fontified t) 4024 4039 (fontified t) 4039 4043 (face font-lock-string-face fontified t) 4043 4045 (fontified t) 4045 4047 (fontified t) 4047 4050 (face font-lock-constant-face fontified t) 4050 4098 (fontified t) 4098 4128 (face font-lock-string-face fontified t) 4128 4143 (fontified t) 4143 4147 (face font-lock-string-face fontified t) 4147 4151 (fontified t) 4151 4154 (face font-lock-constant-face fontified t) 4154 4202 (fontified t) 4202 4232 (face font-lock-string-face fontified t) 4232 4247 (fontified t) 4247 4251 (face font-lock-string-face fontified t) 4251 4255 (fontified t) 4255 4258 (face font-lock-constant-face fontified t) 4258 4306 (fontified t) 4306 4336 (face font-lock-string-face fontified t) 4336 4351 (fontified t) 4351 4355 (face font-lock-string-face fontified t) 4355 4360 (fontified t) 4360 4363 (face font-lock-constant-face fontified t) 4363 4412 (fontified t) 4412 4445 (face font-lock-string-face fontified t) 4445 4446 (face font-lock-string-face fontified t) 4446 4460 (fontified t) 4460 4463 (fontified t) 4463 4466 (face font-lock-type-face fontified t) 4466 4467 (face font-lock-type-face c-type c-decl-id-start fontified t) 4467 4468 (fontified t) 4468 4479 (face font-lock-function-name-face fontified t) 4479 4480 (c-type c-decl-arg-start fontified t) 4480 4483 (face font-lock-constant-face fontified t) 4483 4485 (fontified t) 4485 4491 (face font-lock-type-face fontified t) 4491 4492 (fontified t category c-<-as-paren-syntax) 4492 4495 (face font-lock-constant-face fontified t) 4495 4497 (fontified t) 4497 4503 (face font-lock-type-face fontified t) 4503 4504 (fontified t category c-<-as-paren-syntax) 4504 4507 (face font-lock-constant-face fontified t) 4507 4515 (fontified t) 4515 4516 (fontified t category c->-as-paren-syntax) 4516 4517 (fontified t category c->-as-paren-syntax) 4517 4518 (fontified t) 4518 4531 (face font-lock-variable-name-face fontified t) 4531 4532 (c-type c-decl-arg-start fontified t) 4532 4550 (fontified t) 4550 4553 (face font-lock-type-face fontified t) 4553 4554 (fontified t) 4554 4569 (face font-lock-variable-name-face fontified t) 4569 4592 (fontified t) 4592 4594 (fontified t c-is-sws t c-in-sws t) 4594 4595 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4595 4597 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4597 4608 (face font-lock-comment-face fontified t c-in-sws t) 4608 4610 (fontified t c-in-sws t c-is-sws t) 4610 4611 (face font-lock-constant-face fontified t c-is-sws t) 4611 4613 (face font-lock-constant-face fontified t) 4613 4638 (fontified t) 4638 4640 (face font-lock-keyword-face fontified t) 4640 4670 (fontified t) 4670 4673 (face font-lock-constant-face fontified t) 4673 4718 (fontified t) 4718 4737 (face font-lock-string-face fontified t) 4737 4741 (fontified t) 4741 4745 (face font-lock-string-face fontified t) 4745 4751 (fontified t) 4751 4755 (face font-lock-keyword-face fontified t) 4755 4756 (fontified t) 4756 4758 (face font-lock-keyword-face fontified t) 4758 4788 (fontified t) 4788 4791 (face font-lock-constant-face fontified t) 4791 4850 (fontified t) 4850 4869 (face font-lock-string-face fontified t) 4869 4891 (fontified t) 4891 4895 (face font-lock-string-face fontified t) 4895 4901 (fontified t) 4901 4905 (face font-lock-keyword-face fontified t) 4905 4906 (fontified t) 4906 4908 (face font-lock-keyword-face fontified t) 4908 4934 (fontified t) 4934 4937 (face font-lock-constant-face fontified t) 4937 4952 (fontified t) 4952 4996 (fontified t) 4996 5025 (face font-lock-string-face fontified t) 5025 5026 (fontified t) 5026 5031 (fontified t) 5031 5033 (face font-lock-keyword-face fontified t) 5033 5094 (fontified t) 5094 5099 (face font-lock-constant-face fontified t) 5099 5144 (fontified t) 5144 5148 (face font-lock-keyword-face fontified t) 5148 5196 (fontified t) 5196 5200 (face font-lock-keyword-face fontified t) 5200 5201 (fontified t) 5201 5203 (face font-lock-keyword-face fontified t) 5203 5231 (fontified t) 5231 5234 (face font-lock-constant-face fontified t) 5234 5279 (fontified t) 5279 5303 (face font-lock-string-face fontified t) 5303 5321 (fontified t) 5321 5325 (face font-lock-string-face fontified t) 5325 5331 (fontified t) 5331 5333 (face font-lock-keyword-face fontified t) 5333 5398 (fontified t) 5398 5403 (face font-lock-constant-face fontified t) 5403 5440 (fontified t) 5440 5441 (fontified t) 5441 5444 (fontified t) 5450 5454 (face font-lock-keyword-face) 5504 5508 (face font-lock-keyword-face) 5509 5511 (face font-lock-keyword-face) 5548 5552 (face font-lock-keyword-face) 5559 5562 (face font-lock-constant-face) 5572 5576 (face font-lock-string-face) 5578 5581 (face font-lock-comment-delimiter-face) 5581 5631 (face font-lock-comment-face) 5637 5639 (face font-lock-keyword-face) 5641 5642 (face font-lock-negation-char-face) 5659 5662 (face font-lock-keyword-face) 5664 5666 (face font-lock-type-face) 5666 5667 (face font-lock-type-face c-type c-decl-id-start) 5668 5669 (face font-lock-variable-name-face) 5709 5712 (face font-lock-constant-face) 5735 5741 (c-is-sws t c-in-sws t) 5741 5742 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 5742 5744 (c-in-sws t face font-lock-comment-delimiter-face) 5744 5753 (c-in-sws t face font-lock-comment-face) 5753 5759 (c-in-sws t c-is-sws t) 5759 5760 (c-is-sws t) 5772 5778 (c-is-sws t c-in-sws t) 5778 5779 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 5779 5781 (c-in-sws t face font-lock-comment-delimiter-face) 5781 5793 (c-in-sws t face font-lock-comment-face) 5793 5799 (c-in-sws t c-is-sws t) 5799 5800 (c-is-sws t) 5830 5836 (c-is-sws t c-in-sws t) 5836 5837 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 5837 5839 (c-in-sws t face font-lock-comment-delimiter-face) 5839 5851 (c-in-sws t face font-lock-comment-face) 5851 5857 (c-in-sws t c-is-sws t) 5857 5858 (c-is-sws t)) . 1) (undo-tree-id549 . -33) (undo-tree-id550 . -4289) (undo-tree-id551 . 1969) (undo-tree-id552 . -4197) (undo-tree-id553 . -4105) (undo-tree-id554 . -4023) (undo-tree-id555 . -4248) (undo-tree-id556 . -4156) (undo-tree-id557 . -4167) (undo-tree-id558 . -4072) (undo-tree-id559 . -3458) (undo-tree-id560 . -3856) (undo-tree-id561 . -3856) (undo-tree-id562 . 1969) (undo-tree-id563 . -3831) (undo-tree-id564 . -3856) (undo-tree-id565 . -3856) (undo-tree-id566 . -3856) (undo-tree-id567 . -3856) (undo-tree-id568 . -3856) (undo-tree-id569 . -3856) (undo-tree-id570 . -3856) 3857) nil (26692 28523 154307 729000) 0 nil])
([nil nil ((4474 . 4479) (4472 . 4474) (4471 . 4472) (t 26692 28523 159979 729000)) nil (26692 28536 574280 16000) 0 nil])
([nil nil ((1 . 5941) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {

  std::cout << left_margin
            << corner_tl + \"────────────────────────────────\" + corner_tr
            << '\\n';
  std::cout << left_margin
            << vertical + \"          OPTIONS           \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \"Press 1. for 5 letter Wordle\" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \"Press 2. for 6 letter Wordle\" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \"Press 3. for 7 letter Wordle\" + vertical << '\\n';

  std::cout << left_margin
            << corner_bl + \"────────────────────────────────\" + corner_br << '\\n';
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 881 882 (category c-<-as-paren-syntax) 893 894 (category c->-as-paren-syntax) 2638 2639 (category c-<-as-paren-syntax) 2650 2651 (category c-<-as-paren-syntax) 2662 2663 (category c->-as-paren-syntax) 2663 2664 (category c->-as-paren-syntax) 3458 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3833 (fontified t) 3833 3836 (face font-lock-constant-face fontified t) 3836 3885 (fontified t) 3885 3919 (face font-lock-string-face fontified t) 3919 3947 (fontified t) 3947 3951 (face font-lock-string-face fontified t) 3951 3955 (fontified t) 3955 3958 (face font-lock-constant-face fontified t) 3958 4006 (fontified t) 4006 4036 (face font-lock-string-face fontified t) 4036 4051 (fontified t) 4051 4055 (face font-lock-string-face fontified t) 4055 4059 (fontified t) 4059 4062 (face font-lock-constant-face fontified t) 4062 4110 (fontified t) 4110 4140 (face font-lock-string-face fontified t) 4140 4155 (fontified t) 4155 4159 (face font-lock-string-face fontified t) 4159 4163 (fontified t) 4163 4166 (face font-lock-constant-face fontified t) 4166 4214 (fontified t) 4214 4244 (face font-lock-string-face fontified t) 4244 4259 (fontified t) 4259 4263 (face font-lock-string-face fontified t) 4263 4267 (fontified t) 4267 4270 (face font-lock-constant-face fontified t) 4270 4318 (fontified t) 4318 4348 (face font-lock-string-face fontified t) 4348 4363 (fontified t) 4363 4367 (face font-lock-string-face fontified t) 4367 4370 (fontified t) 4370 4372 (fontified t) 4372 4375 (face font-lock-constant-face fontified t) 4375 4424 (fontified t) 4424 4458 (face font-lock-string-face fontified t) 4458 4470 (fontified t) 4470 4471 (fontified t) 4471 4472 (fontified t) 4472 4473 (fontified t) 4473 4474 (fontified t) 4474 4475 (face font-lock-string-face fontified t) 4475 4476 (face font-lock-string-face fontified t) 4476 4477 (face font-lock-string-face fontified t) 4477 4478 (face font-lock-string-face fontified t) 4478 4479 (fontified t) 4479 4480 (fontified t) 4480 4483 (fontified t) 4483 4486 (face font-lock-type-face fontified t) 4486 4487 (face font-lock-type-face c-type c-decl-id-start fontified t) 4487 4488 (fontified t) 4488 4499 (face font-lock-function-name-face fontified t) 4499 4500 (c-type c-decl-arg-start fontified t) 4500 4503 (face font-lock-constant-face fontified t) 4503 4505 (fontified t) 4505 4511 (face font-lock-type-face fontified t) 4511 4512 (fontified t category c-<-as-paren-syntax) 4512 4515 (face font-lock-constant-face fontified t) 4515 4517 (fontified t) 4517 4523 (face font-lock-type-face fontified t) 4523 4524 (fontified t category c-<-as-paren-syntax) 4524 4527 (face font-lock-constant-face fontified t) 4527 4535 (fontified t) 4535 4536 (fontified t category c->-as-paren-syntax) 4536 4537 (fontified t category c->-as-paren-syntax) 4537 4538 (fontified t) 4538 4551 (face font-lock-variable-name-face fontified t) 4551 4552 (c-type c-decl-arg-start fontified t) 4552 4570 (fontified t) 4570 4573 (face font-lock-type-face fontified t) 4573 4574 (fontified t) 4574 4589 (face font-lock-variable-name-face fontified t) 4589 4612 (fontified t) 4612 4614 (fontified t c-is-sws t c-in-sws t) 4614 4615 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4615 4617 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4617 4628 (face font-lock-comment-face fontified t c-in-sws t) 4628 4630 (fontified t c-in-sws t c-is-sws t) 4630 4631 (face font-lock-constant-face fontified t c-is-sws t) 4631 4633 (face font-lock-constant-face fontified t) 4633 4658 (fontified t) 4658 4660 (face font-lock-keyword-face fontified t) 4660 4690 (fontified t) 4690 4693 (face font-lock-constant-face fontified t) 4693 4738 (fontified t) 4738 4757 (face font-lock-string-face fontified t) 4757 4761 (fontified t) 4761 4765 (face font-lock-string-face fontified t) 4765 4771 (fontified t) 4771 4775 (face font-lock-keyword-face fontified t) 4775 4776 (fontified t) 4776 4778 (face font-lock-keyword-face fontified t) 4778 4808 (fontified t) 4808 4811 (face font-lock-constant-face fontified t) 4811 4870 (fontified t) 4870 4889 (face font-lock-string-face fontified t) 4889 4911 (fontified t) 4911 4915 (face font-lock-string-face fontified t) 4915 4921 (fontified t) 4921 4925 (face font-lock-keyword-face fontified t) 4925 4926 (fontified t) 4926 4928 (face font-lock-keyword-face fontified t) 4928 4954 (fontified t) 4954 4957 (face font-lock-constant-face fontified t) 4957 4966 (fontified t) 4966 4999 (fontified t) 4999 5016 (fontified t) 5016 5045 (face font-lock-string-face fontified t) 5045 5051 (fontified t) 5051 5053 (face font-lock-keyword-face fontified t) 5053 5114 (fontified t) 5114 5119 (face font-lock-constant-face fontified t) 5119 5164 (fontified t) 5164 5168 (face font-lock-keyword-face fontified t) 5168 5216 (fontified t) 5216 5220 (face font-lock-keyword-face fontified t) 5220 5221 (fontified t) 5221 5223 (face font-lock-keyword-face fontified t) 5223 5251 (fontified t) 5251 5254 (face font-lock-constant-face fontified t) 5254 5299 (fontified t) 5299 5323 (face font-lock-string-face fontified t) 5323 5341 (fontified t) 5341 5345 (face font-lock-string-face fontified t) 5345 5351 (fontified t) 5351 5353 (face font-lock-keyword-face fontified t) 5353 5418 (fontified t) 5418 5423 (face font-lock-constant-face fontified t) 5423 5470 (fontified t) 5470 5474 (face font-lock-keyword-face fontified t) 5474 5524 (fontified t) 5524 5528 (face font-lock-keyword-face fontified t) 5528 5529 (fontified t) 5529 5531 (face font-lock-keyword-face fontified t) 5531 5568 (fontified t) 5568 5572 (face font-lock-keyword-face fontified t) 5572 5579 (fontified t) 5579 5582 (face font-lock-constant-face fontified t) 5582 5592 (fontified t) 5592 5596 (face font-lock-string-face fontified t) 5596 5598 (fontified t) 5598 5601 (face font-lock-comment-delimiter-face fontified t) 5601 5651 (face font-lock-comment-face fontified t) 5651 5657 (fontified t) 5657 5659 (face font-lock-keyword-face fontified t) 5659 5661 (fontified t) 5661 5662 (face font-lock-negation-char-face fontified t) 5662 5679 (fontified t) 5679 5682 (face font-lock-keyword-face fontified t) 5682 5684 (fontified t) 5684 5686 (face font-lock-type-face fontified t) 5686 5687 (face font-lock-type-face c-type c-decl-id-start fontified t) 5687 5688 (fontified t) 5688 5689 (face font-lock-variable-name-face fontified t) 5689 5729 (fontified t) 5729 5732 (face font-lock-constant-face fontified t) 5732 5755 (fontified t) 5755 5761 (fontified t c-is-sws t c-in-sws t) 5761 5762 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5762 5764 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5764 5773 (face font-lock-comment-face fontified t c-in-sws t) 5773 5779 (fontified t c-in-sws t c-is-sws t) 5779 5780 (fontified t c-is-sws t) 5780 5792 (fontified t) 5792 5798 (fontified t c-is-sws t c-in-sws t) 5798 5799 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5799 5801 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5801 5813 (face font-lock-comment-face fontified t c-in-sws t) 5813 5819 (fontified t c-in-sws t c-is-sws t) 5819 5820 (fontified t c-is-sws t) 5820 5850 (fontified t) 5850 5856 (fontified t c-is-sws t c-in-sws t) 5856 5857 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5857 5859 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5859 5871 (face font-lock-comment-face fontified t c-in-sws t) 5871 5877 (fontified t c-in-sws t c-is-sws t) 5877 5878 (fontified t c-is-sws t) 5878 5893 (fontified t) 5893 5928 (fontified t)) . 1) (undo-tree-id571 . -33) (undo-tree-id572 . -4289) (undo-tree-id573 . 1450) (undo-tree-id574 . -3458) (undo-tree-id575 . -4477) (undo-tree-id576 . -4477) (undo-tree-id577 . -4197) (undo-tree-id578 . -4105) (undo-tree-id579 . -4023) (undo-tree-id580 . -4248) (undo-tree-id581 . -4156) (undo-tree-id582 . -4167) (undo-tree-id583 . -4072) (undo-tree-id584 . 1450) (undo-tree-id585 . -4477) (undo-tree-id586 . -4397) (undo-tree-id587 . -4477) (undo-tree-id588 . -4477) (undo-tree-id589 . -4477) (undo-tree-id590 . -4477) (undo-tree-id591 . -4477) (undo-tree-id592 . -4477) (undo-tree-id593 . -4477) (undo-tree-id594 . -4477) (undo-tree-id595 . -4477) (undo-tree-id596 . -4477) (undo-tree-id597 . -4477) (undo-tree-id598 . -3458) 4478) nil (26692 28536 574277 434000) 0 nil])
([nil nil ((3856 . 3857) (3847 . 3856) (#("'" 0 1 (face font-lock-string-face fontified t)) . -3847) (undo-tree-id622 . -1) (undo-tree-id623 . -1) 3848 (3847 . 3848) (#("
" 0 1 (face font-lock-warning-face fontified t)) . -3847) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#(" " 0 1 (fontified t)) . -3848) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (#(" " 0 1 (fontified t)) . -3849) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#(" " 0 1 (fontified t)) . -3850) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (#(" " 0 1 (fontified t)) . -3851) (undo-tree-id632 . -1) (undo-tree-id633 . -1) 3852 (3847 . 3852) (3845 . 3847) (3843 . 3845) (3838 . 3843) (3831 . 3833) (#(" " 0 1 (fontified nil)) . 3831) (3836 . 3837) (3831 . 3832) (#("  " 0 2 (fontified nil)) . 3831) (undo-tree-id634 . -2) (3836 . 3837) (3833 . 3836) (3831 . 3833) (t 26692 28536 579979 678000)) nil (26692 28633 748815 168000) 0 nil])
([nil nil ((4166 . 4167)) nil (26692 28633 748811 141000) 0 nil])
([nil nil ((4271 . 4272)) nil (26692 28633 748810 959000) 0 nil])
([nil nil ((4376 . 4377)) nil (26692 28633 748810 780000) 0 nil])
([nil nil ((4061 . 4062)) nil (26692 28633 748810 587000) 0 nil])
([nil nil ((4034 . 4035)) nil (26692 28633 748810 387000) 0 nil])
([nil nil ((4140 . 4141)) nil (26692 28633 748810 160000) 0 nil])
([nil nil ((4246 . 4247)) nil (26692 28633 748809 968000) 0 nil])
([nil nil ((4352 . 4353)) nil (26692 28633 748809 760000) 0 nil])
([nil nil ((#("─" 0 1 (face font-lock-string-face fontified t)) . 4489)) nil (26692 28633 748809 529000) 0 nil])
([nil nil ((#("─" 0 1 (face font-lock-string-face fontified t)) . 4489)) nil (26692 28633 748809 181000) 0 nil])
([nil nil ((#("─" 0 1 (face font-lock-string-face fontified t)) . 4489)) nil (26692 28633 748808 983000) 0 nil])
([nil nil ((#("─" 0 1 (face font-lock-string-face fontified t)) . 3942)) nil (26692 28633 748808 712000) 0 nil])
([nil nil ((#("─" 0 1 (face font-lock-string-face fontified t)) . 3942)) nil (26692 28633 748808 492000) 0 nil])
([nil nil ((#("─" 0 1 (face font-lock-string-face fontified t)) . 3942)) nil (26692 28687 786179 669000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3942 . 3943) (nil fontified nil 3942 . 3943) (3942 . 3943) 3941) nil (26692 28696 99369 951000) 0 nil] [nil nil ((1 . 5945) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {
  std::cout << \"\\n\\n\\n\\n\";
  std::cout << left_margin
            << corner_tl + \"─────────────────────────────\" + corner_tr
            << '\\n';
  std::cout << left_margin
            << vertical + \"           OPTIONS            \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 1. for 5 letter Wordle \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 2. for 6 letter Wordle \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 3. for 7 letter Wordle \" + vertical << '\\n';

  std::cout << left_margin
            << corner_bl + \"─────────────────────────────\" + corner_br
            << '\\n';
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 33 (c-in-sws t face font-lock-string-face fontified t) 33 34 (c-in-sws t fontified t) 34 35 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 35 42 (c-in-sws t face font-lock-preprocessor-face fontified t) 42 43 (c-in-sws t fontified t) 43 64 (c-in-sws t face font-lock-string-face fontified t) 64 65 (c-in-sws t fontified t) 65 66 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 66 73 (c-in-sws t face font-lock-preprocessor-face fontified t) 73 74 (c-in-sws t fontified t) 74 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 135 (c-in-sws t face font-lock-string-face fontified t) 135 136 (c-in-sws t fontified t) 136 137 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 137 144 (c-in-sws t face font-lock-preprocessor-face fontified t) 144 145 (c-in-sws t fontified t) 145 146 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 146 149 (c-in-sws t face font-lock-string-face fontified t) 149 150 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 150 151 (c-in-sws t fontified t) 151 152 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 152 159 (c-in-sws t face font-lock-preprocessor-face fontified t) 159 160 (c-in-sws t fontified t) 160 161 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 161 169 (c-in-sws t face font-lock-string-face fontified t) 169 170 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 170 171 (c-in-sws t fontified t) 171 172 (c-is-sws t c-in-sws t fontified t) 172 173 (c-is-sws t face font-lock-keyword-face fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 181 (face font-lock-constant-face fontified t) 181 183 (fontified t) 183 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 190 (fontified t) 190 198 (face font-lock-variable-name-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-string-face fontified t) 204 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 215 (face font-lock-constant-face fontified t) 215 217 (fontified t) 217 222 (face font-lock-type-face fontified t) 222 223 (face font-lock-type-face c-type c-decl-id-start fontified t) 223 224 (fontified t) 224 234 (face font-lock-variable-name-face fontified t) 234 237 (fontified t) 237 240 (face font-lock-string-face fontified t) 240 243 (fontified t) 243 244 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 244 245 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 245 386 (c-in-sws t face font-lock-comment-face fontified t) 386 420 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 420 421 (c-in-sws t fontified t) 421 422 (c-is-sws t face font-lock-keyword-face fontified t) 422 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 430 (face font-lock-constant-face fontified t) 430 432 (fontified t) 432 437 (face font-lock-type-face fontified t) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified t) 438 439 (fontified t) 439 448 (face font-lock-variable-name-face fontified t) 448 451 (fontified t) 451 454 (face font-lock-string-face fontified t) 454 455 (fontified t) 455 456 (c-is-sws t c-in-sws t fontified t) 456 457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 457 459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 459 468 (c-in-sws t face font-lock-comment-face fontified t) 468 469 (c-is-sws t face font-lock-keyword-face fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (fontified t) 474 477 (face font-lock-constant-face fontified t) 477 479 (fontified t) 479 484 (face font-lock-type-face fontified t) 484 485 (face font-lock-type-face c-type c-decl-id-start fontified t) 485 486 (fontified t) 486 495 (face font-lock-variable-name-face fontified t) 495 498 (fontified t) 498 501 (face font-lock-string-face fontified t) 501 503 (fontified t) 503 508 (face font-lock-keyword-face fontified t) 508 509 (fontified t) 509 512 (face font-lock-constant-face fontified t) 512 514 (fontified t) 514 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face c-type c-decl-id-start fontified t) 520 521 (fontified t) 521 530 (face font-lock-variable-name-face fontified t) 530 533 (fontified t) 533 536 (face font-lock-string-face fontified t) 536 538 (fontified t) 538 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 554 (face font-lock-type-face fontified t) 554 555 (face font-lock-type-face c-type c-decl-id-start fontified t) 555 556 (fontified t) 556 565 (face font-lock-variable-name-face fontified t) 565 568 (fontified t) 568 571 (face font-lock-string-face fontified t) 571 573 (fontified t) 573 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-constant-face fontified t) 582 584 (fontified t) 584 589 (face font-lock-type-face fontified t) 589 590 (face font-lock-type-face c-type c-decl-id-start fontified t) 590 591 (fontified t) 591 600 (face font-lock-variable-name-face fontified t) 600 603 (fontified t) 603 606 (face font-lock-string-face fontified t) 606 608 (fontified t) 608 613 (face font-lock-keyword-face fontified t) 613 614 (fontified t) 614 617 (face font-lock-constant-face fontified t) 617 619 (fontified t) 619 624 (face font-lock-type-face fontified t) 624 625 (face font-lock-type-face c-type c-decl-id-start fontified t) 625 626 (fontified t) 626 635 (face font-lock-variable-name-face fontified t) 635 638 (fontified t) 638 641 (face font-lock-string-face fontified t) 641 643 (fontified t) 643 648 (face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (face font-lock-constant-face fontified t) 652 654 (fontified t) 654 659 (face font-lock-type-face fontified t) 659 660 (face font-lock-type-face c-type c-decl-id-start fontified t) 660 661 (fontified t) 661 670 (face font-lock-variable-name-face fontified t) 670 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 678 (fontified t) 678 683 (face font-lock-keyword-face fontified t) 683 684 (fontified t) 684 687 (face font-lock-constant-face fontified t) 687 689 (fontified t) 689 694 (face font-lock-type-face fontified t) 694 695 (face font-lock-type-face c-type c-decl-id-start fontified t) 695 696 (fontified t) 696 708 (face font-lock-variable-name-face fontified t) 708 711 (fontified t) 711 714 (face font-lock-string-face fontified t) 714 716 (fontified t) 716 721 (face font-lock-keyword-face fontified t) 721 722 (fontified t) 722 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 732 (face font-lock-type-face fontified t) 732 733 (face font-lock-type-face c-type c-decl-id-start fontified t) 733 734 (fontified t) 734 748 (face font-lock-variable-name-face fontified t) 748 751 (fontified t) 751 754 (face font-lock-string-face fontified t) 754 756 (fontified t) 756 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 765 (face font-lock-constant-face fontified t) 765 767 (fontified t) 767 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 788 (face font-lock-variable-name-face fontified t) 788 791 (fontified t) 791 794 (face font-lock-string-face fontified t) 794 797 (fontified t) 797 799 (face font-lock-type-face fontified t) 799 800 (face font-lock-type-face c-type c-decl-id-start fontified t) 800 801 (fontified t) 801 826 (face font-lock-variable-name-face fontified t) 826 832 (fontified t) 832 834 (face font-lock-type-face fontified t) 834 835 (face font-lock-type-face c-type c-decl-id-start fontified t) 835 836 (fontified t) 836 863 (face font-lock-variable-name-face fontified t) 863 870 (fontified t) 870 873 (face font-lock-constant-face fontified t) 873 875 (fontified t) 875 881 (face font-lock-type-face fontified t) 881 882 (fontified t category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face fontified t) 885 887 (fontified t) 887 893 (face font-lock-type-face fontified t) 893 894 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 894 895 (fontified t) 895 899 (face font-lock-variable-name-face fontified t) 899 903 (fontified t) 903 906 (face font-lock-string-face fontified t) 906 908 (fontified t) 908 911 (face font-lock-string-face fontified t) 911 913 (fontified t) 913 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 921 (face font-lock-string-face fontified t) 921 923 (fontified t) 923 926 (face font-lock-string-face fontified t) 926 928 (fontified t) 928 931 (face font-lock-string-face fontified t) 931 933 (fontified t) 933 936 (face font-lock-string-face fontified t) 936 938 (fontified t) 938 941 (face font-lock-string-face fontified t) 941 943 (fontified t) 943 946 (face font-lock-string-face fontified t) 946 981 (fontified t) 981 984 (face font-lock-string-face fontified t) 984 986 (fontified t) 986 989 (face font-lock-string-face fontified t) 989 991 (fontified t) 991 994 (face font-lock-string-face fontified t) 994 996 (fontified t) 996 999 (face font-lock-string-face fontified t) 999 1001 (fontified t) 1001 1004 (face font-lock-string-face fontified t) 1004 1006 (fontified t) 1006 1009 (face font-lock-string-face fontified t) 1009 1011 (fontified t) 1011 1014 (face font-lock-string-face fontified t) 1014 1016 (fontified t) 1016 1019 (face font-lock-string-face fontified t) 1019 1021 (fontified t) 1021 1024 (face font-lock-string-face fontified t) 1024 1059 (fontified t) 1059 1062 (face font-lock-string-face fontified t) 1062 1064 (fontified t) 1064 1067 (face font-lock-string-face fontified t) 1067 1069 (fontified t) 1069 1072 (face font-lock-string-face fontified t) 1072 1074 (fontified t) 1074 1077 (face font-lock-string-face fontified t) 1077 1079 (fontified t) 1079 1082 (face font-lock-string-face fontified t) 1082 1084 (fontified t) 1084 1087 (face font-lock-string-face fontified t) 1087 1089 (fontified t) 1089 1092 (face font-lock-string-face fontified t) 1092 1094 (fontified t) 1094 1097 (face font-lock-string-face fontified t) 1097 1100 (fontified t) 1100 1103 (face font-lock-constant-face fontified t) 1103 1105 (fontified t) 1105 1110 (face font-lock-type-face fontified t) 1110 1111 (face font-lock-type-face c-type c-decl-id-start fontified t) 1111 1112 (fontified t) 1112 1122 (face font-lock-variable-name-face fontified t) 1122 1125 (fontified t) 1125 1153 (face font-lock-string-face fontified t) 1153 1156 (fontified t) 1156 1159 (face font-lock-type-face fontified t) 1159 1160 (face font-lock-type-face c-type c-decl-id-start fontified t) 1160 1161 (fontified t) 1161 1171 (face font-lock-function-name-face fontified t) 1171 1172 (c-type c-decl-arg-start fontified t) 1172 1175 (face font-lock-constant-face fontified t) 1175 1177 (fontified t) 1177 1183 (face font-lock-type-face fontified t) 1183 1184 (fontified t) 1184 1190 (face font-lock-variable-name-face fontified t) 1190 1191 (c-type c-decl-arg-start fontified t) 1191 1192 (fontified t) 1192 1195 (face font-lock-constant-face fontified t) 1195 1197 (fontified t) 1197 1203 (face font-lock-type-face fontified t) 1203 1204 (fontified t) 1204 1209 (face font-lock-variable-name-face fontified t) 1209 1215 (fontified t) 1215 1218 (face font-lock-keyword-face fontified t) 1218 1220 (fontified t) 1220 1222 (face font-lock-type-face fontified t) 1222 1223 (face font-lock-type-face c-type c-decl-id-start fontified t) 1223 1224 (fontified t) 1224 1225 (face font-lock-variable-name-face fontified t) 1225 1250 (fontified t) 1250 1252 (face font-lock-keyword-face fontified t) 1252 1254 (fontified t) 1254 1257 (face font-lock-constant-face fontified t) 1257 1319 (fontified t) 1319 1322 (face font-lock-constant-face fontified t) 1322 1371 (fontified t) 1371 1374 (face font-lock-type-face fontified t) 1374 1375 (face font-lock-type-face c-type c-decl-id-start fontified t) 1375 1376 (fontified t) 1376 1390 (face font-lock-function-name-face fontified t) 1390 1397 (fontified t) 1397 1400 (face font-lock-constant-face fontified t) 1400 1444 (fontified t) 1444 1447 (face font-lock-string-face fontified t) 1447 1475 (fontified t) 1475 1498 (face font-lock-string-face fontified t) 1498 1500 (fontified t) 1500 1512 (fontified t) 1512 1514 (fontified t) 1514 1517 (face font-lock-constant-face fontified t) 1517 1527 (fontified t) 1527 1531 (face font-lock-string-face fontified t) 1531 1569 (fontified t) 1569 1572 (face font-lock-string-face fontified t) 1572 1587 (fontified t) 1587 1590 (face font-lock-string-face fontified t) 1590 1594 (fontified t) 1594 1597 (face font-lock-keyword-face fontified t) 1597 1599 (fontified t) 1599 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face c-type c-decl-id-start fontified t) 1602 1603 (fontified t) 1603 1604 (face font-lock-variable-name-face fontified t) 1604 1629 (fontified t) 1629 1631 (face font-lock-keyword-face fontified t) 1631 1650 (fontified t) 1650 1653 (face font-lock-constant-face fontified t) 1653 1675 (fontified t) 1675 1679 (face font-lock-string-face fontified t) 1679 1687 (fontified t) 1687 1690 (face font-lock-constant-face fontified t) 1690 1734 (fontified t) 1734 1737 (face font-lock-string-face fontified t) 1737 1752 (fontified t) 1752 1756 (face font-lock-string-face fontified t) 1756 1765 (fontified t) 1765 1769 (face font-lock-keyword-face fontified t) 1769 1770 (fontified t) 1770 1772 (face font-lock-keyword-face fontified t) 1772 1791 (fontified t) 1791 1794 (face font-lock-constant-face fontified t) 1794 1804 (fontified t) 1804 1807 (face font-lock-string-face fontified t) 1807 1822 (fontified t) 1822 1826 (face font-lock-string-face fontified t) 1826 1834 (fontified t) 1834 1837 (face font-lock-constant-face fontified t) 1837 1881 (fontified t) 1881 1884 (face font-lock-string-face fontified t) 1884 1899 (fontified t) 1899 1905 (face font-lock-string-face fontified t) 1905 1917 (fontified t) 1917 1920 (face font-lock-constant-face fontified t) 1920 1941 (fontified t) 1941 1944 (face font-lock-string-face fontified t) 1944 1952 (fontified t) 1952 1955 (face font-lock-constant-face fontified t) 1955 1965 (fontified t) 1965 1970 (face font-lock-string-face fontified t) 1970 1985 (fontified t) 1985 1989 (face font-lock-string-face fontified t) 1989 1993 (fontified t) 1993 1996 (face font-lock-constant-face fontified t) 1996 2040 (fontified t) 2040 2043 (face font-lock-string-face fontified t) 2043 2071 (fontified t) 2071 2094 (face font-lock-string-face fontified t) 2094 2110 (fontified t) 2110 2114 (face font-lock-string-face fontified t) 2114 2119 (fontified t) 2119 2122 (face font-lock-type-face fontified t) 2122 2123 (face font-lock-type-face c-type c-decl-id-start fontified t) 2123 2124 (fontified t) 2124 2132 (face font-lock-function-name-face fontified t) 2132 2133 (c-type c-decl-arg-start fontified t) 2133 2136 (face font-lock-type-face fontified t) 2136 2137 (fontified t) 2137 2138 (face font-lock-variable-name-face fontified t) 2138 2144 (fontified t) 2144 2147 (face font-lock-keyword-face fontified t) 2147 2149 (fontified t) 2149 2151 (face font-lock-type-face fontified t) 2151 2152 (face font-lock-type-face c-type c-decl-id-start fontified t) 2152 2153 (fontified t) 2153 2154 (face font-lock-variable-name-face fontified t) 2154 2188 (fontified t) 2188 2194 (face font-lock-keyword-face fontified t) 2194 2222 (fontified t) 2222 2226 (face font-lock-keyword-face fontified t) 2226 2228 (fontified t) 2228 2229 (c-type c-decl-end fontified t) 2229 2236 (fontified t) 2236 2239 (face font-lock-constant-face fontified t) 2239 2267 (fontified t) 2267 2272 (face font-lock-string-face fontified t) 2272 2300 (fontified t) 2300 2305 (face font-lock-keyword-face fontified t) 2305 2311 (fontified t) 2311 2315 (face font-lock-keyword-face fontified t) 2315 2317 (fontified t) 2317 2318 (c-type c-decl-end fontified t) 2318 2325 (fontified t) 2325 2328 (face font-lock-constant-face fontified t) 2328 2356 (fontified t) 2356 2361 (face font-lock-string-face fontified t) 2361 2390 (fontified t) 2390 2395 (face font-lock-keyword-face fontified t) 2395 2401 (fontified t) 2401 2405 (face font-lock-keyword-face fontified t) 2405 2407 (fontified t) 2407 2408 (c-type c-decl-end fontified t) 2408 2415 (fontified t) 2415 2418 (face font-lock-constant-face fontified t) 2418 2446 (fontified t) 2446 2451 (face font-lock-string-face fontified t) 2451 2478 (fontified t) 2478 2483 (face font-lock-keyword-face fontified t) 2483 2489 (fontified t) 2489 2496 (face font-lock-keyword-face fontified t) 2496 2497 (c-type c-decl-end fontified t) 2497 2504 (fontified t) 2504 2507 (face font-lock-constant-face fontified t) 2507 2529 (fontified t) 2529 2534 (face font-lock-string-face fontified t) 2534 2560 (fontified t) 2560 2563 (face font-lock-constant-face fontified t) 2563 2573 (fontified t) 2573 2577 (face font-lock-string-face fontified t) 2577 2581 (fontified t) 2581 2584 (face font-lock-constant-face fontified t) 2584 2610 (fontified t) 2610 2613 (face font-lock-type-face fontified t) 2613 2614 (face font-lock-type-face c-type c-decl-id-start fontified t) 2614 2615 (fontified t) 2615 2626 (face font-lock-function-name-face fontified t) 2626 2627 (c-type c-decl-arg-start fontified t) 2627 2630 (face font-lock-constant-face fontified t) 2630 2632 (fontified t) 2632 2638 (face font-lock-type-face fontified t) 2638 2639 (fontified t category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face fontified t) 2642 2644 (fontified t) 2644 2650 (face font-lock-type-face fontified t) 2650 2651 (fontified t category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face fontified t) 2654 2656 (fontified t) 2656 2662 (face font-lock-type-face fontified t) 2662 2663 (fontified t category c->-as-paren-syntax) 2663 2664 (fontified t category c->-as-paren-syntax) 2664 2665 (fontified t) 2665 2678 (face font-lock-variable-name-face fontified t) 2678 2679 (c-type c-decl-arg-start fontified t) 2679 2680 (fontified t) 2680 2683 (face font-lock-type-face fontified t) 2683 2684 (fontified t) 2684 2685 (face font-lock-variable-name-face fontified t) 2685 2692 (fontified t) 2692 2695 (face font-lock-keyword-face fontified t) 2695 2697 (fontified t) 2697 2699 (face font-lock-type-face fontified t) 2699 2700 (face font-lock-type-face c-type c-decl-id-start fontified t) 2700 2701 (fontified t) 2701 2702 (face font-lock-variable-name-face fontified t) 2702 2736 (fontified t) 2736 2739 (face font-lock-constant-face fontified t) 2739 2741 (fontified t) 2741 2746 (face font-lock-type-face fontified t) 2746 2747 (face font-lock-type-face c-type c-decl-id-start fontified t) 2747 2748 (fontified t) 2748 2752 (face font-lock-variable-name-face fontified t) 2752 2780 (fontified t) 2780 2786 (face font-lock-keyword-face fontified t) 2786 2814 (fontified t) 2814 2818 (face font-lock-keyword-face fontified t) 2818 2820 (fontified t) 2820 2821 (c-type c-decl-end fontified t) 2821 2828 (fontified t) 2828 2831 (face font-lock-constant-face fontified t) 2831 2847 (fontified t) 2847 2851 (face font-lock-string-face fontified t) 2851 2870 (fontified t) 2870 2873 (face font-lock-string-face fontified t) 2873 2884 (fontified t) 2884 2888 (face font-lock-string-face fontified t) 2888 2935 (fontified t) 2935 2940 (face font-lock-keyword-face fontified t) 2940 2946 (fontified t) 2946 2950 (face font-lock-keyword-face fontified t) 2950 2952 (fontified t) 2952 2953 (c-type c-decl-end fontified t) 2953 2960 (fontified t) 2960 2963 (face font-lock-constant-face fontified t) 2963 2979 (fontified t) 2979 2983 (face font-lock-string-face fontified t) 2983 3002 (fontified t) 3002 3005 (face font-lock-string-face fontified t) 3005 3012 (fontified t) 3012 3016 (fontified t) 3016 3020 (fontified t face font-lock-string-face) 3020 3031 (fontified t) 3031 3069 (fontified t) 3069 3074 (face font-lock-keyword-face fontified t) 3074 3080 (fontified t) 3080 3084 (face font-lock-keyword-face fontified t) 3084 3086 (fontified t) 3086 3087 (c-type c-decl-end fontified t) 3087 3094 (fontified t) 3094 3097 (face font-lock-constant-face fontified t) 3097 3113 (fontified t) 3113 3117 (face font-lock-string-face fontified t) 3117 3136 (fontified t) 3136 3139 (face font-lock-string-face fontified t) 3139 3150 (fontified t) 3150 3154 (face font-lock-string-face fontified t) 3154 3199 (fontified t) 3199 3204 (face font-lock-keyword-face fontified t) 3204 3210 (fontified t) 3210 3217 (face font-lock-keyword-face fontified t) 3217 3218 (c-type c-decl-end fontified t) 3218 3225 (fontified t) 3225 3228 (face font-lock-constant-face fontified t) 3228 3238 (fontified t) 3238 3242 (face font-lock-string-face fontified t) 3242 3261 (fontified t) 3261 3264 (face font-lock-string-face fontified t) 3264 3275 (fontified t) 3275 3279 (face font-lock-string-face fontified t) 3279 3293 (fontified t) 3293 3296 (face font-lock-constant-face fontified t) 3296 3306 (fontified t) 3306 3310 (face font-lock-string-face fontified t) 3310 3314 (fontified t) 3314 3317 (face font-lock-constant-face fontified t) 3317 3343 (fontified t) 3343 3346 (face font-lock-type-face fontified t) 3346 3347 (face font-lock-type-face c-type c-decl-id-start fontified t) 3347 3348 (fontified t) 3348 3359 (face font-lock-function-name-face fontified t) 3359 3360 (c-type c-decl-arg-start fontified t) 3360 3363 (face font-lock-type-face fontified t) 3363 3364 (fontified t) 3364 3365 (face font-lock-variable-name-face fontified t) 3365 3372 (fontified t) 3372 3375 (face font-lock-keyword-face fontified t) 3375 3377 (fontified t) 3377 3379 (face font-lock-type-face fontified t) 3379 3380 (face font-lock-type-face c-type c-decl-id-start fontified t) 3380 3381 (fontified t) 3381 3382 (face font-lock-variable-name-face fontified t) 3382 3416 (fontified t) 3416 3422 (face font-lock-keyword-face fontified t) 3422 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3830 (fontified t) 3830 3832 (fontified t) 3832 3833 (face font-lock-constant-face fontified t) 3833 3834 (face font-lock-constant-face fontified t) 3834 3835 (face font-lock-constant-face fontified t) 3835 3836 (fontified t) 3836 3837 (fontified t) 3837 3838 (fontified t) 3838 3839 (fontified t) 3839 3840 (fontified t) 3840 3841 (fontified t) 3841 3842 (fontified t) 3842 3843 (fontified t) 3843 3844 (fontified t) 3844 3845 (fontified t) 3845 3846 (face font-lock-string-face fontified t) 3846 3847 (face font-lock-string-face fontified t) 3847 3848 (face font-lock-string-face fontified t) 3848 3849 (face font-lock-string-face fontified t) 3849 3850 (face font-lock-string-face fontified t) 3850 3851 (face font-lock-string-face fontified t) 3851 3852 (face font-lock-string-face fontified t) 3852 3853 (face font-lock-string-face fontified t) 3853 3854 (face font-lock-string-face fontified t) 3854 3855 (face font-lock-string-face fontified t) 3855 3856 (fontified t) 3856 3857 (fontified t) 3857 3859 (fontified t c-in-sws t) 3859 3860 (face font-lock-constant-face fontified t c-is-sws t) 3860 3862 (face font-lock-constant-face fontified t) 3862 3883 (fontified t) 3883 3884 (fontified t) 3884 3911 (fontified t) 3911 3941 (face font-lock-string-face fontified t) 3941 3942 (face font-lock-string-face fontified t) 3942 3955 (fontified t) 3955 3970 (fontified t) 3970 3974 (face font-lock-string-face fontified t) 3974 3975 (fontified t) 3975 3978 (fontified t) 3978 3981 (face font-lock-constant-face fontified t) 3981 4029 (fontified t) 4029 4030 (face font-lock-string-face fontified t) 4030 4031 (face font-lock-string-face fontified t) 4031 4058 (face font-lock-string-face fontified t) 4058 4059 (face font-lock-string-face fontified t) 4059 4061 (face font-lock-string-face fontified t) 4061 4076 (fontified t) 4076 4080 (face font-lock-string-face fontified t) 4080 4082 (fontified t) 4082 4084 (fontified t) 4084 4087 (face font-lock-constant-face fontified t) 4087 4135 (fontified t) 4135 4136 (face font-lock-string-face fontified t) 4136 4137 (face font-lock-string-face fontified t) 4137 4165 (face font-lock-string-face fontified t) 4165 4166 (face font-lock-string-face fontified t) 4166 4167 (face font-lock-string-face fontified t) 4167 4182 (fontified t) 4182 4186 (face font-lock-string-face fontified t) 4186 4188 (fontified t) 4188 4190 (fontified t) 4190 4193 (face font-lock-constant-face fontified t) 4193 4241 (fontified t) 4241 4242 (face font-lock-string-face fontified t) 4242 4243 (face font-lock-string-face fontified t) 4243 4271 (face font-lock-string-face fontified t) 4271 4272 (face font-lock-string-face fontified t) 4272 4273 (face font-lock-string-face fontified t) 4273 4288 (fontified t) 4288 4292 (face font-lock-string-face fontified t) 4292 4294 (fontified t) 4294 4296 (fontified t) 4296 4299 (face font-lock-constant-face fontified t) 4299 4347 (fontified t) 4347 4348 (face font-lock-string-face fontified t) 4348 4349 (face font-lock-string-face fontified t) 4349 4377 (face font-lock-string-face fontified t) 4377 4378 (face font-lock-string-face fontified t) 4378 4379 (face font-lock-string-face fontified t) 4379 4394 (fontified t) 4394 4398 (face font-lock-string-face fontified t) 4398 4400 (fontified t) 4400 4403 (fontified t) 4403 4406 (face font-lock-constant-face fontified t) 4406 4455 (fontified t) 4455 4485 (face font-lock-string-face fontified t) 4485 4486 (face font-lock-string-face fontified t) 4486 4498 (fontified t) 4498 4499 (fontified t) 4499 4514 (fontified t) 4514 4518 (face font-lock-string-face fontified t) 4518 4523 (fontified t) 4523 4526 (face font-lock-type-face fontified t) 4526 4527 (face font-lock-type-face c-type c-decl-id-start fontified t) 4527 4528 (fontified t) 4528 4539 (face font-lock-function-name-face fontified t) 4539 4540 (c-type c-decl-arg-start fontified t) 4540 4543 (face font-lock-constant-face fontified t) 4543 4545 (fontified t) 4545 4551 (face font-lock-type-face fontified t) 4551 4552 (fontified t category c-<-as-paren-syntax) 4552 4555 (face font-lock-constant-face fontified t) 4555 4557 (fontified t) 4557 4559 (face font-lock-type-face fontified t) 4559 4563 (face font-lock-type-face fontified t) 4563 4564 (fontified t category c-<-as-paren-syntax) 4564 4567 (face font-lock-constant-face fontified t) 4567 4569 (fontified t) 4569 4575 (face font-lock-type-face fontified t) 4575 4576 (fontified t category c->-as-paren-syntax) 4576 4577 (fontified t category c->-as-paren-syntax) 4577 4578 (fontified t) 4578 4591 (face font-lock-variable-name-face fontified t) 4591 4592 (c-type c-decl-arg-start fontified t) 4592 4610 (fontified t) 4610 4613 (face font-lock-type-face fontified t) 4613 4614 (fontified t) 4614 4629 (face font-lock-variable-name-face fontified t) 4629 4652 (fontified t) 4652 4654 (fontified t c-is-sws t c-in-sws t) 4654 4655 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4655 4657 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4657 4668 (face font-lock-comment-face fontified t c-in-sws t) 4668 4670 (fontified t c-in-sws t c-is-sws t) 4670 4671 (face font-lock-constant-face fontified t c-is-sws t) 4671 4673 (face font-lock-constant-face fontified t) 4673 4698 (fontified t) 4698 4700 (face font-lock-keyword-face fontified t) 4700 4730 (fontified t) 4730 4733 (face font-lock-constant-face fontified t) 4733 4778 (fontified t) 4778 4797 (face font-lock-string-face fontified t) 4797 4801 (fontified t) 4801 4805 (face font-lock-string-face fontified t) 4805 4811 (fontified t) 4811 4815 (face font-lock-keyword-face fontified t) 4815 4816 (fontified t) 4816 4818 (face font-lock-keyword-face fontified t) 4818 4848 (fontified t) 4848 4851 (face font-lock-constant-face fontified t) 4851 4910 (fontified t) 4910 4929 (face font-lock-string-face fontified t) 4929 4951 (fontified t) 4951 4955 (face font-lock-string-face fontified t) 4955 4961 (fontified t) 4961 4965 (face font-lock-keyword-face fontified t) 4965 4966 (fontified t) 4966 4968 (face font-lock-keyword-face fontified t) 4968 4994 (fontified t) 4994 4997 (face font-lock-constant-face fontified t) 4997 5056 (fontified t) 5056 5085 (face font-lock-string-face fontified t) 5085 5091 (fontified t) 5091 5093 (face font-lock-keyword-face fontified t) 5093 5154 (fontified t) 5154 5159 (face font-lock-constant-face fontified t) 5159 5204 (fontified t) 5204 5208 (face font-lock-keyword-face fontified t) 5208 5256 (fontified t) 5256 5260 (face font-lock-keyword-face fontified t) 5260 5261 (fontified t) 5261 5263 (face font-lock-keyword-face fontified t) 5263 5291 (fontified t) 5291 5294 (face font-lock-constant-face fontified t) 5294 5339 (fontified t) 5339 5359 (face font-lock-string-face fontified t) 5359 5363 (face font-lock-string-face fontified t) 5363 5364 (fontified t) 5364 5381 (fontified t) 5381 5385 (face font-lock-string-face fontified t) 5385 5386 (fontified t) 5386 5387 (fontified t) 5387 5391 (fontified t) 5391 5393 (face font-lock-keyword-face fontified t) 5393 5455 (fontified t) 5455 5457 (fontified t) 5458 5463 (face font-lock-constant-face) 5510 5514 (face font-lock-keyword-face) 5564 5568 (face font-lock-keyword-face) 5569 5571 (face font-lock-keyword-face) 5608 5612 (face font-lock-keyword-face) 5619 5622 (face font-lock-constant-face) 5632 5636 (face font-lock-string-face) 5637 5638 (c-is-sws t c-in-sws t) 5638 5639 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5639 5641 (face font-lock-comment-delimiter-face c-in-sws t) 5641 5689 (face font-lock-comment-face c-in-sws t) 5689 5690 (face font-lock-comment-face c-in-sws t) 5690 5691 (face font-lock-comment-face c-in-sws t) 5691 5692 (c-in-sws t c-is-sws t) 5692 5693 (c-in-sws t c-is-sws t) 5693 5694 (c-is-sws t) 5697 5699 (face font-lock-keyword-face) 5701 5702 (face font-lock-negation-char-face) 5719 5722 (face font-lock-keyword-face) 5724 5726 (face font-lock-type-face) 5726 5727 (face font-lock-type-face c-type c-decl-id-start) 5728 5729 (face font-lock-variable-name-face) 5769 5772 (face font-lock-constant-face) 5795 5801 (c-is-sws t c-in-sws t) 5801 5802 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5802 5804 (face font-lock-comment-delimiter-face c-in-sws t) 5804 5813 (face font-lock-comment-face c-in-sws t) 5813 5819 (c-in-sws t c-is-sws t) 5819 5820 (c-is-sws t) 5832 5838 (c-is-sws t c-in-sws t) 5838 5839 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5839 5841 (face font-lock-comment-delimiter-face c-in-sws t) 5841 5853 (face font-lock-comment-face c-in-sws t) 5853 5859 (c-in-sws t c-is-sws t) 5859 5860 (c-is-sws t) 5890 5896 (c-is-sws t c-in-sws t) 5896 5897 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 5897 5899 (face font-lock-comment-delimiter-face c-in-sws t) 5899 5901 (face font-lock-comment-face c-in-sws t) 5901 5911 (face font-lock-comment-face c-in-sws t) 5911 5917 (c-in-sws t c-is-sws t) 5917 5918 (c-is-sws t)) . 1) (undo-tree-id599 . -33) (undo-tree-id600 . -4318) (undo-tree-id601 . 1619) (undo-tree-id602 . -3837) (undo-tree-id603 . -3841) (undo-tree-id604 . -3547) (undo-tree-id605 . -3841) (undo-tree-id607 . -4130) (undo-tree-id609 . -4277) (undo-tree-id611 . -4194) (undo-tree-id613 . -3941) (undo-tree-id614 . -3941) (undo-tree-id615 . -3547) (undo-tree-id616 . 2112) (undo-tree-id618 . -3941) (undo-tree-id620 . -3941) 3942) ((1 . 5969) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {
  std::cout << \"\\n\\n\\n\\n\";
  std::cout << left_margin
            << corner_tl + \"─────────────────────────────\" + corner_tr << '\\n';
  std::cout << left_margin
            << vertical + \"           OPTIONS            \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 1. for 5 letter Wordle \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 2. for 6 letter Wordle \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 3. for 7 letter Wordle \" + vertical << '\\n';

  std::cout << left_margin
            << corner_bl + \"─────────────────────────────\" + corner_br << '\\n';
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 33 (c-in-sws t face font-lock-string-face fontified t) 33 34 (c-in-sws t fontified t) 34 35 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 35 42 (c-in-sws t face font-lock-preprocessor-face fontified t) 42 43 (c-in-sws t fontified t) 43 64 (c-in-sws t face font-lock-string-face fontified t) 64 65 (c-in-sws t fontified t) 65 66 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 66 73 (c-in-sws t face font-lock-preprocessor-face fontified t) 73 74 (c-in-sws t fontified t) 74 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 135 (c-in-sws t face font-lock-string-face fontified t) 135 136 (c-in-sws t fontified t) 136 137 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 137 144 (c-in-sws t face font-lock-preprocessor-face fontified t) 144 145 (c-in-sws t fontified t) 145 146 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 146 149 (c-in-sws t face font-lock-string-face fontified t) 149 150 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 150 151 (c-in-sws t fontified t) 151 152 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 152 159 (c-in-sws t face font-lock-preprocessor-face fontified t) 159 160 (c-in-sws t fontified t) 160 161 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 161 169 (c-in-sws t face font-lock-string-face fontified t) 169 170 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 170 171 (c-in-sws t fontified t) 171 172 (c-is-sws t c-in-sws t fontified t) 172 173 (c-is-sws t face font-lock-keyword-face fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 181 (face font-lock-constant-face fontified t) 181 183 (fontified t) 183 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 190 (fontified t) 190 198 (face font-lock-variable-name-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-string-face fontified t) 204 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 215 (face font-lock-constant-face fontified t) 215 217 (fontified t) 217 222 (face font-lock-type-face fontified t) 222 223 (face font-lock-type-face c-type c-decl-id-start fontified t) 223 224 (fontified t) 224 234 (face font-lock-variable-name-face fontified t) 234 237 (fontified t) 237 240 (face font-lock-string-face fontified t) 240 243 (fontified t) 243 244 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 244 245 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 245 386 (c-in-sws t face font-lock-comment-face fontified t) 386 420 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 420 421 (c-in-sws t fontified t) 421 422 (c-is-sws t face font-lock-keyword-face fontified t) 422 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 430 (face font-lock-constant-face fontified t) 430 432 (fontified t) 432 437 (face font-lock-type-face fontified t) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified t) 438 439 (fontified t) 439 448 (face font-lock-variable-name-face fontified t) 448 451 (fontified t) 451 454 (face font-lock-string-face fontified t) 454 455 (fontified t) 455 456 (c-is-sws t c-in-sws t fontified t) 456 457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 457 459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 459 468 (c-in-sws t face font-lock-comment-face fontified t) 468 469 (c-is-sws t face font-lock-keyword-face fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (fontified t) 474 477 (face font-lock-constant-face fontified t) 477 479 (fontified t) 479 484 (face font-lock-type-face fontified t) 484 485 (face font-lock-type-face c-type c-decl-id-start fontified t) 485 486 (fontified t) 486 495 (face font-lock-variable-name-face fontified t) 495 498 (fontified t) 498 501 (face font-lock-string-face fontified t) 501 503 (fontified t) 503 508 (face font-lock-keyword-face fontified t) 508 509 (fontified t) 509 512 (face font-lock-constant-face fontified t) 512 514 (fontified t) 514 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face c-type c-decl-id-start fontified t) 520 521 (fontified t) 521 530 (face font-lock-variable-name-face fontified t) 530 533 (fontified t) 533 536 (face font-lock-string-face fontified t) 536 538 (fontified t) 538 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 554 (face font-lock-type-face fontified t) 554 555 (face font-lock-type-face c-type c-decl-id-start fontified t) 555 556 (fontified t) 556 565 (face font-lock-variable-name-face fontified t) 565 568 (fontified t) 568 571 (face font-lock-string-face fontified t) 571 573 (fontified t) 573 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-constant-face fontified t) 582 584 (fontified t) 584 589 (face font-lock-type-face fontified t) 589 590 (face font-lock-type-face c-type c-decl-id-start fontified t) 590 591 (fontified t) 591 600 (face font-lock-variable-name-face fontified t) 600 603 (fontified t) 603 606 (face font-lock-string-face fontified t) 606 608 (fontified t) 608 613 (face font-lock-keyword-face fontified t) 613 614 (fontified t) 614 617 (face font-lock-constant-face fontified t) 617 619 (fontified t) 619 624 (face font-lock-type-face fontified t) 624 625 (face font-lock-type-face c-type c-decl-id-start fontified t) 625 626 (fontified t) 626 635 (face font-lock-variable-name-face fontified t) 635 638 (fontified t) 638 641 (face font-lock-string-face fontified t) 641 643 (fontified t) 643 648 (face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (face font-lock-constant-face fontified t) 652 654 (fontified t) 654 659 (face font-lock-type-face fontified t) 659 660 (face font-lock-type-face c-type c-decl-id-start fontified t) 660 661 (fontified t) 661 670 (face font-lock-variable-name-face fontified t) 670 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 678 (fontified t) 678 683 (face font-lock-keyword-face fontified t) 683 684 (fontified t) 684 687 (face font-lock-constant-face fontified t) 687 689 (fontified t) 689 694 (face font-lock-type-face fontified t) 694 695 (face font-lock-type-face c-type c-decl-id-start fontified t) 695 696 (fontified t) 696 708 (face font-lock-variable-name-face fontified t) 708 711 (fontified t) 711 714 (face font-lock-string-face fontified t) 714 716 (fontified t) 716 721 (face font-lock-keyword-face fontified t) 721 722 (fontified t) 722 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 732 (face font-lock-type-face fontified t) 732 733 (face font-lock-type-face c-type c-decl-id-start fontified t) 733 734 (fontified t) 734 748 (face font-lock-variable-name-face fontified t) 748 751 (fontified t) 751 754 (face font-lock-string-face fontified t) 754 756 (fontified t) 756 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 765 (face font-lock-constant-face fontified t) 765 767 (fontified t) 767 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 788 (face font-lock-variable-name-face fontified t) 788 791 (fontified t) 791 794 (face font-lock-string-face fontified t) 794 797 (fontified t) 797 799 (face font-lock-type-face fontified t) 799 800 (face font-lock-type-face c-type c-decl-id-start fontified t) 800 801 (fontified t) 801 826 (face font-lock-variable-name-face fontified t) 826 832 (fontified t) 832 834 (face font-lock-type-face fontified t) 834 835 (face font-lock-type-face c-type c-decl-id-start fontified t) 835 836 (fontified t) 836 863 (face font-lock-variable-name-face fontified t) 863 870 (fontified t) 870 873 (face font-lock-constant-face fontified t) 873 875 (fontified t) 875 881 (face font-lock-type-face fontified t) 881 882 (fontified t category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face fontified t) 885 887 (fontified t) 887 893 (face font-lock-type-face fontified t) 893 894 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 894 895 (fontified t) 895 899 (face font-lock-variable-name-face fontified t) 899 903 (fontified t) 903 906 (face font-lock-string-face fontified t) 906 908 (fontified t) 908 911 (face font-lock-string-face fontified t) 911 913 (fontified t) 913 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 921 (face font-lock-string-face fontified t) 921 923 (fontified t) 923 926 (face font-lock-string-face fontified t) 926 928 (fontified t) 928 931 (face font-lock-string-face fontified t) 931 933 (fontified t) 933 936 (face font-lock-string-face fontified t) 936 938 (fontified t) 938 941 (face font-lock-string-face fontified t) 941 943 (fontified t) 943 946 (face font-lock-string-face fontified t) 946 981 (fontified t) 981 984 (face font-lock-string-face fontified t) 984 986 (fontified t) 986 989 (face font-lock-string-face fontified t) 989 991 (fontified t) 991 994 (face font-lock-string-face fontified t) 994 996 (fontified t) 996 999 (face font-lock-string-face fontified t) 999 1001 (fontified t) 1001 1004 (face font-lock-string-face fontified t) 1004 1006 (fontified t) 1006 1009 (face font-lock-string-face fontified t) 1009 1011 (fontified t) 1011 1014 (face font-lock-string-face fontified t) 1014 1016 (fontified t) 1016 1019 (face font-lock-string-face fontified t) 1019 1021 (fontified t) 1021 1024 (face font-lock-string-face fontified t) 1024 1059 (fontified t) 1059 1062 (face font-lock-string-face fontified t) 1062 1064 (fontified t) 1064 1067 (face font-lock-string-face fontified t) 1067 1069 (fontified t) 1069 1072 (face font-lock-string-face fontified t) 1072 1074 (fontified t) 1074 1077 (face font-lock-string-face fontified t) 1077 1079 (fontified t) 1079 1082 (face font-lock-string-face fontified t) 1082 1084 (fontified t) 1084 1087 (face font-lock-string-face fontified t) 1087 1089 (fontified t) 1089 1092 (face font-lock-string-face fontified t) 1092 1094 (fontified t) 1094 1097 (face font-lock-string-face fontified t) 1097 1100 (fontified t) 1100 1103 (face font-lock-constant-face fontified t) 1103 1105 (fontified t) 1105 1110 (face font-lock-type-face fontified t) 1110 1111 (face font-lock-type-face c-type c-decl-id-start fontified t) 1111 1112 (fontified t) 1112 1122 (face font-lock-variable-name-face fontified t) 1122 1125 (fontified t) 1125 1153 (face font-lock-string-face fontified t) 1153 1156 (fontified t) 1156 1159 (face font-lock-type-face fontified t) 1159 1160 (face font-lock-type-face c-type c-decl-id-start fontified t) 1160 1161 (fontified t) 1161 1171 (face font-lock-function-name-face fontified t) 1171 1172 (c-type c-decl-arg-start fontified t) 1172 1175 (face font-lock-constant-face fontified t) 1175 1177 (fontified t) 1177 1183 (face font-lock-type-face fontified t) 1183 1184 (fontified t) 1184 1190 (face font-lock-variable-name-face fontified t) 1190 1191 (c-type c-decl-arg-start fontified t) 1191 1192 (fontified t) 1192 1195 (face font-lock-constant-face fontified t) 1195 1197 (fontified t) 1197 1203 (face font-lock-type-face fontified t) 1203 1204 (fontified t) 1204 1209 (face font-lock-variable-name-face fontified t) 1209 1215 (fontified t) 1215 1218 (face font-lock-keyword-face fontified t) 1218 1220 (fontified t) 1220 1222 (face font-lock-type-face fontified t) 1222 1223 (face font-lock-type-face c-type c-decl-id-start fontified t) 1223 1224 (fontified t) 1224 1225 (face font-lock-variable-name-face fontified t) 1225 1250 (fontified t) 1250 1252 (face font-lock-keyword-face fontified t) 1252 1254 (fontified t) 1254 1257 (face font-lock-constant-face fontified t) 1257 1319 (fontified t) 1319 1322 (face font-lock-constant-face fontified t) 1322 1371 (fontified t) 1371 1374 (face font-lock-type-face fontified t) 1374 1375 (face font-lock-type-face c-type c-decl-id-start fontified t) 1375 1376 (fontified t) 1376 1390 (face font-lock-function-name-face fontified t) 1390 1397 (fontified t) 1397 1400 (face font-lock-constant-face fontified t) 1400 1444 (fontified t) 1444 1447 (face font-lock-string-face fontified t) 1447 1475 (fontified t) 1475 1484 (face font-lock-string-face fontified t) 1484 1498 (face font-lock-string-face fontified t) 1498 1500 (fontified t) 1500 1512 (fontified t) 1512 1514 (fontified t) 1514 1517 (face font-lock-constant-face fontified t) 1517 1527 (fontified t) 1527 1531 (face font-lock-string-face fontified t) 1531 1569 (fontified t) 1569 1572 (face font-lock-string-face fontified t) 1572 1587 (fontified t) 1587 1590 (face font-lock-string-face fontified t) 1590 1594 (fontified t) 1594 1597 (face font-lock-keyword-face fontified t) 1597 1599 (fontified t) 1599 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face c-type c-decl-id-start fontified t) 1602 1603 (fontified t) 1603 1604 (face font-lock-variable-name-face fontified t) 1604 1629 (fontified t) 1629 1631 (face font-lock-keyword-face fontified t) 1631 1650 (fontified t) 1650 1653 (face font-lock-constant-face fontified t) 1653 1675 (fontified t) 1675 1679 (face font-lock-string-face fontified t) 1679 1687 (fontified t) 1687 1690 (face font-lock-constant-face fontified t) 1690 1734 (fontified t) 1734 1737 (face font-lock-string-face fontified t) 1737 1752 (fontified t) 1752 1756 (face font-lock-string-face fontified t) 1756 1765 (fontified t) 1765 1769 (face font-lock-keyword-face fontified t) 1769 1770 (fontified t) 1770 1772 (face font-lock-keyword-face fontified t) 1772 1791 (fontified t) 1791 1794 (face font-lock-constant-face fontified t) 1794 1804 (fontified t) 1804 1807 (face font-lock-string-face fontified t) 1807 1822 (fontified t) 1822 1826 (face font-lock-string-face fontified t) 1826 1834 (fontified t) 1834 1837 (face font-lock-constant-face fontified t) 1837 1881 (fontified t) 1881 1884 (face font-lock-string-face fontified t) 1884 1899 (fontified t) 1899 1905 (face font-lock-string-face fontified t) 1905 1917 (fontified t) 1917 1920 (face font-lock-constant-face fontified t) 1920 1941 (fontified t) 1941 1944 (face font-lock-string-face fontified t) 1944 1952 (fontified t) 1952 1955 (face font-lock-constant-face fontified t) 1955 1965 (fontified t) 1965 1970 (face font-lock-string-face fontified t) 1970 1985 (fontified t) 1985 1989 (face font-lock-string-face fontified t) 1989 1993 (fontified t) 1993 1996 (face font-lock-constant-face fontified t) 1996 2040 (fontified t) 2040 2043 (face font-lock-string-face fontified t) 2043 2071 (fontified t) 2071 2081 (face font-lock-string-face fontified t) 2081 2094 (face font-lock-string-face fontified t) 2094 2110 (fontified t) 2110 2114 (face font-lock-string-face fontified t) 2114 2116 (fontified t) 2116 2119 (fontified t) 2119 2122 (face font-lock-type-face fontified t) 2122 2123 (face font-lock-type-face c-type c-decl-id-start fontified t) 2123 2124 (fontified t) 2124 2132 (face font-lock-function-name-face fontified t) 2132 2133 (c-type c-decl-arg-start fontified t) 2133 2136 (face font-lock-type-face fontified t) 2136 2137 (fontified t) 2137 2138 (face font-lock-variable-name-face fontified t) 2138 2144 (fontified t) 2144 2147 (face font-lock-keyword-face fontified t) 2147 2149 (fontified t) 2149 2151 (face font-lock-type-face fontified t) 2151 2152 (face font-lock-type-face c-type c-decl-id-start fontified t) 2152 2153 (fontified t) 2153 2154 (face font-lock-variable-name-face fontified t) 2154 2188 (fontified t) 2188 2194 (face font-lock-keyword-face fontified t) 2194 2222 (fontified t) 2222 2226 (face font-lock-keyword-face fontified t) 2226 2228 (fontified t) 2228 2229 (c-type c-decl-end fontified t) 2229 2236 (fontified t) 2236 2239 (face font-lock-constant-face fontified t) 2239 2267 (fontified t) 2267 2272 (face font-lock-string-face fontified t) 2272 2300 (fontified t) 2300 2305 (face font-lock-keyword-face fontified t) 2305 2311 (fontified t) 2311 2315 (face font-lock-keyword-face fontified t) 2315 2317 (fontified t) 2317 2318 (c-type c-decl-end fontified t) 2318 2325 (fontified t) 2325 2328 (face font-lock-constant-face fontified t) 2328 2356 (fontified t) 2356 2361 (face font-lock-string-face fontified t) 2361 2390 (fontified t) 2390 2395 (face font-lock-keyword-face fontified t) 2395 2401 (fontified t) 2401 2405 (face font-lock-keyword-face fontified t) 2405 2407 (fontified t) 2407 2408 (c-type c-decl-end fontified t) 2408 2415 (fontified t) 2415 2418 (face font-lock-constant-face fontified t) 2418 2446 (fontified t) 2446 2451 (face font-lock-string-face fontified t) 2451 2478 (fontified t) 2478 2483 (face font-lock-keyword-face fontified t) 2483 2489 (fontified t) 2489 2496 (face font-lock-keyword-face fontified t) 2496 2497 (c-type c-decl-end fontified t) 2497 2504 (fontified t) 2504 2507 (face font-lock-constant-face fontified t) 2507 2529 (fontified t) 2529 2534 (face font-lock-string-face fontified t) 2534 2560 (fontified t) 2560 2563 (face font-lock-constant-face fontified t) 2563 2573 (fontified t) 2573 2577 (face font-lock-string-face fontified t) 2577 2581 (fontified t) 2581 2584 (face font-lock-constant-face fontified t) 2584 2610 (fontified t) 2610 2613 (face font-lock-type-face fontified t) 2613 2614 (face font-lock-type-face c-type c-decl-id-start fontified t) 2614 2615 (fontified t) 2615 2626 (face font-lock-function-name-face fontified t) 2626 2627 (c-type c-decl-arg-start fontified t) 2627 2630 (face font-lock-constant-face fontified t) 2630 2632 (fontified t) 2632 2638 (face font-lock-type-face fontified t) 2638 2639 (fontified t category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face fontified t) 2642 2644 (fontified t) 2644 2650 (face font-lock-type-face fontified t) 2650 2651 (fontified t category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face fontified t) 2654 2656 (fontified t) 2656 2662 (face font-lock-type-face fontified t) 2662 2663 (fontified t category c->-as-paren-syntax) 2663 2664 (fontified t category c->-as-paren-syntax) 2664 2665 (fontified t) 2665 2678 (face font-lock-variable-name-face fontified t) 2678 2679 (c-type c-decl-arg-start fontified t) 2679 2680 (fontified t) 2680 2683 (face font-lock-type-face fontified t) 2683 2684 (fontified t) 2684 2685 (face font-lock-variable-name-face fontified t) 2685 2692 (fontified t) 2692 2695 (face font-lock-keyword-face fontified t) 2695 2697 (fontified t) 2697 2699 (face font-lock-type-face fontified t) 2699 2700 (face font-lock-type-face c-type c-decl-id-start fontified t) 2700 2701 (fontified t) 2701 2702 (face font-lock-variable-name-face fontified t) 2702 2736 (fontified t) 2736 2739 (face font-lock-constant-face fontified t) 2739 2741 (fontified t) 2741 2746 (face font-lock-type-face fontified t) 2746 2747 (face font-lock-type-face c-type c-decl-id-start fontified t) 2747 2748 (fontified t) 2748 2752 (face font-lock-variable-name-face fontified t) 2752 2780 (fontified t) 2780 2786 (face font-lock-keyword-face fontified t) 2786 2814 (fontified t) 2814 2818 (face font-lock-keyword-face fontified t) 2818 2820 (fontified t) 2820 2821 (c-type c-decl-end fontified t) 2821 2828 (fontified t) 2828 2831 (face font-lock-constant-face fontified t) 2831 2847 (fontified t) 2847 2851 (face font-lock-string-face fontified t) 2851 2870 (fontified t) 2870 2873 (face font-lock-string-face fontified t) 2873 2884 (fontified t) 2884 2888 (face font-lock-string-face fontified t) 2888 2935 (fontified t) 2935 2940 (face font-lock-keyword-face fontified t) 2940 2946 (fontified t) 2946 2950 (face font-lock-keyword-face fontified t) 2950 2952 (fontified t) 2952 2953 (c-type c-decl-end fontified t) 2953 2960 (fontified t) 2960 2963 (face font-lock-constant-face fontified t) 2963 2979 (fontified t) 2979 2983 (face font-lock-string-face fontified t) 2983 3002 (fontified t) 3002 3005 (face font-lock-string-face fontified t) 3005 3011 (fontified t) 3011 3012 (fontified t) 3012 3016 (fontified t) 3016 3020 (fontified t face font-lock-string-face) 3020 3031 (fontified t) 3069 3074 (face font-lock-keyword-face) 3080 3084 (face font-lock-keyword-face) 3086 3087 (c-type c-decl-end) 3094 3097 (face font-lock-constant-face) 3113 3117 (face font-lock-string-face) 3136 3139 (face font-lock-string-face) 3150 3154 (face font-lock-string-face) 3199 3204 (face font-lock-keyword-face) 3210 3217 (face font-lock-keyword-face) 3217 3218 (c-type c-decl-end) 3225 3228 (face font-lock-constant-face) 3238 3242 (face font-lock-string-face) 3261 3264 (face font-lock-string-face) 3275 3279 (face font-lock-string-face) 3293 3296 (face font-lock-constant-face) 3306 3310 (face font-lock-string-face) 3314 3317 (face font-lock-constant-face) 3343 3346 (face font-lock-type-face) 3346 3347 (face font-lock-type-face c-type c-decl-id-start) 3348 3359 (face font-lock-function-name-face) 3359 3360 (c-type c-decl-arg-start) 3360 3363 (face font-lock-type-face) 3364 3365 (face font-lock-variable-name-face) 3372 3375 (face font-lock-keyword-face) 3377 3379 (face font-lock-type-face) 3379 3380 (face font-lock-type-face c-type c-decl-id-start) 3381 3382 (face font-lock-variable-name-face) 3416 3422 (face font-lock-keyword-face) 3450 3454 (face font-lock-keyword-face) 3456 3457 (c-type c-decl-end) 3464 3467 (face font-lock-constant-face) 3495 3500 (face font-lock-string-face) 3528 3533 (face font-lock-keyword-face) 3539 3543 (face font-lock-keyword-face) 3545 3546 (c-type c-decl-end) 3553 3556 (face font-lock-constant-face) 3584 3589 (face font-lock-string-face) 3618 3623 (face font-lock-keyword-face) 4527 4528 (category c-<-as-paren-syntax) 4539 4540 (category c-<-as-paren-syntax) 4551 4552 (category c->-as-paren-syntax) 4552 4553 (category c->-as-paren-syntax)) . 1) (undo-tree-id635 . -33) (undo-tree-id636 . -2081) (undo-tree-id637 . -1483) (undo-tree-id638 . 4460) (undo-tree-id639 . -1483) (undo-tree-id640 . -1483) (undo-tree-id641 . -2081) (undo-tree-id642 . -2081) (undo-tree-id643 . -1100) (undo-tree-id644 . -1483) (undo-tree-id645 . -1483) (undo-tree-id646 . -1484) (undo-tree-id647 . -1483) (undo-tree-id648 . -4224) (undo-tree-id649 . -4130) (undo-tree-id650 . -4047) (undo-tree-id651 . -4277) (undo-tree-id652 . -4183) (undo-tree-id653 . -4194) (undo-tree-id654 . -4097) (undo-tree-id655 . -1483) (undo-tree-id656 . -1483) (undo-tree-id657 . -1483) (undo-tree-id658 . -1483) (undo-tree-id659 . -1483) (undo-tree-id660 . -1448) (undo-tree-id661 . -1483) (undo-tree-id662 . -1483) (undo-tree-id663 . -1483) (undo-tree-id664 . -1483) (undo-tree-id665 . -1483) (undo-tree-id666 . -1483) (undo-tree-id667 . -1483) (undo-tree-id668 . -1483) (undo-tree-id669 . -1483)) (26692 28684 579196 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4487 . 4488) (nil fontified nil 4487 . 4488) (4487 . 4488) 4486) nil (26692 28696 99369 445000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1485 . 1486) (nil fontified nil 1485 . 1486) (1485 . 1486) 1484 (t 26692 28633 754979 308000)) ((#("─" 0 1 (face font-lock-string-face rear-nonsticky nil fontified nil)) . 1485) (nil rear-nonsticky t 1485 . 1486)) (26692 28683 322434 367000) 0 nil])
([nil nil ((1 . 5947) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {
  std::cout << \"\\n\\n\\n\\n\";
  std::cout << left_margin
            << corner_tl + \"──────────────────────────────\" + corner_tr
            << '\\n';
  std::cout << left_margin
            << vertical + \"           OPTIONS            \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 1. for 5 letter Wordle \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 2. for 6 letter Wordle \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 3. for 7 letter Wordle \" + vertical << '\\n';

  std::cout << left_margin
            << corner_bl + \"──────────────────────────────\" + corner_br
            << '\\n';
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"     Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (face font-lock-preprocessor-face) 1 8 (face font-lock-preprocessor-face) 9 33 (face font-lock-string-face) 34 35 (face font-lock-preprocessor-face) 35 42 (face font-lock-preprocessor-face) 43 64 (face font-lock-string-face) 65 66 (face font-lock-preprocessor-face) 66 73 (face font-lock-preprocessor-face) 74 96 (face font-lock-string-face) 97 98 (face font-lock-preprocessor-face) 98 105 (face font-lock-preprocessor-face) 106 135 (face font-lock-string-face) 136 137 (face font-lock-preprocessor-face) 137 144 (face font-lock-preprocessor-face) 145 146 (face font-lock-string-face) 146 149 (face font-lock-string-face) 149 150 (face font-lock-string-face) 151 152 (face font-lock-preprocessor-face) 152 159 (face font-lock-preprocessor-face) 160 161 (face font-lock-string-face) 161 169 (face font-lock-string-face) 169 170 (face font-lock-string-face) 172 173 (face font-lock-keyword-face) 173 177 (face font-lock-keyword-face) 178 181 (face font-lock-constant-face) 183 188 (face font-lock-type-face) 188 189 (face font-lock-type-face) 190 198 (face font-lock-variable-name-face) 201 204 (face font-lock-string-face) 206 211 (face font-lock-keyword-face) 212 215 (face font-lock-constant-face) 217 222 (face font-lock-type-face) 222 223 (face font-lock-type-face) 224 234 (face font-lock-variable-name-face) 237 240 (face font-lock-string-face) 243 244 (face font-lock-comment-delimiter-face) 244 245 (face font-lock-comment-delimiter-face) 245 386 (face font-lock-comment-face) 386 420 (face font-lock-comment-delimiter-face) 421 422 (face font-lock-keyword-face) 422 426 (face font-lock-keyword-face) 427 430 (face font-lock-constant-face) 432 437 (face font-lock-type-face) 437 438 (face font-lock-type-face) 439 448 (face font-lock-variable-name-face) 451 454 (face font-lock-string-face) 456 457 (face font-lock-comment-delimiter-face) 457 459 (face font-lock-comment-delimiter-face) 459 468 (face font-lock-comment-face) 468 469 (face font-lock-keyword-face) 469 473 (face font-lock-keyword-face) 474 477 (face font-lock-constant-face) 479 484 (face font-lock-type-face) 484 485 (face font-lock-type-face) 486 495 (face font-lock-variable-name-face) 498 501 (face font-lock-string-face) 503 508 (face font-lock-keyword-face) 509 512 (face font-lock-constant-face) 514 519 (face font-lock-type-face) 519 520 (face font-lock-type-face) 521 530 (face font-lock-variable-name-face) 533 536 (face font-lock-string-face) 538 543 (face font-lock-keyword-face) 544 547 (face font-lock-constant-face) 549 554 (face font-lock-type-face) 554 555 (face font-lock-type-face) 556 565 (face font-lock-variable-name-face) 568 571 (face font-lock-string-face) 573 578 (face font-lock-keyword-face) 579 582 (face font-lock-constant-face) 584 589 (face font-lock-type-face) 589 590 (face font-lock-type-face) 591 600 (face font-lock-variable-name-face) 603 606 (face font-lock-string-face) 608 613 (face font-lock-keyword-face) 614 617 (face font-lock-constant-face) 619 624 (face font-lock-type-face) 624 625 (face font-lock-type-face) 626 635 (face font-lock-variable-name-face) 638 641 (face font-lock-string-face) 643 648 (face font-lock-keyword-face) 649 652 (face font-lock-constant-face) 654 659 (face font-lock-type-face) 659 660 (face font-lock-type-face) 661 670 (face font-lock-variable-name-face) 673 676 (face font-lock-string-face) 678 683 (face font-lock-keyword-face) 684 687 (face font-lock-constant-face) 689 694 (face font-lock-type-face) 694 695 (face font-lock-type-face) 696 708 (face font-lock-variable-name-face) 711 714 (face font-lock-string-face) 716 721 (face font-lock-keyword-face) 722 725 (face font-lock-constant-face) 727 732 (face font-lock-type-face) 732 733 (face font-lock-type-face) 734 748 (face font-lock-variable-name-face) 751 754 (face font-lock-string-face) 756 761 (face font-lock-keyword-face) 762 765 (face font-lock-constant-face) 767 772 (face font-lock-type-face) 772 773 (face font-lock-type-face) 774 788 (face font-lock-variable-name-face) 791 794 (face font-lock-string-face) 797 799 (face font-lock-type-face) 799 800 (face font-lock-type-face) 801 826 (face font-lock-variable-name-face) 832 834 (face font-lock-type-face) 834 835 (face font-lock-type-face) 836 863 (face font-lock-variable-name-face) 870 873 (face font-lock-constant-face) 875 881 (face font-lock-type-face) 881 882 (category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face) 887 893 (face font-lock-type-face) 893 894 (category c->-as-paren-syntax) 895 899 (face font-lock-variable-name-face) 903 906 (face font-lock-string-face) 908 911 (face font-lock-string-face) 913 916 (face font-lock-string-face) 918 921 (face font-lock-string-face) 923 926 (face font-lock-string-face) 928 931 (face font-lock-string-face) 933 936 (face font-lock-string-face) 938 941 (face font-lock-string-face) 943 946 (face font-lock-string-face) 981 984 (face font-lock-string-face) 986 989 (face font-lock-string-face) 991 994 (face font-lock-string-face) 996 999 (face font-lock-string-face) 1001 1004 (face font-lock-string-face) 1006 1009 (face font-lock-string-face) 1011 1014 (face font-lock-string-face) 1016 1019 (face font-lock-string-face) 1021 1024 (face font-lock-string-face) 1059 1062 (face font-lock-string-face) 1064 1067 (face font-lock-string-face) 1069 1072 (face font-lock-string-face) 1074 1077 (face font-lock-string-face) 1079 1082 (face font-lock-string-face) 1084 1087 (face font-lock-string-face) 1089 1092 (face font-lock-string-face) 1094 1097 (face font-lock-string-face) 1100 1103 (face font-lock-constant-face) 1105 1110 (face font-lock-type-face) 1110 1111 (face font-lock-type-face) 1112 1122 (face font-lock-variable-name-face) 1125 1153 (face font-lock-string-face) 1156 1159 (face font-lock-type-face) 1159 1160 (face font-lock-type-face) 1161 1171 (face font-lock-function-name-face) 1172 1175 (face font-lock-constant-face) 1177 1183 (face font-lock-type-face) 1184 1190 (face font-lock-variable-name-face) 1192 1195 (face font-lock-constant-face) 1197 1203 (face font-lock-type-face) 1204 1209 (face font-lock-variable-name-face) 1215 1218 (face font-lock-keyword-face) 1220 1222 (face font-lock-type-face) 1222 1223 (face font-lock-type-face) 1224 1225 (face font-lock-variable-name-face) 1250 1252 (face font-lock-keyword-face) 1254 1257 (face font-lock-constant-face) 1319 1322 (face font-lock-constant-face) 1371 1374 (face font-lock-type-face) 1374 1375 (face font-lock-type-face) 1376 1390 (face font-lock-function-name-face) 1397 1400 (face font-lock-constant-face) 1444 1447 (face font-lock-string-face) 1475 1498 (face font-lock-string-face) 1514 1517 (face font-lock-constant-face) 1527 1531 (face font-lock-string-face) 1569 1572 (face font-lock-string-face) 1587 1590 (face font-lock-string-face) 1594 1597 (face font-lock-keyword-face) 1599 1601 (face font-lock-type-face) 1601 1602 (face font-lock-type-face) 1603 1604 (face font-lock-variable-name-face) 1629 1631 (face font-lock-keyword-face) 1650 1653 (face font-lock-constant-face) 1675 1679 (face font-lock-string-face) 1687 1690 (face font-lock-constant-face) 1734 1737 (face font-lock-string-face) 1752 1756 (face font-lock-string-face) 1765 1769 (face font-lock-keyword-face) 1770 1772 (face font-lock-keyword-face) 1791 1794 (face font-lock-constant-face) 1804 1807 (face font-lock-string-face) 1822 1826 (face font-lock-string-face) 1834 1837 (face font-lock-constant-face) 1881 1884 (face font-lock-string-face) 1899 1905 (face font-lock-string-face) 1917 1920 (face font-lock-constant-face) 1941 1944 (face font-lock-string-face) 1952 1955 (face font-lock-constant-face) 1965 1970 (face font-lock-string-face) 1985 1989 (face font-lock-string-face) 1993 1996 (face font-lock-constant-face) 2040 2043 (face font-lock-string-face) 2071 2094 (face font-lock-string-face) 2110 2114 (face font-lock-string-face) 2119 2122 (face font-lock-type-face) 2122 2123 (face font-lock-type-face) 2124 2132 (face font-lock-function-name-face) 2133 2136 (face font-lock-type-face) 2137 2138 (face font-lock-variable-name-face) 2144 2147 (face font-lock-keyword-face) 2149 2151 (face font-lock-type-face) 2151 2152 (face font-lock-type-face) 2153 2154 (face font-lock-variable-name-face) 2188 2194 (face font-lock-keyword-face) 2222 2226 (face font-lock-keyword-face) 2236 2239 (face font-lock-constant-face) 2267 2272 (face font-lock-string-face) 2300 2305 (face font-lock-keyword-face) 2311 2315 (face font-lock-keyword-face) 2325 2328 (face font-lock-constant-face) 2356 2361 (face font-lock-string-face) 2390 2395 (face font-lock-keyword-face) 2401 2405 (face font-lock-keyword-face) 2415 2418 (face font-lock-constant-face) 2446 2451 (face font-lock-string-face) 2478 2483 (face font-lock-keyword-face) 2489 2496 (face font-lock-keyword-face) 2504 2507 (face font-lock-constant-face) 2529 2534 (face font-lock-string-face) 2560 2563 (face font-lock-constant-face) 2573 2577 (face font-lock-string-face) 2581 2584 (face font-lock-constant-face) 2610 2613 (face font-lock-type-face) 2613 2614 (face font-lock-type-face) 2615 2626 (face font-lock-function-name-face) 2627 2630 (face font-lock-constant-face) 2632 2638 (face font-lock-type-face) 2638 2639 (category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face) 2644 2650 (face font-lock-type-face) 2650 2651 (category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face) 2656 2662 (face font-lock-type-face) 2662 2663 (category c->-as-paren-syntax) 2663 2664 (category c->-as-paren-syntax) 2665 2678 (face font-lock-variable-name-face) 2680 2683 (face font-lock-type-face) 2684 2685 (face font-lock-variable-name-face) 2692 2695 (face font-lock-keyword-face) 2697 2699 (face font-lock-type-face) 2699 2700 (face font-lock-type-face) 2701 2702 (face font-lock-variable-name-face) 2736 2739 (face font-lock-constant-face) 2741 2746 (face font-lock-type-face) 2746 2747 (face font-lock-type-face) 2748 2752 (face font-lock-variable-name-face) 2780 2786 (face font-lock-keyword-face) 2814 2818 (face font-lock-keyword-face) 2828 2831 (face font-lock-constant-face) 2847 2851 (face font-lock-string-face) 2870 2873 (face font-lock-string-face) 2884 2888 (face font-lock-string-face) 2935 2940 (face font-lock-keyword-face) 2946 2950 (face font-lock-keyword-face) 2960 2963 (face font-lock-constant-face) 2979 2983 (face font-lock-string-face) 3002 3005 (face font-lock-string-face) 3016 3020 (face font-lock-string-face) 3069 3074 (face font-lock-keyword-face) 3080 3084 (face font-lock-keyword-face) 3094 3097 (face font-lock-constant-face) 3113 3117 (face font-lock-string-face) 3136 3139 (face font-lock-string-face) 3150 3154 (face font-lock-string-face) 3199 3204 (face font-lock-keyword-face) 3210 3217 (face font-lock-keyword-face) 3225 3228 (face font-lock-constant-face) 3238 3242 (face font-lock-string-face) 3261 3264 (face font-lock-string-face) 3275 3279 (face font-lock-string-face) 3293 3296 (face font-lock-constant-face) 3306 3310 (face font-lock-string-face) 3314 3317 (face font-lock-constant-face) 3343 3346 (face font-lock-type-face) 3346 3347 (face font-lock-type-face) 3348 3359 (face font-lock-function-name-face) 3360 3363 (face font-lock-type-face) 3364 3365 (face font-lock-variable-name-face) 3372 3375 (face font-lock-keyword-face) 3377 3379 (face font-lock-type-face) 3379 3380 (face font-lock-type-face) 3381 3382 (face font-lock-variable-name-face) 3416 3422 (face font-lock-keyword-face) 3450 3454 (face font-lock-keyword-face) 3464 3467 (face font-lock-constant-face) 3495 3500 (face font-lock-string-face) 3528 3533 (face font-lock-keyword-face) 3539 3543 (face font-lock-keyword-face) 3547 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3830 (fontified t) 3830 3832 (fontified t) 3832 3833 (face font-lock-constant-face fontified t) 3833 3834 (face font-lock-constant-face fontified t) 3834 3835 (face font-lock-constant-face fontified t) 3835 3836 (fontified t) 3836 3837 (fontified t) 3837 3838 (fontified t) 3838 3839 (fontified t) 3839 3840 (fontified t) 3840 3841 (fontified t) 3841 3842 (fontified t) 3842 3843 (fontified t) 3843 3844 (fontified t) 3844 3845 (fontified t) 3845 3846 (face font-lock-string-face fontified t) 3846 3847 (face font-lock-string-face fontified t) 3847 3848 (face font-lock-string-face fontified t) 3848 3849 (face font-lock-string-face fontified t) 3849 3850 (face font-lock-string-face fontified t) 3850 3851 (face font-lock-string-face fontified t) 3851 3852 (face font-lock-string-face fontified t) 3852 3853 (face font-lock-string-face fontified t) 3853 3854 (face font-lock-string-face fontified t) 3854 3855 (face font-lock-string-face fontified t) 3855 3856 (fontified t) 3856 3857 (fontified t) 3857 3859 (fontified t) 3859 3860 (face font-lock-constant-face fontified t) 3860 3862 (face font-lock-constant-face fontified t) 3862 3883 (fontified t) 3883 3884 (fontified t) 3884 3911 (fontified t) 3911 3941 (face font-lock-string-face fontified t) 3941 3942 (face font-lock-string-face rear-nonsticky t fontified t) 3942 3943 (face font-lock-string-face fontified t) 3943 3956 (fontified t) 3956 3971 (fontified t) 3971 3975 (face font-lock-string-face fontified t) 3975 3976 (fontified t) 3976 3979 (fontified t) 3979 3982 (face font-lock-constant-face fontified t) 3982 4030 (fontified t) 4030 4031 (face font-lock-string-face fontified t) 4031 4032 (face font-lock-string-face fontified t) 4032 4059 (face font-lock-string-face fontified t) 4059 4060 (face font-lock-string-face fontified t) 4060 4062 (face font-lock-string-face fontified t) 4062 4077 (fontified t) 4077 4081 (face font-lock-string-face fontified t) 4081 4083 (fontified t) 4083 4085 (fontified t) 4085 4088 (face font-lock-constant-face fontified t) 4088 4136 (fontified t) 4136 4137 (face font-lock-string-face fontified t) 4137 4138 (face font-lock-string-face fontified t) 4138 4166 (face font-lock-string-face fontified t) 4166 4167 (face font-lock-string-face fontified t) 4167 4168 (face font-lock-string-face fontified t) 4168 4183 (fontified t) 4183 4187 (face font-lock-string-face fontified t) 4187 4189 (fontified t) 4189 4191 (fontified t) 4191 4194 (face font-lock-constant-face fontified t) 4194 4242 (fontified t) 4242 4243 (face font-lock-string-face fontified t) 4243 4244 (face font-lock-string-face fontified t) 4244 4272 (face font-lock-string-face fontified t) 4272 4273 (face font-lock-string-face fontified t) 4273 4274 (face font-lock-string-face fontified t) 4274 4289 (fontified t) 4289 4293 (face font-lock-string-face fontified t) 4293 4295 (fontified t) 4295 4297 (fontified t) 4297 4300 (face font-lock-constant-face fontified t) 4300 4348 (fontified t) 4348 4349 (face font-lock-string-face fontified t) 4349 4350 (face font-lock-string-face fontified t) 4350 4378 (face font-lock-string-face fontified t) 4378 4379 (face font-lock-string-face fontified t) 4379 4380 (face font-lock-string-face fontified t) 4380 4395 (fontified t) 4395 4399 (face font-lock-string-face fontified t) 4399 4401 (fontified t) 4401 4404 (fontified t) 4404 4407 (face font-lock-constant-face fontified t) 4407 4456 (fontified t) 4456 4486 (face font-lock-string-face fontified t) 4486 4487 (face font-lock-string-face fontified t rear-nonsticky t) 4487 4488 (face font-lock-string-face fontified t) 4488 4500 (fontified t) 4500 4501 (fontified t) 4501 4516 (fontified t) 4516 4520 (face font-lock-string-face fontified t) 4520 4525 (fontified t) 4525 4528 (face font-lock-type-face fontified t) 4528 4529 (face font-lock-type-face c-type c-decl-id-start fontified t) 4529 4530 (fontified t) 4530 4541 (face font-lock-function-name-face fontified t) 4541 4542 (c-type c-decl-arg-start fontified t) 4542 4545 (face font-lock-constant-face fontified t) 4545 4547 (fontified t) 4547 4553 (face font-lock-type-face fontified t) 4553 4554 (fontified t category c-<-as-paren-syntax) 4554 4557 (face font-lock-constant-face fontified t) 4557 4559 (fontified t) 4559 4561 (face font-lock-type-face fontified t) 4561 4565 (face font-lock-type-face fontified t) 4565 4566 (fontified t category c-<-as-paren-syntax) 4566 4569 (face font-lock-constant-face fontified t) 4569 4571 (fontified t) 4571 4577 (fontified t) 4577 4578 (fontified t category c->-as-paren-syntax) 4578 4579 (fontified t category c->-as-paren-syntax) 4579 4580 (fontified t) 4580 4593 (face font-lock-variable-name-face fontified t) 4593 4594 (c-type c-decl-arg-start fontified t) 4594 4612 (fontified t) 4612 4615 (face font-lock-type-face fontified t) 4615 4616 (fontified t) 4616 4631 (face font-lock-variable-name-face fontified t) 4631 4654 (fontified t) 4654 4656 (fontified t c-is-sws t c-in-sws t) 4656 4657 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4657 4659 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4659 4670 (face font-lock-comment-face fontified t c-in-sws t) 4670 4672 (fontified t c-in-sws t c-is-sws t) 4672 4673 (face font-lock-constant-face fontified t c-is-sws t) 4673 4675 (face font-lock-constant-face fontified t) 4675 4700 (fontified t) 4700 4702 (face font-lock-keyword-face fontified t) 4702 4732 (fontified t) 4732 4735 (face font-lock-constant-face fontified t) 4735 4780 (fontified t) 4780 4799 (face font-lock-string-face fontified t) 4799 4803 (fontified t) 4803 4807 (face font-lock-string-face fontified t) 4807 4813 (fontified t) 4813 4817 (face font-lock-keyword-face fontified t) 4817 4818 (fontified t) 4818 4820 (face font-lock-keyword-face fontified t) 4820 4850 (fontified t) 4850 4853 (face font-lock-constant-face fontified t) 4853 4912 (fontified t) 4912 4931 (face font-lock-string-face fontified t) 4931 4953 (fontified t) 4953 4957 (face font-lock-string-face fontified t) 4957 4963 (fontified t) 4963 4967 (face font-lock-keyword-face fontified t) 4967 4968 (fontified t) 4968 4970 (face font-lock-keyword-face fontified t) 4970 4996 (fontified t) 4996 4999 (face font-lock-constant-face fontified t) 4999 5049 (fontified t) 5049 5058 (fontified t) 5058 5087 (face font-lock-string-face fontified t) 5087 5088 (fontified t) 5088 5093 (fontified t) 5093 5095 (face font-lock-keyword-face fontified t) 5095 5156 (fontified t) 5156 5161 (face font-lock-constant-face fontified t) 5161 5206 (fontified t) 5206 5210 (face font-lock-keyword-face fontified t) 5210 5258 (fontified t) 5258 5262 (face font-lock-keyword-face fontified t) 5262 5263 (fontified t) 5263 5265 (face font-lock-keyword-face fontified t) 5265 5293 (fontified t) 5293 5296 (face font-lock-constant-face fontified t) 5296 5341 (fontified t) 5341 5360 (face font-lock-string-face fontified t) 5360 5361 (face font-lock-string-face fontified t) 5361 5365 (face font-lock-string-face fontified t) 5365 5366 (fontified t) 5366 5383 (fontified t) 5383 5387 (face font-lock-string-face fontified t) 5387 5388 (fontified t) 5388 5389 (fontified t) 5389 5393 (fontified t) 5393 5395 (face font-lock-keyword-face fontified t) 5395 5456 (fontified t) 5456 5457 (fontified t) 5457 5459 (fontified t) 5460 5465 (face font-lock-constant-face) 5512 5516 (face font-lock-keyword-face) 5566 5570 (face font-lock-keyword-face) 5571 5573 (face font-lock-keyword-face) 5610 5614 (face font-lock-keyword-face) 5621 5624 (face font-lock-constant-face) 5634 5638 (face font-lock-string-face) 5640 5641 (face font-lock-comment-delimiter-face) 5641 5643 (face font-lock-comment-delimiter-face) 5643 5691 (face font-lock-comment-face) 5691 5692 (face font-lock-comment-face) 5692 5693 (face font-lock-comment-face) 5699 5701 (face font-lock-keyword-face) 5703 5704 (face font-lock-negation-char-face) 5721 5724 (face font-lock-keyword-face) 5726 5728 (face font-lock-type-face) 5728 5729 (face font-lock-type-face c-type c-decl-id-start) 5730 5731 (face font-lock-variable-name-face) 5771 5774 (face font-lock-constant-face) 5797 5803 (c-is-sws t c-in-sws t) 5803 5804 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 5804 5806 (c-in-sws t face font-lock-comment-delimiter-face) 5806 5815 (c-in-sws t face font-lock-comment-face) 5815 5821 (c-in-sws t c-is-sws t) 5821 5822 (c-is-sws t) 5834 5840 (c-is-sws t c-in-sws t) 5840 5841 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 5841 5843 (c-in-sws t face font-lock-comment-delimiter-face) 5843 5855 (c-in-sws t face font-lock-comment-face) 5855 5861 (c-in-sws t c-is-sws t) 5861 5862 (c-is-sws t) 5898 5899 (face font-lock-comment-delimiter-face) 5899 5901 (face font-lock-comment-delimiter-face) 5901 5903 (face font-lock-comment-face) 5903 5904 (face font-lock-comment-face) 5904 5913 (face font-lock-comment-face)) . 1) (undo-tree-id670 . -33) (undo-tree-id671 . -4486) (undo-tree-id672 . 1620) (undo-tree-id673 . -4486) (undo-tree-id674 . -4486) (undo-tree-id675 . -3837) (undo-tree-id676 . -3841) (undo-tree-id677 . -3547) (undo-tree-id678 . -3841) (undo-tree-id679 . 2114) (undo-tree-id680 . -3547) (undo-tree-id681 . -4486) (undo-tree-id682 . -4486) (undo-tree-id683 . -4319) (undo-tree-id684 . -3941) (undo-tree-id685 . -4429) (undo-tree-id686 . -3859) (undo-tree-id687 . -3956) (undo-tree-id688 . -4486) (undo-tree-id689 . -4486) (undo-tree-id690 . -4486) (undo-tree-id691 . -4486) (undo-tree-id692 . -4486) (undo-tree-id693 . -4486) (undo-tree-id694 . -4486) (undo-tree-id695 . -3547) 4487) nil (26692 28696 99367 171000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2083 . 2084) (nil fontified nil 2083 . 2084) (2083 . 2084) 2082) ((#("─" 0 1 (face font-lock-string-face fontified nil rear-nonsticky nil)) . 2083) (nil rear-nonsticky t 2083 . 2084) (t 26692 28666 407979 183000)) (26692 28666 359858 356000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 5321) (undo-tree-id696 . -1) (t 26692 28696 105979 70000)) nil (26692 29386 36377 135000) 0 nil])
nil
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . 4136) (t 26692 29386 42976 438000)) nil (26692 30314 636597 560000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . 4136)) nil (26692 30314 636597 264000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . 4136)) nil (26692 30314 636597 85000) 0 nil])
([nil nil ((4136 . 4141)) nil (26692 30314 636596 890000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . 4244)) nil (26692 30314 636596 609000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . 4244)) nil (26692 30314 636596 366000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . 4244)) nil (26692 30314 636596 174000) 0 nil])
([nil nil ((4244 . 4249)) nil (26692 30314 636595 761000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . 4352)) nil (26692 30314 636595 638000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . 4352)) nil (26692 30314 636595 474000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . 4352)) nil (26692 30314 636595 272000) 0 nil])
([nil nil ((4352 . 4357)) nil (26692 30314 636595 83000) 0 nil])
([nil nil ((4032 . 4033) (#(" " 0 1 (face font-lock-string-face fontified t)) . -4032) (undo-tree-id740 . -1) (undo-tree-id741 . -1) 4033 (4031 . 4033)) nil (26692 30314 636594 757000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 4032)) nil (26692 30314 636593 63000) 0 nil])
([nil nil ((4040 . 4041)) nil (26692 30314 636592 866000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3933 . 3934) (nil fontified nil 3933 . 3934) (3933 . 3934) 3932) nil (26692 30314 636592 616000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3934 . 3935) (nil fontified nil 3934 . 3935) (3934 . 3935) 3933) nil (26692 30314 636592 286000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4478 . 4479) (nil fontified nil 4478 . 4479) (4478 . 4479) 4477) nil (26692 30314 636591 933000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4479 . 4480) (nil fontified nil 4479 . 4480) (4479 . 4480) 4478) nil (26692 30314 636591 417000) 0 nil])
([nil current ((1 . 5982) (#("#include \"../include/visuals.hpp\"
#include \"../include/game.hpp\"
#include \"../include/utils.hpp\"
#include \"../include/word_machine.hpp\"
#include <ios>
#include <iostream>

const std::string vertical = \"│\";
const std::string horizontal = \"─\";

/*
const std::string corner_tl = \"┌\";
const std::string corner_tr = \"┐\";
const std::string corner_bl = \"└\";
const std::string corner_br = \"┘\";
                                */
const std::string corner_tl = \"╭\"; // top-left
const std::string corner_tr = \"╮\";
const std::string corner_bl = \"╰\";
const std::string corner_br = \"╯\";
const std::string cross_top = \"┬\";
const std::string cross_mid = \"┼\";
const std::string cross_bot = \"┴\";
const std::string vertical_sep = \"│\";
const std::string horizontal_sep = \"├\";
const std::string horizontal_end = \"┤\";

int show_invalid_word_msg_for = 0;
int show_invalid_length_msg_for = 0;

std::vector<std::string> keys = {\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\",
                                 \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",
                                 \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"};
std::string clean_keys = \"QWERTYUIOPASDFGHJKLZXCVBNM\";

void paint_keys(std::string letter, std::string color) {
  for (int i = 0; i < 26; i++) {
    if (std::string(1, clean_keys[i]) == letter) {
      keys[i] = paint(std::string(1, clean_keys[i]), color);
    }
  }
}

void print_keyboard() {
  std::cout << word_size_offset << left_margin + ' '
            << corner_tl + \"─────────────────────\" + corner_tr;
  std::cout << '\\n' << word_size_offset << left_margin + ' ' << vertical + \" \";
  for (int i = 0; i < 26; i++) {
    if (i == 10) {
      std::cout << vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"  \";

    } else if (i == 19) {
      std::cout << \" \" + vertical << \"\\n\";
      std::cout << word_size_offset << left_margin + ' ' << vertical + \"    \";
    }
    std::cout << keys[i] << ' ';
  }
  std::cout << \"   \" + vertical << '\\n';
  std::cout << word_size_offset << left_margin + ' '
            << corner_bl + \"─────────────────────\" + corner_br << '\\n';
}

void top_part(int i) {
  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREEN);
      break;
    case 2:
      std::cout << paint(corner_tl + \"───\" + corner_tr, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_tl + \"───\" + corner_tr, GREY);
      break;
    default:
      std::cout << corner_tl + \"───\" + corner_tr;
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void middle_part(std::vector<std::vector<std::string>> entered_words, int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    std::string cell = entered_words[i][j];
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREEN);
      paint_keys(cell, GREEN);
      break;
    case 2:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", YELLOW);
      paint_keys(cell, YELLOW);
      break;
    case 3:
      std::cout << paint(\"│ \" + (cell.empty() ? \" \" : cell) + \" │\", GREY);
      paint_keys(cell, GREY);
      break;
    default:
      std::cout << \"│ \" + (cell.empty() ? \" \" : cell) + \" │\";
    }
  }
  std::cout << '\\n';
  std::cout << left_margin;
}

void bottom_part(int i) {

  for (int j = 0; j < WORD_LENGTH; j++) {
    switch (letter_color[i][j]) {
    case 1:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREEN);
      break;
    case 2:
      std::cout << paint(corner_bl + \"───\" + corner_br, YELLOW);
      break;
    case 3:
      std::cout << paint(corner_bl + \"───\" + corner_br, GREY);
      break;
    default:
      std::cout << corner_bl + \"───\" + corner_br;
    }
  }
  std::cout << '\\n';
}

void print_menu() {
  std::cout << \"\\n\\n\\n\\n\";
  std::cout << left_margin
            << corner_tl + \"────────────────────────────────\" + corner_tr << '\\n';
  std::cout << left_margin
            << vertical + \"            OPTIONS             \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 1. Start 5 letter Wordle \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 2. Start 6 letter Wordle \" + vertical << '\\n';
  std::cout << left_margin
            << vertical + \" Press 3. Start 7 letter Wordle \" + vertical << '\\n';

  std::cout << left_margin
            << corner_bl + \"────────────────────────────────\" + corner_br << '\\n';
}

void print_board(std::vector<std::vector<std::string>> entered_words,
                 int game_state_code) {
  resize_window();
  // top margin
  std::cout << top_margin;

  if (game_state_code == 1) {
    std::cout << left_margin << word_size_offset << \"         You won!\" << '\\n';
  } else if (game_state_code == 2) {
    std::cout << left_margin << word_size_offset
              << \"   The word was: \" << get_solution() << '\\n';
  } else if (invalid_word_msg) {
    std::cout << left_margin << word_size_offset
              << \" Invalid word. Try again.\\n\";
    if (show_invalid_word_msg_for == 1) {
      invalid_word_msg = false;
      show_invalid_word_msg_for = 0;
    } else {
      show_invalid_word_msg_for++;
    }
  } else if (invalid_length_msg) {
    std::cout << left_margin << word_size_offset << \"    Attempt to short.\"
              << '\\n';
    if (show_invalid_length_msg_for == 1) {
      invalid_length_msg = false;
      show_invalid_length_msg_for = 0;
    } else {
      show_invalid_length_msg_for++;
    }
  } else if (show_menu) {
    print_menu();
  } else {
    std::cout << '\\n'; // To block weird shifts when text is actually shown
  }
  if (!show_menu) {
    for (int i = 0; i < AMOUNT_OF_WORDS; i++) {
      std::cout << left_margin;
      // top part
      top_part(i);
      // middle part
      middle_part(entered_words, i);
      // bottom part
      bottom_part(i);
    }

    print_keyboard();
  }
}
" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 33 (c-in-sws t face font-lock-string-face fontified t) 33 34 (c-in-sws t fontified t) 34 35 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 35 42 (c-in-sws t face font-lock-preprocessor-face fontified t) 42 43 (c-in-sws t fontified t) 43 64 (c-in-sws t face font-lock-string-face fontified t) 64 65 (c-in-sws t fontified t) 65 66 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 66 73 (c-in-sws t face font-lock-preprocessor-face fontified t) 73 74 (c-in-sws t fontified t) 74 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 135 (c-in-sws t face font-lock-string-face fontified t) 135 136 (c-in-sws t fontified t) 136 137 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 137 144 (c-in-sws t face font-lock-preprocessor-face fontified t) 144 145 (c-in-sws t fontified t) 145 146 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 146 149 (c-in-sws t face font-lock-string-face fontified t) 149 150 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 150 151 (c-in-sws t fontified t) 151 152 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 152 159 (c-in-sws t face font-lock-preprocessor-face fontified t) 159 160 (c-in-sws t fontified t) 160 161 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 161 169 (c-in-sws t face font-lock-string-face fontified t) 169 170 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 170 171 (c-in-sws t fontified t) 171 172 (c-is-sws t c-in-sws t fontified t) 172 173 (c-is-sws t face font-lock-keyword-face fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 181 (face font-lock-constant-face fontified t) 181 183 (fontified t) 183 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 190 (fontified t) 190 198 (face font-lock-variable-name-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-string-face fontified t) 204 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 215 (face font-lock-constant-face fontified t) 215 217 (fontified t) 217 222 (face font-lock-type-face fontified t) 222 223 (face font-lock-type-face c-type c-decl-id-start fontified t) 223 224 (fontified t) 224 234 (face font-lock-variable-name-face fontified t) 234 237 (fontified t) 237 240 (face font-lock-string-face fontified t) 240 243 (fontified t) 243 244 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 244 245 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 245 386 (c-in-sws t face font-lock-comment-face fontified t) 386 420 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 420 421 (c-in-sws t fontified t) 421 422 (c-is-sws t face font-lock-keyword-face fontified t) 422 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 430 (face font-lock-constant-face fontified t) 430 432 (fontified t) 432 437 (face font-lock-type-face fontified t) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified t) 438 439 (fontified t) 439 448 (face font-lock-variable-name-face fontified t) 448 451 (fontified t) 451 454 (face font-lock-string-face fontified t) 454 455 (fontified t) 455 456 (c-is-sws t c-in-sws t fontified t) 456 457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 457 459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 459 468 (c-in-sws t face font-lock-comment-face fontified t) 468 469 (c-is-sws t face font-lock-keyword-face fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (fontified t) 474 477 (face font-lock-constant-face fontified t) 477 479 (fontified t) 479 484 (face font-lock-type-face fontified t) 484 485 (face font-lock-type-face c-type c-decl-id-start fontified t) 485 486 (fontified t) 486 495 (face font-lock-variable-name-face fontified t) 495 498 (fontified t) 498 501 (face font-lock-string-face fontified t) 501 503 (fontified t) 503 508 (face font-lock-keyword-face fontified t) 508 509 (fontified t) 509 512 (face font-lock-constant-face fontified t) 512 514 (fontified t) 514 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face c-type c-decl-id-start fontified t) 520 521 (fontified t) 521 530 (face font-lock-variable-name-face fontified t) 530 533 (fontified t) 533 536 (face font-lock-string-face fontified t) 536 538 (fontified t) 538 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 554 (face font-lock-type-face fontified t) 554 555 (face font-lock-type-face c-type c-decl-id-start fontified t) 555 556 (fontified t) 556 565 (face font-lock-variable-name-face fontified t) 565 568 (fontified t) 568 571 (face font-lock-string-face fontified t) 571 573 (fontified t) 573 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-constant-face fontified t) 582 584 (fontified t) 584 589 (face font-lock-type-face fontified t) 589 590 (face font-lock-type-face c-type c-decl-id-start fontified t) 590 591 (fontified t) 591 600 (face font-lock-variable-name-face fontified t) 600 603 (fontified t) 603 606 (face font-lock-string-face fontified t) 606 608 (fontified t) 608 613 (face font-lock-keyword-face fontified t) 613 614 (fontified t) 614 617 (face font-lock-constant-face fontified t) 617 619 (fontified t) 619 624 (face font-lock-type-face fontified t) 624 625 (face font-lock-type-face c-type c-decl-id-start fontified t) 625 626 (fontified t) 626 635 (face font-lock-variable-name-face fontified t) 635 638 (fontified t) 638 641 (face font-lock-string-face fontified t) 641 643 (fontified t) 643 648 (face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (face font-lock-constant-face fontified t) 652 654 (fontified t) 654 659 (face font-lock-type-face fontified t) 659 660 (face font-lock-type-face c-type c-decl-id-start fontified t) 660 661 (fontified t) 661 670 (face font-lock-variable-name-face fontified t) 670 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 678 (fontified t) 678 683 (face font-lock-keyword-face fontified t) 683 684 (fontified t) 684 687 (face font-lock-constant-face fontified t) 687 689 (fontified t) 689 694 (face font-lock-type-face fontified t) 694 695 (face font-lock-type-face c-type c-decl-id-start fontified t) 695 696 (fontified t) 696 708 (face font-lock-variable-name-face fontified t) 708 711 (fontified t) 711 714 (face font-lock-string-face fontified t) 714 716 (fontified t) 716 721 (face font-lock-keyword-face fontified t) 721 722 (fontified t) 722 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 732 (face font-lock-type-face fontified t) 732 733 (face font-lock-type-face c-type c-decl-id-start fontified t) 733 734 (fontified t) 734 748 (face font-lock-variable-name-face fontified t) 748 751 (fontified t) 751 754 (face font-lock-string-face fontified t) 754 756 (fontified t) 756 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 765 (face font-lock-constant-face fontified t) 765 767 (fontified t) 767 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 788 (face font-lock-variable-name-face fontified t) 788 791 (fontified t) 791 794 (face font-lock-string-face fontified t) 794 797 (fontified t) 797 799 (face font-lock-type-face fontified t) 799 800 (face font-lock-type-face c-type c-decl-id-start fontified t) 800 801 (fontified t) 801 826 (face font-lock-variable-name-face fontified t) 826 832 (fontified t) 832 834 (face font-lock-type-face fontified t) 834 835 (face font-lock-type-face c-type c-decl-id-start fontified t) 835 836 (fontified t) 836 863 (face font-lock-variable-name-face fontified t) 863 870 (fontified t) 870 873 (face font-lock-constant-face fontified t) 873 875 (fontified t) 875 881 (face font-lock-type-face fontified t) 881 882 (fontified t category c-<-as-paren-syntax) 882 885 (face font-lock-constant-face fontified t) 885 887 (fontified t) 887 893 (face font-lock-type-face fontified t) 893 894 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 894 895 (fontified t) 895 899 (face font-lock-variable-name-face fontified t) 899 903 (fontified t) 903 906 (face font-lock-string-face fontified t) 906 908 (fontified t) 908 911 (face font-lock-string-face fontified t) 911 913 (fontified t) 913 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 921 (face font-lock-string-face fontified t) 921 923 (fontified t) 923 926 (face font-lock-string-face fontified t) 926 928 (fontified t) 928 931 (face font-lock-string-face fontified t) 931 933 (fontified t) 933 936 (face font-lock-string-face fontified t) 936 938 (fontified t) 938 941 (face font-lock-string-face fontified t) 941 943 (fontified t) 943 946 (face font-lock-string-face fontified t) 946 981 (fontified t) 981 984 (face font-lock-string-face fontified t) 984 986 (fontified t) 986 989 (face font-lock-string-face fontified t) 989 991 (fontified t) 991 994 (face font-lock-string-face fontified t) 994 996 (fontified t) 996 999 (face font-lock-string-face fontified t) 999 1001 (fontified t) 1001 1004 (face font-lock-string-face fontified t) 1004 1006 (fontified t) 1006 1009 (face font-lock-string-face fontified t) 1009 1011 (fontified t) 1011 1014 (face font-lock-string-face fontified t) 1014 1016 (fontified t) 1016 1019 (face font-lock-string-face fontified t) 1019 1021 (fontified t) 1021 1024 (face font-lock-string-face fontified t) 1024 1059 (fontified t) 1059 1062 (face font-lock-string-face fontified t) 1062 1064 (fontified t) 1064 1067 (face font-lock-string-face fontified t) 1067 1069 (fontified t) 1069 1072 (face font-lock-string-face fontified t) 1072 1074 (fontified t) 1074 1077 (face font-lock-string-face fontified t) 1077 1079 (fontified t) 1079 1082 (face font-lock-string-face fontified t) 1082 1084 (fontified t) 1084 1087 (face font-lock-string-face fontified t) 1087 1089 (fontified t) 1089 1092 (face font-lock-string-face fontified t) 1092 1094 (fontified t) 1094 1097 (face font-lock-string-face fontified t) 1097 1100 (fontified t) 1100 1103 (face font-lock-constant-face fontified t) 1103 1105 (fontified t) 1105 1110 (face font-lock-type-face fontified t) 1110 1111 (face font-lock-type-face c-type c-decl-id-start fontified t) 1111 1112 (fontified t) 1112 1122 (face font-lock-variable-name-face fontified t) 1122 1125 (fontified t) 1125 1153 (face font-lock-string-face fontified t) 1153 1156 (fontified t) 1156 1159 (face font-lock-type-face fontified t) 1159 1160 (face font-lock-type-face c-type c-decl-id-start fontified t) 1160 1161 (fontified t) 1161 1171 (face font-lock-function-name-face fontified t) 1171 1172 (c-type c-decl-arg-start fontified t) 1172 1175 (face font-lock-constant-face fontified t) 1175 1177 (fontified t) 1177 1183 (face font-lock-type-face fontified t) 1183 1184 (fontified t) 1184 1190 (face font-lock-variable-name-face fontified t) 1190 1191 (c-type c-decl-arg-start fontified t) 1191 1192 (fontified t) 1192 1195 (face font-lock-constant-face fontified t) 1195 1197 (fontified t) 1197 1203 (face font-lock-type-face fontified t) 1203 1204 (fontified t) 1204 1209 (face font-lock-variable-name-face fontified t) 1209 1215 (fontified t) 1215 1218 (face font-lock-keyword-face fontified t) 1218 1220 (fontified t) 1220 1222 (face font-lock-type-face fontified t) 1222 1223 (face font-lock-type-face c-type c-decl-id-start fontified t) 1223 1224 (fontified t) 1224 1225 (face font-lock-variable-name-face fontified t) 1225 1250 (fontified t) 1250 1252 (face font-lock-keyword-face fontified t) 1252 1254 (fontified t) 1254 1257 (face font-lock-constant-face fontified t) 1257 1319 (fontified t) 1319 1322 (face font-lock-constant-face fontified t) 1322 1371 (fontified t) 1371 1374 (face font-lock-type-face fontified t) 1374 1375 (face font-lock-type-face c-type c-decl-id-start fontified t) 1375 1376 (fontified t) 1376 1390 (face font-lock-function-name-face fontified t) 1390 1397 (fontified t) 1397 1400 (face font-lock-constant-face fontified t) 1400 1444 (fontified t) 1444 1447 (face font-lock-string-face fontified t) 1447 1475 (fontified t) 1475 1498 (face font-lock-string-face fontified t) 1498 1500 (fontified t) 1500 1512 (fontified t) 1512 1514 (fontified t) 1514 1517 (face font-lock-constant-face fontified t) 1517 1527 (fontified t) 1527 1531 (face font-lock-string-face fontified t) 1531 1569 (fontified t) 1569 1572 (face font-lock-string-face fontified t) 1572 1587 (fontified t) 1587 1590 (face font-lock-string-face fontified t) 1590 1594 (fontified t) 1594 1597 (face font-lock-keyword-face fontified t) 1597 1599 (fontified t) 1599 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face c-type c-decl-id-start fontified t) 1602 1603 (fontified t) 1603 1604 (face font-lock-variable-name-face fontified t) 1604 1629 (fontified t) 1629 1631 (face font-lock-keyword-face fontified t) 1631 1650 (fontified t) 1650 1653 (face font-lock-constant-face fontified t) 1653 1675 (fontified t) 1675 1679 (face font-lock-string-face fontified t) 1679 1687 (fontified t) 1687 1690 (face font-lock-constant-face fontified t) 1690 1734 (fontified t) 1734 1737 (face font-lock-string-face fontified t) 1737 1752 (fontified t) 1752 1756 (face font-lock-string-face fontified t) 1756 1765 (fontified t) 1765 1769 (face font-lock-keyword-face fontified t) 1769 1770 (fontified t) 1770 1772 (face font-lock-keyword-face fontified t) 1772 1791 (fontified t) 1791 1794 (face font-lock-constant-face fontified t) 1794 1804 (fontified t) 1804 1807 (face font-lock-string-face fontified t) 1807 1822 (fontified t) 1822 1826 (face font-lock-string-face fontified t) 1826 1834 (fontified t) 1834 1837 (face font-lock-constant-face fontified t) 1837 1881 (fontified t) 1881 1884 (face font-lock-string-face fontified t) 1884 1899 (fontified t) 1899 1905 (face font-lock-string-face fontified t) 1905 1917 (fontified t) 1917 1920 (face font-lock-constant-face fontified t) 1920 1941 (fontified t) 1941 1944 (face font-lock-string-face fontified t) 1944 1952 (fontified t) 1952 1955 (face font-lock-constant-face fontified t) 1955 1965 (fontified t) 1965 1970 (face font-lock-string-face fontified t) 1970 1985 (fontified t) 1985 1989 (face font-lock-string-face fontified t) 1989 1993 (fontified t) 1993 1996 (face font-lock-constant-face fontified t) 1996 2040 (fontified t) 2040 2043 (face font-lock-string-face fontified t) 2043 2071 (fontified t) 2071 2094 (face font-lock-string-face fontified t) 2094 2110 (fontified t) 2110 2114 (face font-lock-string-face fontified t) 2114 2119 (fontified t) 2119 2122 (face font-lock-type-face fontified t) 2122 2123 (face font-lock-type-face c-type c-decl-id-start fontified t) 2123 2124 (fontified t) 2124 2132 (face font-lock-function-name-face fontified t) 2132 2133 (c-type c-decl-arg-start fontified t) 2133 2136 (face font-lock-type-face fontified t) 2136 2137 (fontified t) 2137 2138 (face font-lock-variable-name-face fontified t) 2138 2144 (fontified t) 2144 2147 (face font-lock-keyword-face fontified t) 2147 2149 (fontified t) 2149 2151 (face font-lock-type-face fontified t) 2151 2152 (face font-lock-type-face c-type c-decl-id-start fontified t) 2152 2153 (fontified t) 2153 2154 (face font-lock-variable-name-face fontified t) 2154 2188 (fontified t) 2188 2194 (face font-lock-keyword-face fontified t) 2194 2222 (fontified t) 2222 2226 (face font-lock-keyword-face fontified t) 2226 2228 (fontified t) 2228 2229 (c-type c-decl-end fontified t) 2229 2236 (fontified t) 2236 2239 (face font-lock-constant-face fontified t) 2239 2267 (fontified t) 2267 2272 (face font-lock-string-face fontified t) 2272 2300 (fontified t) 2300 2305 (face font-lock-keyword-face fontified t) 2305 2311 (fontified t) 2311 2315 (face font-lock-keyword-face fontified t) 2315 2317 (fontified t) 2317 2318 (c-type c-decl-end fontified t) 2318 2325 (fontified t) 2325 2328 (face font-lock-constant-face fontified t) 2328 2356 (fontified t) 2356 2361 (face font-lock-string-face fontified t) 2361 2390 (fontified t) 2390 2395 (face font-lock-keyword-face fontified t) 2395 2401 (fontified t) 2401 2405 (face font-lock-keyword-face fontified t) 2405 2407 (fontified t) 2407 2408 (c-type c-decl-end fontified t) 2408 2415 (fontified t) 2415 2418 (face font-lock-constant-face fontified t) 2418 2446 (fontified t) 2446 2451 (face font-lock-string-face fontified t) 2451 2478 (fontified t) 2478 2483 (face font-lock-keyword-face fontified t) 2483 2489 (fontified t) 2489 2496 (face font-lock-keyword-face fontified t) 2496 2497 (c-type c-decl-end fontified t) 2497 2504 (fontified t) 2504 2507 (face font-lock-constant-face fontified t) 2507 2529 (fontified t) 2529 2534 (face font-lock-string-face fontified t) 2534 2560 (fontified t) 2560 2563 (face font-lock-constant-face fontified t) 2563 2573 (fontified t) 2573 2577 (face font-lock-string-face fontified t) 2577 2581 (fontified t) 2581 2584 (face font-lock-constant-face fontified t) 2584 2610 (fontified t) 2610 2613 (face font-lock-type-face fontified t) 2613 2614 (face font-lock-type-face c-type c-decl-id-start fontified t) 2614 2615 (fontified t) 2615 2626 (face font-lock-function-name-face fontified t) 2626 2627 (c-type c-decl-arg-start fontified t) 2627 2630 (face font-lock-constant-face fontified t) 2630 2632 (fontified t) 2632 2638 (face font-lock-type-face fontified t) 2638 2639 (fontified t category c-<-as-paren-syntax) 2639 2642 (face font-lock-constant-face fontified t) 2642 2644 (fontified t) 2644 2650 (face font-lock-type-face fontified t) 2650 2651 (fontified t category c-<-as-paren-syntax) 2651 2654 (face font-lock-constant-face fontified t) 2654 2656 (fontified t) 2656 2662 (face font-lock-type-face fontified t) 2662 2663 (fontified t category c->-as-paren-syntax) 2663 2664 (fontified t category c->-as-paren-syntax) 2664 2665 (fontified t) 2665 2678 (face font-lock-variable-name-face fontified t) 2678 2679 (c-type c-decl-arg-start fontified t) 2679 2680 (fontified t) 2680 2683 (face font-lock-type-face fontified t) 2683 2684 (fontified t) 2684 2685 (face font-lock-variable-name-face fontified t) 2685 2692 (fontified t) 2692 2695 (face font-lock-keyword-face fontified t) 2695 2697 (fontified t) 2697 2699 (face font-lock-type-face fontified t) 2699 2700 (face font-lock-type-face c-type c-decl-id-start fontified t) 2700 2701 (fontified t) 2701 2702 (face font-lock-variable-name-face fontified t) 2702 2736 (fontified t) 2736 2739 (face font-lock-constant-face fontified t) 2739 2741 (fontified t) 2741 2746 (face font-lock-type-face fontified t) 2746 2747 (face font-lock-type-face c-type c-decl-id-start fontified t) 2747 2748 (fontified t) 2748 2752 (face font-lock-variable-name-face fontified t) 2752 2780 (fontified t) 2780 2786 (face font-lock-keyword-face fontified t) 2786 2814 (fontified t) 2814 2818 (face font-lock-keyword-face fontified t) 2818 2820 (fontified t) 2820 2821 (c-type c-decl-end fontified t) 2821 2828 (fontified t) 2828 2831 (face font-lock-constant-face fontified t) 2831 2847 (fontified t) 2847 2851 (face font-lock-string-face fontified t) 2851 2870 (fontified t) 2870 2873 (face font-lock-string-face fontified t) 2873 2884 (fontified t) 2884 2888 (face font-lock-string-face fontified t) 2888 2935 (fontified t) 2935 2940 (face font-lock-keyword-face fontified t) 2940 2946 (fontified t) 2946 2950 (face font-lock-keyword-face fontified t) 2950 2952 (fontified t) 2952 2953 (c-type c-decl-end fontified t) 2953 2960 (fontified t) 2960 2963 (face font-lock-constant-face fontified t) 2963 2979 (fontified t) 2979 2983 (face font-lock-string-face fontified t) 2983 3002 (fontified t) 3002 3005 (face font-lock-string-face fontified t) 3005 3012 (fontified t) 3012 3016 (fontified t) 3016 3020 (fontified t face font-lock-string-face) 3020 3031 (fontified t) 3031 3069 (fontified t) 3069 3074 (face font-lock-keyword-face fontified t) 3074 3080 (fontified t) 3080 3084 (face font-lock-keyword-face fontified t) 3084 3086 (fontified t) 3086 3087 (c-type c-decl-end fontified t) 3087 3094 (fontified t) 3094 3097 (face font-lock-constant-face fontified t) 3097 3113 (fontified t) 3113 3117 (face font-lock-string-face fontified t) 3117 3136 (fontified t) 3136 3139 (face font-lock-string-face fontified t) 3139 3150 (fontified t) 3150 3154 (face font-lock-string-face fontified t) 3154 3199 (fontified t) 3199 3204 (face font-lock-keyword-face fontified t) 3204 3210 (fontified t) 3210 3217 (face font-lock-keyword-face fontified t) 3217 3218 (c-type c-decl-end fontified t) 3218 3225 (fontified t) 3225 3228 (face font-lock-constant-face fontified t) 3228 3238 (fontified t) 3238 3242 (face font-lock-string-face fontified t) 3242 3261 (fontified t) 3261 3264 (face font-lock-string-face fontified t) 3264 3275 (fontified t) 3275 3279 (face font-lock-string-face fontified t) 3279 3293 (fontified t) 3293 3296 (face font-lock-constant-face fontified t) 3296 3306 (fontified t) 3306 3310 (face font-lock-string-face fontified t) 3310 3314 (fontified t) 3314 3317 (face font-lock-constant-face fontified t) 3317 3343 (fontified t) 3343 3346 (face font-lock-type-face fontified t) 3346 3347 (face font-lock-type-face c-type c-decl-id-start fontified t) 3347 3348 (fontified t) 3348 3359 (face font-lock-function-name-face fontified t) 3359 3360 (c-type c-decl-arg-start fontified t) 3360 3363 (face font-lock-type-face fontified t) 3363 3364 (fontified t) 3364 3365 (face font-lock-variable-name-face fontified t) 3365 3372 (fontified t) 3372 3375 (face font-lock-keyword-face fontified t) 3375 3377 (fontified t) 3377 3379 (face font-lock-type-face fontified t) 3379 3380 (face font-lock-type-face c-type c-decl-id-start fontified t) 3380 3381 (fontified t) 3381 3382 (face font-lock-variable-name-face fontified t) 3382 3416 (fontified t) 3416 3422 (face font-lock-keyword-face fontified t) 3422 3450 (fontified t) 3450 3454 (face font-lock-keyword-face fontified t) 3454 3456 (fontified t) 3456 3457 (c-type c-decl-end fontified t) 3457 3464 (fontified t) 3464 3467 (face font-lock-constant-face fontified t) 3467 3495 (fontified t) 3495 3500 (face font-lock-string-face fontified t) 3500 3528 (fontified t) 3528 3533 (face font-lock-keyword-face fontified t) 3533 3539 (fontified t) 3539 3543 (face font-lock-keyword-face fontified t) 3543 3545 (fontified t) 3545 3546 (c-type c-decl-end fontified t) 3546 3553 (fontified t) 3553 3556 (face font-lock-constant-face fontified t) 3556 3584 (fontified t) 3584 3589 (face font-lock-string-face fontified t) 3589 3618 (fontified t) 3618 3623 (face font-lock-keyword-face fontified t) 3623 3629 (fontified t) 3629 3633 (face font-lock-keyword-face fontified t) 3633 3635 (fontified t) 3635 3636 (c-type c-decl-end fontified t) 3636 3643 (fontified t) 3643 3646 (face font-lock-constant-face fontified t) 3646 3674 (fontified t) 3674 3679 (face font-lock-string-face fontified t) 3679 3706 (fontified t) 3706 3711 (face font-lock-keyword-face fontified t) 3711 3717 (fontified t) 3717 3724 (face font-lock-keyword-face fontified t) 3724 3725 (c-type c-decl-end fontified t) 3725 3732 (fontified t) 3732 3735 (face font-lock-constant-face fontified t) 3735 3757 (fontified t) 3757 3762 (face font-lock-string-face fontified t) 3762 3788 (fontified t) 3788 3791 (face font-lock-constant-face fontified t) 3791 3801 (fontified t) 3801 3805 (face font-lock-string-face fontified t) 3805 3810 (fontified t) 3810 3813 (face font-lock-type-face fontified t) 3813 3814 (face font-lock-type-face c-type c-decl-id-start fontified t) 3814 3815 (fontified t) 3815 3825 (face font-lock-function-name-face fontified t) 3825 3832 (fontified t) 3832 3835 (face font-lock-constant-face fontified t) 3835 3845 (fontified t) 3845 3855 (face font-lock-string-face fontified t) 3855 3859 (fontified t) 3859 3862 (face font-lock-constant-face fontified t) 3862 3911 (fontified t) 3911 3932 (face font-lock-string-face fontified t) 3932 3933 (face font-lock-string-face rear-nonsticky t fontified t) 3933 3934 (face font-lock-string-face rear-nonsticky t fontified t) 3934 3945 (face font-lock-string-face fontified t) 3945 3961 (fontified t) 3961 3965 (face font-lock-string-face fontified t) 3965 3967 (fontified t) 3967 3969 (fontified t) 3969 3972 (face font-lock-constant-face fontified t) 3972 4020 (fontified t) 4020 4032 (face font-lock-string-face fontified t) 4032 4033 (face font-lock-string-face fontified t) 4033 4041 (face font-lock-string-face fontified t) 4041 4042 (face font-lock-string-face fontified t) 4042 4054 (face font-lock-string-face fontified t) 4054 4069 (fontified t) 4069 4073 (face font-lock-string-face fontified t) 4073 4075 (fontified t) 4075 4077 (fontified t) 4077 4080 (face font-lock-constant-face fontified t) 4080 4128 (fontified t) 4128 4139 (face font-lock-string-face fontified t) 4139 4140 (face font-lock-string-face fontified t) 4140 4141 (face font-lock-string-face fontified t) 4141 4142 (face font-lock-string-face fontified t) 4142 4143 (face font-lock-string-face fontified t) 4143 4144 (face font-lock-string-face fontified t) 4144 4162 (face font-lock-string-face fontified t) 4162 4177 (fontified t) 4177 4181 (face font-lock-string-face fontified t) 4181 4183 (fontified t) 4183 4185 (fontified t) 4185 4188 (face font-lock-constant-face fontified t) 4188 4236 (fontified t) 4236 4247 (face font-lock-string-face fontified t) 4247 4248 (face font-lock-string-face fontified t) 4248 4249 (face font-lock-string-face fontified t) 4249 4250 (face font-lock-string-face fontified t) 4250 4251 (face font-lock-string-face fontified t) 4251 4252 (face font-lock-string-face fontified t) 4252 4270 (face font-lock-string-face fontified t) 4270 4285 (fontified t) 4285 4289 (face font-lock-string-face fontified t) 4289 4291 (fontified t) 4291 4293 (fontified t) 4293 4296 (face font-lock-constant-face fontified t) 4296 4344 (fontified t) 4344 4355 (face font-lock-string-face fontified t) 4355 4356 (face font-lock-string-face fontified t) 4356 4357 (face font-lock-string-face fontified t) 4357 4358 (face font-lock-string-face fontified t) 4358 4359 (face font-lock-string-face fontified t) 4359 4360 (face font-lock-string-face fontified t) 4360 4378 (face font-lock-string-face fontified t) 4378 4393 (fontified t) 4393 4397 (face font-lock-string-face fontified t) 4397 4399 (fontified t) 4399 4402 (fontified t) 4402 4405 (face font-lock-constant-face fontified t) 4405 4454 (fontified t) 4454 4477 (face font-lock-string-face fontified t) 4477 4478 (face font-lock-string-face rear-nonsticky t fontified t) 4478 4479 (face font-lock-string-face rear-nonsticky t fontified t) 4479 4488 (face font-lock-string-face fontified t) 4488 4504 (fontified t) 4504 4508 (face font-lock-string-face fontified t) 4508 4510 (fontified t) 4510 4511 (fontified t) 4511 4513 (fontified t) 4513 4516 (face font-lock-type-face fontified t) 4516 4517 (face font-lock-type-face c-type c-decl-id-start fontified t) 4517 4518 (fontified t) 4518 4529 (face font-lock-function-name-face fontified t) 4529 4530 (c-type c-decl-arg-start fontified t) 4530 4533 (face font-lock-constant-face fontified t) 4533 4535 (fontified t) 4535 4541 (face font-lock-type-face fontified t) 4541 4542 (fontified t category c-<-as-paren-syntax) 4542 4543 (face font-lock-constant-face fontified t) 4543 4545 (face font-lock-constant-face fontified t) 4545 4547 (fontified t) 4547 4553 (face font-lock-type-face fontified t) 4553 4554 (fontified t category c-<-as-paren-syntax) 4554 4557 (face font-lock-constant-face fontified t) 4557 4559 (fontified t) 4559 4565 (face font-lock-type-face fontified t) 4565 4566 (fontified t category c->-as-paren-syntax) 4566 4567 (fontified t category c->-as-paren-syntax) 4567 4568 (fontified t) 4568 4581 (face font-lock-variable-name-face fontified t) 4581 4582 (c-type c-decl-arg-start fontified t) 4582 4600 (fontified t) 4600 4603 (face font-lock-type-face fontified t) 4603 4604 (fontified t) 4604 4613 (face font-lock-variable-name-face fontified t) 4613 4619 (face font-lock-variable-name-face fontified t) 4619 4642 (fontified t) 4642 4644 (fontified t c-is-sws t c-in-sws t) 4644 4645 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 4645 4647 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4647 4658 (face font-lock-comment-face fontified t c-in-sws t) 4658 4660 (fontified t c-in-sws t c-is-sws t) 4660 4661 (face font-lock-constant-face fontified t c-is-sws t) 4661 4663 (face font-lock-constant-face fontified t) 4663 4688 (fontified t) 4688 4690 (face font-lock-keyword-face fontified t) 4690 4720 (fontified t) 4720 4723 (face font-lock-constant-face fontified t) 4723 4768 (fontified t) 4768 4787 (face font-lock-string-face fontified t) 4787 4791 (fontified t) 4791 4795 (face font-lock-string-face fontified t) 4795 4801 (fontified t) 4801 4805 (face font-lock-keyword-face fontified t) 4805 4806 (fontified t) 4806 4808 (face font-lock-keyword-face fontified t) 4808 4838 (fontified t) 4838 4841 (face font-lock-constant-face fontified t) 4841 4900 (fontified t) 4900 4919 (face font-lock-string-face fontified t) 4919 4941 (fontified t) 4941 4945 (face font-lock-string-face fontified t) 4945 4951 (fontified t) 4951 4955 (face font-lock-keyword-face fontified t) 4955 4956 (fontified t) 4956 4958 (face font-lock-keyword-face fontified t) 4958 4984 (fontified t) 4984 4987 (face font-lock-constant-face fontified t) 4987 5046 (fontified t) 5046 5075 (face font-lock-string-face fontified t) 5075 5081 (fontified t) 5081 5083 (face font-lock-keyword-face fontified t) 5083 5144 (fontified t) 5144 5149 (face font-lock-constant-face fontified t) 5149 5194 (fontified t) 5194 5198 (face font-lock-keyword-face fontified t) 5198 5246 (fontified t) 5246 5250 (face font-lock-keyword-face fontified t) 5250 5251 (fontified t) 5251 5253 (face font-lock-keyword-face fontified t) 5253 5277 (fontified t) 5277 5281 (fontified t) 5281 5284 (face font-lock-constant-face fontified t) 5284 5329 (fontified t) 5329 5332 (face font-lock-string-face fontified t) 5332 5352 (face font-lock-string-face fontified t) 5352 5353 (fontified t) 5353 5370 (fontified t) 5370 5374 (face font-lock-string-face fontified t) 5374 5380 (fontified t) 5380 5382 (face font-lock-keyword-face fontified t) 5382 5447 (fontified t) 5447 5452 (face font-lock-constant-face fontified t) 5452 5469 (fontified t) 5469 5489 (fontified t) 5489 5499 (fontified t) 5499 5503 (face font-lock-keyword-face fontified t) 5503 5553 (fontified t) 5553 5557 (face font-lock-keyword-face fontified t) 5557 5558 (fontified t) 5558 5560 (face font-lock-keyword-face fontified t) 5560 5577 (fontified t) 5577 5593 (fontified t) 5593 5597 (fontified t) 5597 5601 (face font-lock-keyword-face fontified t) 5601 5608 (fontified t) 5608 5611 (face font-lock-constant-face fontified t) 5611 5621 (fontified t) 5621 5625 (face font-lock-string-face fontified t) 5625 5627 (fontified t) 5627 5630 (face font-lock-comment-delimiter-face fontified t) 5630 5680 (face font-lock-comment-face fontified t) 5680 5686 (fontified t) 5686 5688 (face font-lock-keyword-face fontified t) 5688 5689 (fontified t) 5689 5690 (fontified t) 5690 5691 (face font-lock-negation-char-face fontified t) 5691 5692 (fontified t) 5692 5704 (fontified t) 5704 5708 (fontified t) 5708 5711 (face font-lock-keyword-face fontified t) 5711 5713 (fontified t) 5713 5715 (face font-lock-type-face fontified t) 5715 5716 (face font-lock-type-face c-type c-decl-id-start fontified t) 5716 5717 (fontified t) 5717 5718 (face font-lock-variable-name-face fontified t) 5718 5758 (fontified t) 5758 5761 (face font-lock-constant-face fontified t) 5761 5784 (fontified t) 5784 5790 (fontified t c-is-sws t c-in-sws t) 5790 5791 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5791 5793 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5793 5795 (face font-lock-comment-face fontified t c-in-sws t) 5795 5802 (face font-lock-comment-face fontified t c-in-sws t) 5802 5808 (fontified t c-in-sws t c-is-sws t) 5808 5809 (fontified t c-is-sws t) 5809 5821 (fontified t) 5821 5827 (fontified t c-is-sws t c-in-sws t) 5827 5828 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5828 5830 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5830 5842 (face font-lock-comment-face fontified t c-in-sws t) 5842 5848 (fontified t c-in-sws t c-is-sws t) 5848 5849 (fontified t c-is-sws t) 5849 5879 (fontified t) 5879 5885 (fontified t c-is-sws t c-in-sws t) 5885 5886 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5886 5888 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 5888 5900 (face font-lock-comment-face fontified t c-in-sws t) 5900 5901 (fontified t c-in-sws t c-is-sws t) 5901 5903 (fontified t c-in-sws t c-is-sws t) 5903 5906 (fontified t c-in-sws t c-is-sws t) 5906 5907 (fontified t c-is-sws t) 5907 5922 (fontified t) 5922 5957 (fontified t)) . 1) (undo-tree-id697 . -33) (undo-tree-id698 . -4478) (undo-tree-id699 . 1915) (undo-tree-id700 . -3931) (undo-tree-id701 . 2023) (undo-tree-id702 . -3931) (undo-tree-id703 . -3931) (undo-tree-id704 . -4478) (undo-tree-id705 . -4478) (undo-tree-id706 . -4427) (undo-tree-id707 . -5332) (undo-tree-id708 . -421) (undo-tree-id709 . -421) (undo-tree-id710 . -421) (undo-tree-id711 . -421) (undo-tree-id712 . -421) (undo-tree-id713 . -421) (undo-tree-id714 . -421) (undo-tree-id715 . -421) (undo-tree-id716 . -4498) (undo-tree-id717 . -3943) (undo-tree-id718 . -4327) (undo-tree-id719 . -421) (undo-tree-id720 . -5332) (undo-tree-id721 . -4478) (undo-tree-id722 . -4478) (undo-tree-id723 . -3700) (undo-tree-id724 . 1597) (undo-tree-id725 . -3931) (undo-tree-id726 . -3932) (undo-tree-id727 . -3932) (undo-tree-id728 . -3933) (undo-tree-id729 . -4477) (undo-tree-id730 . -4427) (undo-tree-id731 . -4478) (undo-tree-id732 . -4478) (undo-tree-id733 . -4478) (undo-tree-id734 . -4478) (undo-tree-id735 . -4478) (undo-tree-id736 . -4478) (undo-tree-id737 . -4478) (undo-tree-id738 . -4478) (undo-tree-id739 . -3700) 4479) nil (26692 30314 636588 512000) 0 nil])
nil
